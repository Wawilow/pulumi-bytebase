// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package bytebase

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/wawilow/pulumi-bytebase/sdk/go/bytebase/internal"
)

var _ = internal.GetEnvOrDefault

type DatabaseCatalog struct {
	Schemas []DatabaseCatalogSchema `pulumi:"schemas"`
}

// DatabaseCatalogInput is an input type that accepts DatabaseCatalogArgs and DatabaseCatalogOutput values.
// You can construct a concrete instance of `DatabaseCatalogInput` via:
//
//	DatabaseCatalogArgs{...}
type DatabaseCatalogInput interface {
	pulumi.Input

	ToDatabaseCatalogOutput() DatabaseCatalogOutput
	ToDatabaseCatalogOutputWithContext(context.Context) DatabaseCatalogOutput
}

type DatabaseCatalogArgs struct {
	Schemas DatabaseCatalogSchemaArrayInput `pulumi:"schemas"`
}

func (DatabaseCatalogArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseCatalog)(nil)).Elem()
}

func (i DatabaseCatalogArgs) ToDatabaseCatalogOutput() DatabaseCatalogOutput {
	return i.ToDatabaseCatalogOutputWithContext(context.Background())
}

func (i DatabaseCatalogArgs) ToDatabaseCatalogOutputWithContext(ctx context.Context) DatabaseCatalogOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseCatalogOutput)
}

func (i DatabaseCatalogArgs) ToDatabaseCatalogPtrOutput() DatabaseCatalogPtrOutput {
	return i.ToDatabaseCatalogPtrOutputWithContext(context.Background())
}

func (i DatabaseCatalogArgs) ToDatabaseCatalogPtrOutputWithContext(ctx context.Context) DatabaseCatalogPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseCatalogOutput).ToDatabaseCatalogPtrOutputWithContext(ctx)
}

// DatabaseCatalogPtrInput is an input type that accepts DatabaseCatalogArgs, DatabaseCatalogPtr and DatabaseCatalogPtrOutput values.
// You can construct a concrete instance of `DatabaseCatalogPtrInput` via:
//
//	        DatabaseCatalogArgs{...}
//
//	or:
//
//	        nil
type DatabaseCatalogPtrInput interface {
	pulumi.Input

	ToDatabaseCatalogPtrOutput() DatabaseCatalogPtrOutput
	ToDatabaseCatalogPtrOutputWithContext(context.Context) DatabaseCatalogPtrOutput
}

type databaseCatalogPtrType DatabaseCatalogArgs

func DatabaseCatalogPtr(v *DatabaseCatalogArgs) DatabaseCatalogPtrInput {
	return (*databaseCatalogPtrType)(v)
}

func (*databaseCatalogPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatabaseCatalog)(nil)).Elem()
}

func (i *databaseCatalogPtrType) ToDatabaseCatalogPtrOutput() DatabaseCatalogPtrOutput {
	return i.ToDatabaseCatalogPtrOutputWithContext(context.Background())
}

func (i *databaseCatalogPtrType) ToDatabaseCatalogPtrOutputWithContext(ctx context.Context) DatabaseCatalogPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseCatalogPtrOutput)
}

type DatabaseCatalogOutput struct{ *pulumi.OutputState }

func (DatabaseCatalogOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseCatalog)(nil)).Elem()
}

func (o DatabaseCatalogOutput) ToDatabaseCatalogOutput() DatabaseCatalogOutput {
	return o
}

func (o DatabaseCatalogOutput) ToDatabaseCatalogOutputWithContext(ctx context.Context) DatabaseCatalogOutput {
	return o
}

func (o DatabaseCatalogOutput) ToDatabaseCatalogPtrOutput() DatabaseCatalogPtrOutput {
	return o.ToDatabaseCatalogPtrOutputWithContext(context.Background())
}

func (o DatabaseCatalogOutput) ToDatabaseCatalogPtrOutputWithContext(ctx context.Context) DatabaseCatalogPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DatabaseCatalog) *DatabaseCatalog {
		return &v
	}).(DatabaseCatalogPtrOutput)
}

func (o DatabaseCatalogOutput) Schemas() DatabaseCatalogSchemaArrayOutput {
	return o.ApplyT(func(v DatabaseCatalog) []DatabaseCatalogSchema { return v.Schemas }).(DatabaseCatalogSchemaArrayOutput)
}

type DatabaseCatalogPtrOutput struct{ *pulumi.OutputState }

func (DatabaseCatalogPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatabaseCatalog)(nil)).Elem()
}

func (o DatabaseCatalogPtrOutput) ToDatabaseCatalogPtrOutput() DatabaseCatalogPtrOutput {
	return o
}

func (o DatabaseCatalogPtrOutput) ToDatabaseCatalogPtrOutputWithContext(ctx context.Context) DatabaseCatalogPtrOutput {
	return o
}

func (o DatabaseCatalogPtrOutput) Elem() DatabaseCatalogOutput {
	return o.ApplyT(func(v *DatabaseCatalog) DatabaseCatalog {
		if v != nil {
			return *v
		}
		var ret DatabaseCatalog
		return ret
	}).(DatabaseCatalogOutput)
}

func (o DatabaseCatalogPtrOutput) Schemas() DatabaseCatalogSchemaArrayOutput {
	return o.ApplyT(func(v *DatabaseCatalog) []DatabaseCatalogSchema {
		if v == nil {
			return nil
		}
		return v.Schemas
	}).(DatabaseCatalogSchemaArrayOutput)
}

type DatabaseCatalogSchema struct {
	Name   *string                      `pulumi:"name"`
	Tables []DatabaseCatalogSchemaTable `pulumi:"tables"`
}

// DatabaseCatalogSchemaInput is an input type that accepts DatabaseCatalogSchemaArgs and DatabaseCatalogSchemaOutput values.
// You can construct a concrete instance of `DatabaseCatalogSchemaInput` via:
//
//	DatabaseCatalogSchemaArgs{...}
type DatabaseCatalogSchemaInput interface {
	pulumi.Input

	ToDatabaseCatalogSchemaOutput() DatabaseCatalogSchemaOutput
	ToDatabaseCatalogSchemaOutputWithContext(context.Context) DatabaseCatalogSchemaOutput
}

type DatabaseCatalogSchemaArgs struct {
	Name   pulumi.StringPtrInput                `pulumi:"name"`
	Tables DatabaseCatalogSchemaTableArrayInput `pulumi:"tables"`
}

func (DatabaseCatalogSchemaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseCatalogSchema)(nil)).Elem()
}

func (i DatabaseCatalogSchemaArgs) ToDatabaseCatalogSchemaOutput() DatabaseCatalogSchemaOutput {
	return i.ToDatabaseCatalogSchemaOutputWithContext(context.Background())
}

func (i DatabaseCatalogSchemaArgs) ToDatabaseCatalogSchemaOutputWithContext(ctx context.Context) DatabaseCatalogSchemaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseCatalogSchemaOutput)
}

// DatabaseCatalogSchemaArrayInput is an input type that accepts DatabaseCatalogSchemaArray and DatabaseCatalogSchemaArrayOutput values.
// You can construct a concrete instance of `DatabaseCatalogSchemaArrayInput` via:
//
//	DatabaseCatalogSchemaArray{ DatabaseCatalogSchemaArgs{...} }
type DatabaseCatalogSchemaArrayInput interface {
	pulumi.Input

	ToDatabaseCatalogSchemaArrayOutput() DatabaseCatalogSchemaArrayOutput
	ToDatabaseCatalogSchemaArrayOutputWithContext(context.Context) DatabaseCatalogSchemaArrayOutput
}

type DatabaseCatalogSchemaArray []DatabaseCatalogSchemaInput

func (DatabaseCatalogSchemaArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatabaseCatalogSchema)(nil)).Elem()
}

func (i DatabaseCatalogSchemaArray) ToDatabaseCatalogSchemaArrayOutput() DatabaseCatalogSchemaArrayOutput {
	return i.ToDatabaseCatalogSchemaArrayOutputWithContext(context.Background())
}

func (i DatabaseCatalogSchemaArray) ToDatabaseCatalogSchemaArrayOutputWithContext(ctx context.Context) DatabaseCatalogSchemaArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseCatalogSchemaArrayOutput)
}

type DatabaseCatalogSchemaOutput struct{ *pulumi.OutputState }

func (DatabaseCatalogSchemaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseCatalogSchema)(nil)).Elem()
}

func (o DatabaseCatalogSchemaOutput) ToDatabaseCatalogSchemaOutput() DatabaseCatalogSchemaOutput {
	return o
}

func (o DatabaseCatalogSchemaOutput) ToDatabaseCatalogSchemaOutputWithContext(ctx context.Context) DatabaseCatalogSchemaOutput {
	return o
}

func (o DatabaseCatalogSchemaOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseCatalogSchema) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o DatabaseCatalogSchemaOutput) Tables() DatabaseCatalogSchemaTableArrayOutput {
	return o.ApplyT(func(v DatabaseCatalogSchema) []DatabaseCatalogSchemaTable { return v.Tables }).(DatabaseCatalogSchemaTableArrayOutput)
}

type DatabaseCatalogSchemaArrayOutput struct{ *pulumi.OutputState }

func (DatabaseCatalogSchemaArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatabaseCatalogSchema)(nil)).Elem()
}

func (o DatabaseCatalogSchemaArrayOutput) ToDatabaseCatalogSchemaArrayOutput() DatabaseCatalogSchemaArrayOutput {
	return o
}

func (o DatabaseCatalogSchemaArrayOutput) ToDatabaseCatalogSchemaArrayOutputWithContext(ctx context.Context) DatabaseCatalogSchemaArrayOutput {
	return o
}

func (o DatabaseCatalogSchemaArrayOutput) Index(i pulumi.IntInput) DatabaseCatalogSchemaOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DatabaseCatalogSchema {
		return vs[0].([]DatabaseCatalogSchema)[vs[1].(int)]
	}).(DatabaseCatalogSchemaOutput)
}

type DatabaseCatalogSchemaTable struct {
	// The classification id
	Classification *string                            `pulumi:"classification"`
	Columns        []DatabaseCatalogSchemaTableColumn `pulumi:"columns"`
	Name           string                             `pulumi:"name"`
}

// DatabaseCatalogSchemaTableInput is an input type that accepts DatabaseCatalogSchemaTableArgs and DatabaseCatalogSchemaTableOutput values.
// You can construct a concrete instance of `DatabaseCatalogSchemaTableInput` via:
//
//	DatabaseCatalogSchemaTableArgs{...}
type DatabaseCatalogSchemaTableInput interface {
	pulumi.Input

	ToDatabaseCatalogSchemaTableOutput() DatabaseCatalogSchemaTableOutput
	ToDatabaseCatalogSchemaTableOutputWithContext(context.Context) DatabaseCatalogSchemaTableOutput
}

type DatabaseCatalogSchemaTableArgs struct {
	// The classification id
	Classification pulumi.StringPtrInput                      `pulumi:"classification"`
	Columns        DatabaseCatalogSchemaTableColumnArrayInput `pulumi:"columns"`
	Name           pulumi.StringInput                         `pulumi:"name"`
}

func (DatabaseCatalogSchemaTableArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseCatalogSchemaTable)(nil)).Elem()
}

func (i DatabaseCatalogSchemaTableArgs) ToDatabaseCatalogSchemaTableOutput() DatabaseCatalogSchemaTableOutput {
	return i.ToDatabaseCatalogSchemaTableOutputWithContext(context.Background())
}

func (i DatabaseCatalogSchemaTableArgs) ToDatabaseCatalogSchemaTableOutputWithContext(ctx context.Context) DatabaseCatalogSchemaTableOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseCatalogSchemaTableOutput)
}

// DatabaseCatalogSchemaTableArrayInput is an input type that accepts DatabaseCatalogSchemaTableArray and DatabaseCatalogSchemaTableArrayOutput values.
// You can construct a concrete instance of `DatabaseCatalogSchemaTableArrayInput` via:
//
//	DatabaseCatalogSchemaTableArray{ DatabaseCatalogSchemaTableArgs{...} }
type DatabaseCatalogSchemaTableArrayInput interface {
	pulumi.Input

	ToDatabaseCatalogSchemaTableArrayOutput() DatabaseCatalogSchemaTableArrayOutput
	ToDatabaseCatalogSchemaTableArrayOutputWithContext(context.Context) DatabaseCatalogSchemaTableArrayOutput
}

type DatabaseCatalogSchemaTableArray []DatabaseCatalogSchemaTableInput

func (DatabaseCatalogSchemaTableArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatabaseCatalogSchemaTable)(nil)).Elem()
}

func (i DatabaseCatalogSchemaTableArray) ToDatabaseCatalogSchemaTableArrayOutput() DatabaseCatalogSchemaTableArrayOutput {
	return i.ToDatabaseCatalogSchemaTableArrayOutputWithContext(context.Background())
}

func (i DatabaseCatalogSchemaTableArray) ToDatabaseCatalogSchemaTableArrayOutputWithContext(ctx context.Context) DatabaseCatalogSchemaTableArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseCatalogSchemaTableArrayOutput)
}

type DatabaseCatalogSchemaTableOutput struct{ *pulumi.OutputState }

func (DatabaseCatalogSchemaTableOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseCatalogSchemaTable)(nil)).Elem()
}

func (o DatabaseCatalogSchemaTableOutput) ToDatabaseCatalogSchemaTableOutput() DatabaseCatalogSchemaTableOutput {
	return o
}

func (o DatabaseCatalogSchemaTableOutput) ToDatabaseCatalogSchemaTableOutputWithContext(ctx context.Context) DatabaseCatalogSchemaTableOutput {
	return o
}

// The classification id
func (o DatabaseCatalogSchemaTableOutput) Classification() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseCatalogSchemaTable) *string { return v.Classification }).(pulumi.StringPtrOutput)
}

func (o DatabaseCatalogSchemaTableOutput) Columns() DatabaseCatalogSchemaTableColumnArrayOutput {
	return o.ApplyT(func(v DatabaseCatalogSchemaTable) []DatabaseCatalogSchemaTableColumn { return v.Columns }).(DatabaseCatalogSchemaTableColumnArrayOutput)
}

func (o DatabaseCatalogSchemaTableOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DatabaseCatalogSchemaTable) string { return v.Name }).(pulumi.StringOutput)
}

type DatabaseCatalogSchemaTableArrayOutput struct{ *pulumi.OutputState }

func (DatabaseCatalogSchemaTableArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatabaseCatalogSchemaTable)(nil)).Elem()
}

func (o DatabaseCatalogSchemaTableArrayOutput) ToDatabaseCatalogSchemaTableArrayOutput() DatabaseCatalogSchemaTableArrayOutput {
	return o
}

func (o DatabaseCatalogSchemaTableArrayOutput) ToDatabaseCatalogSchemaTableArrayOutputWithContext(ctx context.Context) DatabaseCatalogSchemaTableArrayOutput {
	return o
}

func (o DatabaseCatalogSchemaTableArrayOutput) Index(i pulumi.IntInput) DatabaseCatalogSchemaTableOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DatabaseCatalogSchemaTable {
		return vs[0].([]DatabaseCatalogSchemaTable)[vs[1].(int)]
	}).(DatabaseCatalogSchemaTableOutput)
}

type DatabaseCatalogSchemaTableColumn struct {
	// The classification id
	Classification *string           `pulumi:"classification"`
	Labels         map[string]string `pulumi:"labels"`
	Name           string            `pulumi:"name"`
	// The semantic type id
	SemanticType *string `pulumi:"semanticType"`
}

// DatabaseCatalogSchemaTableColumnInput is an input type that accepts DatabaseCatalogSchemaTableColumnArgs and DatabaseCatalogSchemaTableColumnOutput values.
// You can construct a concrete instance of `DatabaseCatalogSchemaTableColumnInput` via:
//
//	DatabaseCatalogSchemaTableColumnArgs{...}
type DatabaseCatalogSchemaTableColumnInput interface {
	pulumi.Input

	ToDatabaseCatalogSchemaTableColumnOutput() DatabaseCatalogSchemaTableColumnOutput
	ToDatabaseCatalogSchemaTableColumnOutputWithContext(context.Context) DatabaseCatalogSchemaTableColumnOutput
}

type DatabaseCatalogSchemaTableColumnArgs struct {
	// The classification id
	Classification pulumi.StringPtrInput `pulumi:"classification"`
	Labels         pulumi.StringMapInput `pulumi:"labels"`
	Name           pulumi.StringInput    `pulumi:"name"`
	// The semantic type id
	SemanticType pulumi.StringPtrInput `pulumi:"semanticType"`
}

func (DatabaseCatalogSchemaTableColumnArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseCatalogSchemaTableColumn)(nil)).Elem()
}

func (i DatabaseCatalogSchemaTableColumnArgs) ToDatabaseCatalogSchemaTableColumnOutput() DatabaseCatalogSchemaTableColumnOutput {
	return i.ToDatabaseCatalogSchemaTableColumnOutputWithContext(context.Background())
}

func (i DatabaseCatalogSchemaTableColumnArgs) ToDatabaseCatalogSchemaTableColumnOutputWithContext(ctx context.Context) DatabaseCatalogSchemaTableColumnOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseCatalogSchemaTableColumnOutput)
}

// DatabaseCatalogSchemaTableColumnArrayInput is an input type that accepts DatabaseCatalogSchemaTableColumnArray and DatabaseCatalogSchemaTableColumnArrayOutput values.
// You can construct a concrete instance of `DatabaseCatalogSchemaTableColumnArrayInput` via:
//
//	DatabaseCatalogSchemaTableColumnArray{ DatabaseCatalogSchemaTableColumnArgs{...} }
type DatabaseCatalogSchemaTableColumnArrayInput interface {
	pulumi.Input

	ToDatabaseCatalogSchemaTableColumnArrayOutput() DatabaseCatalogSchemaTableColumnArrayOutput
	ToDatabaseCatalogSchemaTableColumnArrayOutputWithContext(context.Context) DatabaseCatalogSchemaTableColumnArrayOutput
}

type DatabaseCatalogSchemaTableColumnArray []DatabaseCatalogSchemaTableColumnInput

func (DatabaseCatalogSchemaTableColumnArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatabaseCatalogSchemaTableColumn)(nil)).Elem()
}

func (i DatabaseCatalogSchemaTableColumnArray) ToDatabaseCatalogSchemaTableColumnArrayOutput() DatabaseCatalogSchemaTableColumnArrayOutput {
	return i.ToDatabaseCatalogSchemaTableColumnArrayOutputWithContext(context.Background())
}

func (i DatabaseCatalogSchemaTableColumnArray) ToDatabaseCatalogSchemaTableColumnArrayOutputWithContext(ctx context.Context) DatabaseCatalogSchemaTableColumnArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseCatalogSchemaTableColumnArrayOutput)
}

type DatabaseCatalogSchemaTableColumnOutput struct{ *pulumi.OutputState }

func (DatabaseCatalogSchemaTableColumnOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseCatalogSchemaTableColumn)(nil)).Elem()
}

func (o DatabaseCatalogSchemaTableColumnOutput) ToDatabaseCatalogSchemaTableColumnOutput() DatabaseCatalogSchemaTableColumnOutput {
	return o
}

func (o DatabaseCatalogSchemaTableColumnOutput) ToDatabaseCatalogSchemaTableColumnOutputWithContext(ctx context.Context) DatabaseCatalogSchemaTableColumnOutput {
	return o
}

// The classification id
func (o DatabaseCatalogSchemaTableColumnOutput) Classification() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseCatalogSchemaTableColumn) *string { return v.Classification }).(pulumi.StringPtrOutput)
}

func (o DatabaseCatalogSchemaTableColumnOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v DatabaseCatalogSchemaTableColumn) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

func (o DatabaseCatalogSchemaTableColumnOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DatabaseCatalogSchemaTableColumn) string { return v.Name }).(pulumi.StringOutput)
}

// The semantic type id
func (o DatabaseCatalogSchemaTableColumnOutput) SemanticType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseCatalogSchemaTableColumn) *string { return v.SemanticType }).(pulumi.StringPtrOutput)
}

type DatabaseCatalogSchemaTableColumnArrayOutput struct{ *pulumi.OutputState }

func (DatabaseCatalogSchemaTableColumnArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatabaseCatalogSchemaTableColumn)(nil)).Elem()
}

func (o DatabaseCatalogSchemaTableColumnArrayOutput) ToDatabaseCatalogSchemaTableColumnArrayOutput() DatabaseCatalogSchemaTableColumnArrayOutput {
	return o
}

func (o DatabaseCatalogSchemaTableColumnArrayOutput) ToDatabaseCatalogSchemaTableColumnArrayOutputWithContext(ctx context.Context) DatabaseCatalogSchemaTableColumnArrayOutput {
	return o
}

func (o DatabaseCatalogSchemaTableColumnArrayOutput) Index(i pulumi.IntInput) DatabaseCatalogSchemaTableColumnOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DatabaseCatalogSchemaTableColumn {
		return vs[0].([]DatabaseCatalogSchemaTableColumn)[vs[1].(int)]
	}).(DatabaseCatalogSchemaTableColumnOutput)
}

type GroupMember struct {
	// The member in users/{email} format.
	Member string `pulumi:"member"`
	// The member's role in the group, should be OWNER or MEMBER.
	Role string `pulumi:"role"`
}

// GroupMemberInput is an input type that accepts GroupMemberArgs and GroupMemberOutput values.
// You can construct a concrete instance of `GroupMemberInput` via:
//
//	GroupMemberArgs{...}
type GroupMemberInput interface {
	pulumi.Input

	ToGroupMemberOutput() GroupMemberOutput
	ToGroupMemberOutputWithContext(context.Context) GroupMemberOutput
}

type GroupMemberArgs struct {
	// The member in users/{email} format.
	Member pulumi.StringInput `pulumi:"member"`
	// The member's role in the group, should be OWNER or MEMBER.
	Role pulumi.StringInput `pulumi:"role"`
}

func (GroupMemberArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupMember)(nil)).Elem()
}

func (i GroupMemberArgs) ToGroupMemberOutput() GroupMemberOutput {
	return i.ToGroupMemberOutputWithContext(context.Background())
}

func (i GroupMemberArgs) ToGroupMemberOutputWithContext(ctx context.Context) GroupMemberOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupMemberOutput)
}

// GroupMemberArrayInput is an input type that accepts GroupMemberArray and GroupMemberArrayOutput values.
// You can construct a concrete instance of `GroupMemberArrayInput` via:
//
//	GroupMemberArray{ GroupMemberArgs{...} }
type GroupMemberArrayInput interface {
	pulumi.Input

	ToGroupMemberArrayOutput() GroupMemberArrayOutput
	ToGroupMemberArrayOutputWithContext(context.Context) GroupMemberArrayOutput
}

type GroupMemberArray []GroupMemberInput

func (GroupMemberArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GroupMember)(nil)).Elem()
}

func (i GroupMemberArray) ToGroupMemberArrayOutput() GroupMemberArrayOutput {
	return i.ToGroupMemberArrayOutputWithContext(context.Background())
}

func (i GroupMemberArray) ToGroupMemberArrayOutputWithContext(ctx context.Context) GroupMemberArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupMemberArrayOutput)
}

type GroupMemberOutput struct{ *pulumi.OutputState }

func (GroupMemberOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupMember)(nil)).Elem()
}

func (o GroupMemberOutput) ToGroupMemberOutput() GroupMemberOutput {
	return o
}

func (o GroupMemberOutput) ToGroupMemberOutputWithContext(ctx context.Context) GroupMemberOutput {
	return o
}

// The member in users/{email} format.
func (o GroupMemberOutput) Member() pulumi.StringOutput {
	return o.ApplyT(func(v GroupMember) string { return v.Member }).(pulumi.StringOutput)
}

// The member's role in the group, should be OWNER or MEMBER.
func (o GroupMemberOutput) Role() pulumi.StringOutput {
	return o.ApplyT(func(v GroupMember) string { return v.Role }).(pulumi.StringOutput)
}

type GroupMemberArrayOutput struct{ *pulumi.OutputState }

func (GroupMemberArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GroupMember)(nil)).Elem()
}

func (o GroupMemberArrayOutput) ToGroupMemberArrayOutput() GroupMemberArrayOutput {
	return o
}

func (o GroupMemberArrayOutput) ToGroupMemberArrayOutputWithContext(ctx context.Context) GroupMemberArrayOutput {
	return o
}

func (o GroupMemberArrayOutput) Index(i pulumi.IntInput) GroupMemberOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GroupMember {
		return vs[0].([]GroupMember)[vs[1].(int)]
	}).(GroupMemberOutput)
}

type InstanceDataSource struct {
	// The database for the instance, you can set this if the engine type is POSTGRES.
	Database *string `pulumi:"database"`
	// The external secret to get the database password. Learn more: https://www.bytebase.com/docs/get-started/instance/#use-external-secret-manager
	ExternalSecret *InstanceDataSourceExternalSecret `pulumi:"externalSecret"`
	// Host or socket for your instance, or the account name if the instance type is Snowflake.
	Host string `pulumi:"host"`
	// The unique data source id in this instance.
	Id string `pulumi:"id"`
	// The connection user password used by Bytebase to perform DDL and DML operations.
	Password *string `pulumi:"password"`
	// The port for your instance.
	Port string `pulumi:"port"`
	// The CA certificate. Optional, you can set this if the engine type is MYSQL, POSTGRES, TIDB or CLICKHOUSE.
	SslCa *string `pulumi:"sslCa"`
	// The client certificate. Optional, you can set this if the engine type is MYSQL, POSTGRES, TIDB or CLICKHOUSE.
	SslCert *string `pulumi:"sslCert"`
	// The client key. Optional, you can set this if the engine type is MYSQL, POSTGRES, TIDB or CLICKHOUSE.
	SslKey *string `pulumi:"sslKey"`
	// The data source type. Should be ADMIN or READ_ONLY.
	Type string `pulumi:"type"`
	// Enable SSL connection. Required to use SSL certificates.
	UseSsl *bool `pulumi:"useSsl"`
	// The connection user name used by Bytebase to perform DDL and DML operations.
	Username *string `pulumi:"username"`
}

// InstanceDataSourceInput is an input type that accepts InstanceDataSourceArgs and InstanceDataSourceOutput values.
// You can construct a concrete instance of `InstanceDataSourceInput` via:
//
//	InstanceDataSourceArgs{...}
type InstanceDataSourceInput interface {
	pulumi.Input

	ToInstanceDataSourceOutput() InstanceDataSourceOutput
	ToInstanceDataSourceOutputWithContext(context.Context) InstanceDataSourceOutput
}

type InstanceDataSourceArgs struct {
	// The database for the instance, you can set this if the engine type is POSTGRES.
	Database pulumi.StringPtrInput `pulumi:"database"`
	// The external secret to get the database password. Learn more: https://www.bytebase.com/docs/get-started/instance/#use-external-secret-manager
	ExternalSecret InstanceDataSourceExternalSecretPtrInput `pulumi:"externalSecret"`
	// Host or socket for your instance, or the account name if the instance type is Snowflake.
	Host pulumi.StringInput `pulumi:"host"`
	// The unique data source id in this instance.
	Id pulumi.StringInput `pulumi:"id"`
	// The connection user password used by Bytebase to perform DDL and DML operations.
	Password pulumi.StringPtrInput `pulumi:"password"`
	// The port for your instance.
	Port pulumi.StringInput `pulumi:"port"`
	// The CA certificate. Optional, you can set this if the engine type is MYSQL, POSTGRES, TIDB or CLICKHOUSE.
	SslCa pulumi.StringPtrInput `pulumi:"sslCa"`
	// The client certificate. Optional, you can set this if the engine type is MYSQL, POSTGRES, TIDB or CLICKHOUSE.
	SslCert pulumi.StringPtrInput `pulumi:"sslCert"`
	// The client key. Optional, you can set this if the engine type is MYSQL, POSTGRES, TIDB or CLICKHOUSE.
	SslKey pulumi.StringPtrInput `pulumi:"sslKey"`
	// The data source type. Should be ADMIN or READ_ONLY.
	Type pulumi.StringInput `pulumi:"type"`
	// Enable SSL connection. Required to use SSL certificates.
	UseSsl pulumi.BoolPtrInput `pulumi:"useSsl"`
	// The connection user name used by Bytebase to perform DDL and DML operations.
	Username pulumi.StringPtrInput `pulumi:"username"`
}

func (InstanceDataSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceDataSource)(nil)).Elem()
}

func (i InstanceDataSourceArgs) ToInstanceDataSourceOutput() InstanceDataSourceOutput {
	return i.ToInstanceDataSourceOutputWithContext(context.Background())
}

func (i InstanceDataSourceArgs) ToInstanceDataSourceOutputWithContext(ctx context.Context) InstanceDataSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceDataSourceOutput)
}

// InstanceDataSourceArrayInput is an input type that accepts InstanceDataSourceArray and InstanceDataSourceArrayOutput values.
// You can construct a concrete instance of `InstanceDataSourceArrayInput` via:
//
//	InstanceDataSourceArray{ InstanceDataSourceArgs{...} }
type InstanceDataSourceArrayInput interface {
	pulumi.Input

	ToInstanceDataSourceArrayOutput() InstanceDataSourceArrayOutput
	ToInstanceDataSourceArrayOutputWithContext(context.Context) InstanceDataSourceArrayOutput
}

type InstanceDataSourceArray []InstanceDataSourceInput

func (InstanceDataSourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceDataSource)(nil)).Elem()
}

func (i InstanceDataSourceArray) ToInstanceDataSourceArrayOutput() InstanceDataSourceArrayOutput {
	return i.ToInstanceDataSourceArrayOutputWithContext(context.Background())
}

func (i InstanceDataSourceArray) ToInstanceDataSourceArrayOutputWithContext(ctx context.Context) InstanceDataSourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceDataSourceArrayOutput)
}

type InstanceDataSourceOutput struct{ *pulumi.OutputState }

func (InstanceDataSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceDataSource)(nil)).Elem()
}

func (o InstanceDataSourceOutput) ToInstanceDataSourceOutput() InstanceDataSourceOutput {
	return o
}

func (o InstanceDataSourceOutput) ToInstanceDataSourceOutputWithContext(ctx context.Context) InstanceDataSourceOutput {
	return o
}

// The database for the instance, you can set this if the engine type is POSTGRES.
func (o InstanceDataSourceOutput) Database() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceDataSource) *string { return v.Database }).(pulumi.StringPtrOutput)
}

// The external secret to get the database password. Learn more: https://www.bytebase.com/docs/get-started/instance/#use-external-secret-manager
func (o InstanceDataSourceOutput) ExternalSecret() InstanceDataSourceExternalSecretPtrOutput {
	return o.ApplyT(func(v InstanceDataSource) *InstanceDataSourceExternalSecret { return v.ExternalSecret }).(InstanceDataSourceExternalSecretPtrOutput)
}

// Host or socket for your instance, or the account name if the instance type is Snowflake.
func (o InstanceDataSourceOutput) Host() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceDataSource) string { return v.Host }).(pulumi.StringOutput)
}

// The unique data source id in this instance.
func (o InstanceDataSourceOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceDataSource) string { return v.Id }).(pulumi.StringOutput)
}

// The connection user password used by Bytebase to perform DDL and DML operations.
func (o InstanceDataSourceOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceDataSource) *string { return v.Password }).(pulumi.StringPtrOutput)
}

// The port for your instance.
func (o InstanceDataSourceOutput) Port() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceDataSource) string { return v.Port }).(pulumi.StringOutput)
}

// The CA certificate. Optional, you can set this if the engine type is MYSQL, POSTGRES, TIDB or CLICKHOUSE.
func (o InstanceDataSourceOutput) SslCa() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceDataSource) *string { return v.SslCa }).(pulumi.StringPtrOutput)
}

// The client certificate. Optional, you can set this if the engine type is MYSQL, POSTGRES, TIDB or CLICKHOUSE.
func (o InstanceDataSourceOutput) SslCert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceDataSource) *string { return v.SslCert }).(pulumi.StringPtrOutput)
}

// The client key. Optional, you can set this if the engine type is MYSQL, POSTGRES, TIDB or CLICKHOUSE.
func (o InstanceDataSourceOutput) SslKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceDataSource) *string { return v.SslKey }).(pulumi.StringPtrOutput)
}

// The data source type. Should be ADMIN or READ_ONLY.
func (o InstanceDataSourceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceDataSource) string { return v.Type }).(pulumi.StringOutput)
}

// Enable SSL connection. Required to use SSL certificates.
func (o InstanceDataSourceOutput) UseSsl() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v InstanceDataSource) *bool { return v.UseSsl }).(pulumi.BoolPtrOutput)
}

// The connection user name used by Bytebase to perform DDL and DML operations.
func (o InstanceDataSourceOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceDataSource) *string { return v.Username }).(pulumi.StringPtrOutput)
}

type InstanceDataSourceArrayOutput struct{ *pulumi.OutputState }

func (InstanceDataSourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceDataSource)(nil)).Elem()
}

func (o InstanceDataSourceArrayOutput) ToInstanceDataSourceArrayOutput() InstanceDataSourceArrayOutput {
	return o
}

func (o InstanceDataSourceArrayOutput) ToInstanceDataSourceArrayOutputWithContext(ctx context.Context) InstanceDataSourceArrayOutput {
	return o
}

func (o InstanceDataSourceArrayOutput) Index(i pulumi.IntInput) InstanceDataSourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InstanceDataSource {
		return vs[0].([]InstanceDataSource)[vs[1].(int)]
	}).(InstanceDataSourceOutput)
}

type InstanceDataSourceExternalSecret struct {
	// The AWS Secrets Manager to get the database password. Reference doc https://docs.aws.amazon.com/secretsmanager/latest/userguide/intro.html
	AwsSecretsManager *InstanceDataSourceExternalSecretAwsSecretsManager `pulumi:"awsSecretsManager"`
	// The GCP Secret Manager to get the database password. Reference doc https://cloud.google.com/secret-manager/docs
	GcpSecretManager *InstanceDataSourceExternalSecretGcpSecretManager `pulumi:"gcpSecretManager"`
	Vault            *InstanceDataSourceExternalSecretVault            `pulumi:"vault"`
}

// InstanceDataSourceExternalSecretInput is an input type that accepts InstanceDataSourceExternalSecretArgs and InstanceDataSourceExternalSecretOutput values.
// You can construct a concrete instance of `InstanceDataSourceExternalSecretInput` via:
//
//	InstanceDataSourceExternalSecretArgs{...}
type InstanceDataSourceExternalSecretInput interface {
	pulumi.Input

	ToInstanceDataSourceExternalSecretOutput() InstanceDataSourceExternalSecretOutput
	ToInstanceDataSourceExternalSecretOutputWithContext(context.Context) InstanceDataSourceExternalSecretOutput
}

type InstanceDataSourceExternalSecretArgs struct {
	// The AWS Secrets Manager to get the database password. Reference doc https://docs.aws.amazon.com/secretsmanager/latest/userguide/intro.html
	AwsSecretsManager InstanceDataSourceExternalSecretAwsSecretsManagerPtrInput `pulumi:"awsSecretsManager"`
	// The GCP Secret Manager to get the database password. Reference doc https://cloud.google.com/secret-manager/docs
	GcpSecretManager InstanceDataSourceExternalSecretGcpSecretManagerPtrInput `pulumi:"gcpSecretManager"`
	Vault            InstanceDataSourceExternalSecretVaultPtrInput            `pulumi:"vault"`
}

func (InstanceDataSourceExternalSecretArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceDataSourceExternalSecret)(nil)).Elem()
}

func (i InstanceDataSourceExternalSecretArgs) ToInstanceDataSourceExternalSecretOutput() InstanceDataSourceExternalSecretOutput {
	return i.ToInstanceDataSourceExternalSecretOutputWithContext(context.Background())
}

func (i InstanceDataSourceExternalSecretArgs) ToInstanceDataSourceExternalSecretOutputWithContext(ctx context.Context) InstanceDataSourceExternalSecretOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceDataSourceExternalSecretOutput)
}

func (i InstanceDataSourceExternalSecretArgs) ToInstanceDataSourceExternalSecretPtrOutput() InstanceDataSourceExternalSecretPtrOutput {
	return i.ToInstanceDataSourceExternalSecretPtrOutputWithContext(context.Background())
}

func (i InstanceDataSourceExternalSecretArgs) ToInstanceDataSourceExternalSecretPtrOutputWithContext(ctx context.Context) InstanceDataSourceExternalSecretPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceDataSourceExternalSecretOutput).ToInstanceDataSourceExternalSecretPtrOutputWithContext(ctx)
}

// InstanceDataSourceExternalSecretPtrInput is an input type that accepts InstanceDataSourceExternalSecretArgs, InstanceDataSourceExternalSecretPtr and InstanceDataSourceExternalSecretPtrOutput values.
// You can construct a concrete instance of `InstanceDataSourceExternalSecretPtrInput` via:
//
//	        InstanceDataSourceExternalSecretArgs{...}
//
//	or:
//
//	        nil
type InstanceDataSourceExternalSecretPtrInput interface {
	pulumi.Input

	ToInstanceDataSourceExternalSecretPtrOutput() InstanceDataSourceExternalSecretPtrOutput
	ToInstanceDataSourceExternalSecretPtrOutputWithContext(context.Context) InstanceDataSourceExternalSecretPtrOutput
}

type instanceDataSourceExternalSecretPtrType InstanceDataSourceExternalSecretArgs

func InstanceDataSourceExternalSecretPtr(v *InstanceDataSourceExternalSecretArgs) InstanceDataSourceExternalSecretPtrInput {
	return (*instanceDataSourceExternalSecretPtrType)(v)
}

func (*instanceDataSourceExternalSecretPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceDataSourceExternalSecret)(nil)).Elem()
}

func (i *instanceDataSourceExternalSecretPtrType) ToInstanceDataSourceExternalSecretPtrOutput() InstanceDataSourceExternalSecretPtrOutput {
	return i.ToInstanceDataSourceExternalSecretPtrOutputWithContext(context.Background())
}

func (i *instanceDataSourceExternalSecretPtrType) ToInstanceDataSourceExternalSecretPtrOutputWithContext(ctx context.Context) InstanceDataSourceExternalSecretPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceDataSourceExternalSecretPtrOutput)
}

type InstanceDataSourceExternalSecretOutput struct{ *pulumi.OutputState }

func (InstanceDataSourceExternalSecretOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceDataSourceExternalSecret)(nil)).Elem()
}

func (o InstanceDataSourceExternalSecretOutput) ToInstanceDataSourceExternalSecretOutput() InstanceDataSourceExternalSecretOutput {
	return o
}

func (o InstanceDataSourceExternalSecretOutput) ToInstanceDataSourceExternalSecretOutputWithContext(ctx context.Context) InstanceDataSourceExternalSecretOutput {
	return o
}

func (o InstanceDataSourceExternalSecretOutput) ToInstanceDataSourceExternalSecretPtrOutput() InstanceDataSourceExternalSecretPtrOutput {
	return o.ToInstanceDataSourceExternalSecretPtrOutputWithContext(context.Background())
}

func (o InstanceDataSourceExternalSecretOutput) ToInstanceDataSourceExternalSecretPtrOutputWithContext(ctx context.Context) InstanceDataSourceExternalSecretPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InstanceDataSourceExternalSecret) *InstanceDataSourceExternalSecret {
		return &v
	}).(InstanceDataSourceExternalSecretPtrOutput)
}

// The AWS Secrets Manager to get the database password. Reference doc https://docs.aws.amazon.com/secretsmanager/latest/userguide/intro.html
func (o InstanceDataSourceExternalSecretOutput) AwsSecretsManager() InstanceDataSourceExternalSecretAwsSecretsManagerPtrOutput {
	return o.ApplyT(func(v InstanceDataSourceExternalSecret) *InstanceDataSourceExternalSecretAwsSecretsManager {
		return v.AwsSecretsManager
	}).(InstanceDataSourceExternalSecretAwsSecretsManagerPtrOutput)
}

// The GCP Secret Manager to get the database password. Reference doc https://cloud.google.com/secret-manager/docs
func (o InstanceDataSourceExternalSecretOutput) GcpSecretManager() InstanceDataSourceExternalSecretGcpSecretManagerPtrOutput {
	return o.ApplyT(func(v InstanceDataSourceExternalSecret) *InstanceDataSourceExternalSecretGcpSecretManager {
		return v.GcpSecretManager
	}).(InstanceDataSourceExternalSecretGcpSecretManagerPtrOutput)
}

func (o InstanceDataSourceExternalSecretOutput) Vault() InstanceDataSourceExternalSecretVaultPtrOutput {
	return o.ApplyT(func(v InstanceDataSourceExternalSecret) *InstanceDataSourceExternalSecretVault { return v.Vault }).(InstanceDataSourceExternalSecretVaultPtrOutput)
}

type InstanceDataSourceExternalSecretPtrOutput struct{ *pulumi.OutputState }

func (InstanceDataSourceExternalSecretPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceDataSourceExternalSecret)(nil)).Elem()
}

func (o InstanceDataSourceExternalSecretPtrOutput) ToInstanceDataSourceExternalSecretPtrOutput() InstanceDataSourceExternalSecretPtrOutput {
	return o
}

func (o InstanceDataSourceExternalSecretPtrOutput) ToInstanceDataSourceExternalSecretPtrOutputWithContext(ctx context.Context) InstanceDataSourceExternalSecretPtrOutput {
	return o
}

func (o InstanceDataSourceExternalSecretPtrOutput) Elem() InstanceDataSourceExternalSecretOutput {
	return o.ApplyT(func(v *InstanceDataSourceExternalSecret) InstanceDataSourceExternalSecret {
		if v != nil {
			return *v
		}
		var ret InstanceDataSourceExternalSecret
		return ret
	}).(InstanceDataSourceExternalSecretOutput)
}

// The AWS Secrets Manager to get the database password. Reference doc https://docs.aws.amazon.com/secretsmanager/latest/userguide/intro.html
func (o InstanceDataSourceExternalSecretPtrOutput) AwsSecretsManager() InstanceDataSourceExternalSecretAwsSecretsManagerPtrOutput {
	return o.ApplyT(func(v *InstanceDataSourceExternalSecret) *InstanceDataSourceExternalSecretAwsSecretsManager {
		if v == nil {
			return nil
		}
		return v.AwsSecretsManager
	}).(InstanceDataSourceExternalSecretAwsSecretsManagerPtrOutput)
}

// The GCP Secret Manager to get the database password. Reference doc https://cloud.google.com/secret-manager/docs
func (o InstanceDataSourceExternalSecretPtrOutput) GcpSecretManager() InstanceDataSourceExternalSecretGcpSecretManagerPtrOutput {
	return o.ApplyT(func(v *InstanceDataSourceExternalSecret) *InstanceDataSourceExternalSecretGcpSecretManager {
		if v == nil {
			return nil
		}
		return v.GcpSecretManager
	}).(InstanceDataSourceExternalSecretGcpSecretManagerPtrOutput)
}

func (o InstanceDataSourceExternalSecretPtrOutput) Vault() InstanceDataSourceExternalSecretVaultPtrOutput {
	return o.ApplyT(func(v *InstanceDataSourceExternalSecret) *InstanceDataSourceExternalSecretVault {
		if v == nil {
			return nil
		}
		return v.Vault
	}).(InstanceDataSourceExternalSecretVaultPtrOutput)
}

type InstanceDataSourceExternalSecretAwsSecretsManager struct {
	// The key name for the password.
	PasswordKeyName string `pulumi:"passwordKeyName"`
	// The secret name to store the password.
	SecretName string `pulumi:"secretName"`
}

// InstanceDataSourceExternalSecretAwsSecretsManagerInput is an input type that accepts InstanceDataSourceExternalSecretAwsSecretsManagerArgs and InstanceDataSourceExternalSecretAwsSecretsManagerOutput values.
// You can construct a concrete instance of `InstanceDataSourceExternalSecretAwsSecretsManagerInput` via:
//
//	InstanceDataSourceExternalSecretAwsSecretsManagerArgs{...}
type InstanceDataSourceExternalSecretAwsSecretsManagerInput interface {
	pulumi.Input

	ToInstanceDataSourceExternalSecretAwsSecretsManagerOutput() InstanceDataSourceExternalSecretAwsSecretsManagerOutput
	ToInstanceDataSourceExternalSecretAwsSecretsManagerOutputWithContext(context.Context) InstanceDataSourceExternalSecretAwsSecretsManagerOutput
}

type InstanceDataSourceExternalSecretAwsSecretsManagerArgs struct {
	// The key name for the password.
	PasswordKeyName pulumi.StringInput `pulumi:"passwordKeyName"`
	// The secret name to store the password.
	SecretName pulumi.StringInput `pulumi:"secretName"`
}

func (InstanceDataSourceExternalSecretAwsSecretsManagerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceDataSourceExternalSecretAwsSecretsManager)(nil)).Elem()
}

func (i InstanceDataSourceExternalSecretAwsSecretsManagerArgs) ToInstanceDataSourceExternalSecretAwsSecretsManagerOutput() InstanceDataSourceExternalSecretAwsSecretsManagerOutput {
	return i.ToInstanceDataSourceExternalSecretAwsSecretsManagerOutputWithContext(context.Background())
}

func (i InstanceDataSourceExternalSecretAwsSecretsManagerArgs) ToInstanceDataSourceExternalSecretAwsSecretsManagerOutputWithContext(ctx context.Context) InstanceDataSourceExternalSecretAwsSecretsManagerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceDataSourceExternalSecretAwsSecretsManagerOutput)
}

func (i InstanceDataSourceExternalSecretAwsSecretsManagerArgs) ToInstanceDataSourceExternalSecretAwsSecretsManagerPtrOutput() InstanceDataSourceExternalSecretAwsSecretsManagerPtrOutput {
	return i.ToInstanceDataSourceExternalSecretAwsSecretsManagerPtrOutputWithContext(context.Background())
}

func (i InstanceDataSourceExternalSecretAwsSecretsManagerArgs) ToInstanceDataSourceExternalSecretAwsSecretsManagerPtrOutputWithContext(ctx context.Context) InstanceDataSourceExternalSecretAwsSecretsManagerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceDataSourceExternalSecretAwsSecretsManagerOutput).ToInstanceDataSourceExternalSecretAwsSecretsManagerPtrOutputWithContext(ctx)
}

// InstanceDataSourceExternalSecretAwsSecretsManagerPtrInput is an input type that accepts InstanceDataSourceExternalSecretAwsSecretsManagerArgs, InstanceDataSourceExternalSecretAwsSecretsManagerPtr and InstanceDataSourceExternalSecretAwsSecretsManagerPtrOutput values.
// You can construct a concrete instance of `InstanceDataSourceExternalSecretAwsSecretsManagerPtrInput` via:
//
//	        InstanceDataSourceExternalSecretAwsSecretsManagerArgs{...}
//
//	or:
//
//	        nil
type InstanceDataSourceExternalSecretAwsSecretsManagerPtrInput interface {
	pulumi.Input

	ToInstanceDataSourceExternalSecretAwsSecretsManagerPtrOutput() InstanceDataSourceExternalSecretAwsSecretsManagerPtrOutput
	ToInstanceDataSourceExternalSecretAwsSecretsManagerPtrOutputWithContext(context.Context) InstanceDataSourceExternalSecretAwsSecretsManagerPtrOutput
}

type instanceDataSourceExternalSecretAwsSecretsManagerPtrType InstanceDataSourceExternalSecretAwsSecretsManagerArgs

func InstanceDataSourceExternalSecretAwsSecretsManagerPtr(v *InstanceDataSourceExternalSecretAwsSecretsManagerArgs) InstanceDataSourceExternalSecretAwsSecretsManagerPtrInput {
	return (*instanceDataSourceExternalSecretAwsSecretsManagerPtrType)(v)
}

func (*instanceDataSourceExternalSecretAwsSecretsManagerPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceDataSourceExternalSecretAwsSecretsManager)(nil)).Elem()
}

func (i *instanceDataSourceExternalSecretAwsSecretsManagerPtrType) ToInstanceDataSourceExternalSecretAwsSecretsManagerPtrOutput() InstanceDataSourceExternalSecretAwsSecretsManagerPtrOutput {
	return i.ToInstanceDataSourceExternalSecretAwsSecretsManagerPtrOutputWithContext(context.Background())
}

func (i *instanceDataSourceExternalSecretAwsSecretsManagerPtrType) ToInstanceDataSourceExternalSecretAwsSecretsManagerPtrOutputWithContext(ctx context.Context) InstanceDataSourceExternalSecretAwsSecretsManagerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceDataSourceExternalSecretAwsSecretsManagerPtrOutput)
}

type InstanceDataSourceExternalSecretAwsSecretsManagerOutput struct{ *pulumi.OutputState }

func (InstanceDataSourceExternalSecretAwsSecretsManagerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceDataSourceExternalSecretAwsSecretsManager)(nil)).Elem()
}

func (o InstanceDataSourceExternalSecretAwsSecretsManagerOutput) ToInstanceDataSourceExternalSecretAwsSecretsManagerOutput() InstanceDataSourceExternalSecretAwsSecretsManagerOutput {
	return o
}

func (o InstanceDataSourceExternalSecretAwsSecretsManagerOutput) ToInstanceDataSourceExternalSecretAwsSecretsManagerOutputWithContext(ctx context.Context) InstanceDataSourceExternalSecretAwsSecretsManagerOutput {
	return o
}

func (o InstanceDataSourceExternalSecretAwsSecretsManagerOutput) ToInstanceDataSourceExternalSecretAwsSecretsManagerPtrOutput() InstanceDataSourceExternalSecretAwsSecretsManagerPtrOutput {
	return o.ToInstanceDataSourceExternalSecretAwsSecretsManagerPtrOutputWithContext(context.Background())
}

func (o InstanceDataSourceExternalSecretAwsSecretsManagerOutput) ToInstanceDataSourceExternalSecretAwsSecretsManagerPtrOutputWithContext(ctx context.Context) InstanceDataSourceExternalSecretAwsSecretsManagerPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InstanceDataSourceExternalSecretAwsSecretsManager) *InstanceDataSourceExternalSecretAwsSecretsManager {
		return &v
	}).(InstanceDataSourceExternalSecretAwsSecretsManagerPtrOutput)
}

// The key name for the password.
func (o InstanceDataSourceExternalSecretAwsSecretsManagerOutput) PasswordKeyName() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceDataSourceExternalSecretAwsSecretsManager) string { return v.PasswordKeyName }).(pulumi.StringOutput)
}

// The secret name to store the password.
func (o InstanceDataSourceExternalSecretAwsSecretsManagerOutput) SecretName() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceDataSourceExternalSecretAwsSecretsManager) string { return v.SecretName }).(pulumi.StringOutput)
}

type InstanceDataSourceExternalSecretAwsSecretsManagerPtrOutput struct{ *pulumi.OutputState }

func (InstanceDataSourceExternalSecretAwsSecretsManagerPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceDataSourceExternalSecretAwsSecretsManager)(nil)).Elem()
}

func (o InstanceDataSourceExternalSecretAwsSecretsManagerPtrOutput) ToInstanceDataSourceExternalSecretAwsSecretsManagerPtrOutput() InstanceDataSourceExternalSecretAwsSecretsManagerPtrOutput {
	return o
}

func (o InstanceDataSourceExternalSecretAwsSecretsManagerPtrOutput) ToInstanceDataSourceExternalSecretAwsSecretsManagerPtrOutputWithContext(ctx context.Context) InstanceDataSourceExternalSecretAwsSecretsManagerPtrOutput {
	return o
}

func (o InstanceDataSourceExternalSecretAwsSecretsManagerPtrOutput) Elem() InstanceDataSourceExternalSecretAwsSecretsManagerOutput {
	return o.ApplyT(func(v *InstanceDataSourceExternalSecretAwsSecretsManager) InstanceDataSourceExternalSecretAwsSecretsManager {
		if v != nil {
			return *v
		}
		var ret InstanceDataSourceExternalSecretAwsSecretsManager
		return ret
	}).(InstanceDataSourceExternalSecretAwsSecretsManagerOutput)
}

// The key name for the password.
func (o InstanceDataSourceExternalSecretAwsSecretsManagerPtrOutput) PasswordKeyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstanceDataSourceExternalSecretAwsSecretsManager) *string {
		if v == nil {
			return nil
		}
		return &v.PasswordKeyName
	}).(pulumi.StringPtrOutput)
}

// The secret name to store the password.
func (o InstanceDataSourceExternalSecretAwsSecretsManagerPtrOutput) SecretName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstanceDataSourceExternalSecretAwsSecretsManager) *string {
		if v == nil {
			return nil
		}
		return &v.SecretName
	}).(pulumi.StringPtrOutput)
}

type InstanceDataSourceExternalSecretGcpSecretManager struct {
	// The secret name should be like "projects/{project-id}/secrets/{secret-id}".
	SecretName string `pulumi:"secretName"`
}

// InstanceDataSourceExternalSecretGcpSecretManagerInput is an input type that accepts InstanceDataSourceExternalSecretGcpSecretManagerArgs and InstanceDataSourceExternalSecretGcpSecretManagerOutput values.
// You can construct a concrete instance of `InstanceDataSourceExternalSecretGcpSecretManagerInput` via:
//
//	InstanceDataSourceExternalSecretGcpSecretManagerArgs{...}
type InstanceDataSourceExternalSecretGcpSecretManagerInput interface {
	pulumi.Input

	ToInstanceDataSourceExternalSecretGcpSecretManagerOutput() InstanceDataSourceExternalSecretGcpSecretManagerOutput
	ToInstanceDataSourceExternalSecretGcpSecretManagerOutputWithContext(context.Context) InstanceDataSourceExternalSecretGcpSecretManagerOutput
}

type InstanceDataSourceExternalSecretGcpSecretManagerArgs struct {
	// The secret name should be like "projects/{project-id}/secrets/{secret-id}".
	SecretName pulumi.StringInput `pulumi:"secretName"`
}

func (InstanceDataSourceExternalSecretGcpSecretManagerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceDataSourceExternalSecretGcpSecretManager)(nil)).Elem()
}

func (i InstanceDataSourceExternalSecretGcpSecretManagerArgs) ToInstanceDataSourceExternalSecretGcpSecretManagerOutput() InstanceDataSourceExternalSecretGcpSecretManagerOutput {
	return i.ToInstanceDataSourceExternalSecretGcpSecretManagerOutputWithContext(context.Background())
}

func (i InstanceDataSourceExternalSecretGcpSecretManagerArgs) ToInstanceDataSourceExternalSecretGcpSecretManagerOutputWithContext(ctx context.Context) InstanceDataSourceExternalSecretGcpSecretManagerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceDataSourceExternalSecretGcpSecretManagerOutput)
}

func (i InstanceDataSourceExternalSecretGcpSecretManagerArgs) ToInstanceDataSourceExternalSecretGcpSecretManagerPtrOutput() InstanceDataSourceExternalSecretGcpSecretManagerPtrOutput {
	return i.ToInstanceDataSourceExternalSecretGcpSecretManagerPtrOutputWithContext(context.Background())
}

func (i InstanceDataSourceExternalSecretGcpSecretManagerArgs) ToInstanceDataSourceExternalSecretGcpSecretManagerPtrOutputWithContext(ctx context.Context) InstanceDataSourceExternalSecretGcpSecretManagerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceDataSourceExternalSecretGcpSecretManagerOutput).ToInstanceDataSourceExternalSecretGcpSecretManagerPtrOutputWithContext(ctx)
}

// InstanceDataSourceExternalSecretGcpSecretManagerPtrInput is an input type that accepts InstanceDataSourceExternalSecretGcpSecretManagerArgs, InstanceDataSourceExternalSecretGcpSecretManagerPtr and InstanceDataSourceExternalSecretGcpSecretManagerPtrOutput values.
// You can construct a concrete instance of `InstanceDataSourceExternalSecretGcpSecretManagerPtrInput` via:
//
//	        InstanceDataSourceExternalSecretGcpSecretManagerArgs{...}
//
//	or:
//
//	        nil
type InstanceDataSourceExternalSecretGcpSecretManagerPtrInput interface {
	pulumi.Input

	ToInstanceDataSourceExternalSecretGcpSecretManagerPtrOutput() InstanceDataSourceExternalSecretGcpSecretManagerPtrOutput
	ToInstanceDataSourceExternalSecretGcpSecretManagerPtrOutputWithContext(context.Context) InstanceDataSourceExternalSecretGcpSecretManagerPtrOutput
}

type instanceDataSourceExternalSecretGcpSecretManagerPtrType InstanceDataSourceExternalSecretGcpSecretManagerArgs

func InstanceDataSourceExternalSecretGcpSecretManagerPtr(v *InstanceDataSourceExternalSecretGcpSecretManagerArgs) InstanceDataSourceExternalSecretGcpSecretManagerPtrInput {
	return (*instanceDataSourceExternalSecretGcpSecretManagerPtrType)(v)
}

func (*instanceDataSourceExternalSecretGcpSecretManagerPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceDataSourceExternalSecretGcpSecretManager)(nil)).Elem()
}

func (i *instanceDataSourceExternalSecretGcpSecretManagerPtrType) ToInstanceDataSourceExternalSecretGcpSecretManagerPtrOutput() InstanceDataSourceExternalSecretGcpSecretManagerPtrOutput {
	return i.ToInstanceDataSourceExternalSecretGcpSecretManagerPtrOutputWithContext(context.Background())
}

func (i *instanceDataSourceExternalSecretGcpSecretManagerPtrType) ToInstanceDataSourceExternalSecretGcpSecretManagerPtrOutputWithContext(ctx context.Context) InstanceDataSourceExternalSecretGcpSecretManagerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceDataSourceExternalSecretGcpSecretManagerPtrOutput)
}

type InstanceDataSourceExternalSecretGcpSecretManagerOutput struct{ *pulumi.OutputState }

func (InstanceDataSourceExternalSecretGcpSecretManagerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceDataSourceExternalSecretGcpSecretManager)(nil)).Elem()
}

func (o InstanceDataSourceExternalSecretGcpSecretManagerOutput) ToInstanceDataSourceExternalSecretGcpSecretManagerOutput() InstanceDataSourceExternalSecretGcpSecretManagerOutput {
	return o
}

func (o InstanceDataSourceExternalSecretGcpSecretManagerOutput) ToInstanceDataSourceExternalSecretGcpSecretManagerOutputWithContext(ctx context.Context) InstanceDataSourceExternalSecretGcpSecretManagerOutput {
	return o
}

func (o InstanceDataSourceExternalSecretGcpSecretManagerOutput) ToInstanceDataSourceExternalSecretGcpSecretManagerPtrOutput() InstanceDataSourceExternalSecretGcpSecretManagerPtrOutput {
	return o.ToInstanceDataSourceExternalSecretGcpSecretManagerPtrOutputWithContext(context.Background())
}

func (o InstanceDataSourceExternalSecretGcpSecretManagerOutput) ToInstanceDataSourceExternalSecretGcpSecretManagerPtrOutputWithContext(ctx context.Context) InstanceDataSourceExternalSecretGcpSecretManagerPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InstanceDataSourceExternalSecretGcpSecretManager) *InstanceDataSourceExternalSecretGcpSecretManager {
		return &v
	}).(InstanceDataSourceExternalSecretGcpSecretManagerPtrOutput)
}

// The secret name should be like "projects/{project-id}/secrets/{secret-id}".
func (o InstanceDataSourceExternalSecretGcpSecretManagerOutput) SecretName() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceDataSourceExternalSecretGcpSecretManager) string { return v.SecretName }).(pulumi.StringOutput)
}

type InstanceDataSourceExternalSecretGcpSecretManagerPtrOutput struct{ *pulumi.OutputState }

func (InstanceDataSourceExternalSecretGcpSecretManagerPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceDataSourceExternalSecretGcpSecretManager)(nil)).Elem()
}

func (o InstanceDataSourceExternalSecretGcpSecretManagerPtrOutput) ToInstanceDataSourceExternalSecretGcpSecretManagerPtrOutput() InstanceDataSourceExternalSecretGcpSecretManagerPtrOutput {
	return o
}

func (o InstanceDataSourceExternalSecretGcpSecretManagerPtrOutput) ToInstanceDataSourceExternalSecretGcpSecretManagerPtrOutputWithContext(ctx context.Context) InstanceDataSourceExternalSecretGcpSecretManagerPtrOutput {
	return o
}

func (o InstanceDataSourceExternalSecretGcpSecretManagerPtrOutput) Elem() InstanceDataSourceExternalSecretGcpSecretManagerOutput {
	return o.ApplyT(func(v *InstanceDataSourceExternalSecretGcpSecretManager) InstanceDataSourceExternalSecretGcpSecretManager {
		if v != nil {
			return *v
		}
		var ret InstanceDataSourceExternalSecretGcpSecretManager
		return ret
	}).(InstanceDataSourceExternalSecretGcpSecretManagerOutput)
}

// The secret name should be like "projects/{project-id}/secrets/{secret-id}".
func (o InstanceDataSourceExternalSecretGcpSecretManagerPtrOutput) SecretName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstanceDataSourceExternalSecretGcpSecretManager) *string {
		if v == nil {
			return nil
		}
		return &v.SecretName
	}).(pulumi.StringPtrOutput)
}

type InstanceDataSourceExternalSecretVault struct {
	// The Vault app role to get the password.
	AppRole *InstanceDataSourceExternalSecretVaultAppRole `pulumi:"appRole"`
	// The name for secret engine.
	EngineName string `pulumi:"engineName"`
	// The key name for the password.
	PasswordKeyName string `pulumi:"passwordKeyName"`
	// The secret name in the engine to store the password.
	SecretName string  `pulumi:"secretName"`
	Token      *string `pulumi:"token"`
	// The Vault URL.
	Url string `pulumi:"url"`
}

// InstanceDataSourceExternalSecretVaultInput is an input type that accepts InstanceDataSourceExternalSecretVaultArgs and InstanceDataSourceExternalSecretVaultOutput values.
// You can construct a concrete instance of `InstanceDataSourceExternalSecretVaultInput` via:
//
//	InstanceDataSourceExternalSecretVaultArgs{...}
type InstanceDataSourceExternalSecretVaultInput interface {
	pulumi.Input

	ToInstanceDataSourceExternalSecretVaultOutput() InstanceDataSourceExternalSecretVaultOutput
	ToInstanceDataSourceExternalSecretVaultOutputWithContext(context.Context) InstanceDataSourceExternalSecretVaultOutput
}

type InstanceDataSourceExternalSecretVaultArgs struct {
	// The Vault app role to get the password.
	AppRole InstanceDataSourceExternalSecretVaultAppRolePtrInput `pulumi:"appRole"`
	// The name for secret engine.
	EngineName pulumi.StringInput `pulumi:"engineName"`
	// The key name for the password.
	PasswordKeyName pulumi.StringInput `pulumi:"passwordKeyName"`
	// The secret name in the engine to store the password.
	SecretName pulumi.StringInput    `pulumi:"secretName"`
	Token      pulumi.StringPtrInput `pulumi:"token"`
	// The Vault URL.
	Url pulumi.StringInput `pulumi:"url"`
}

func (InstanceDataSourceExternalSecretVaultArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceDataSourceExternalSecretVault)(nil)).Elem()
}

func (i InstanceDataSourceExternalSecretVaultArgs) ToInstanceDataSourceExternalSecretVaultOutput() InstanceDataSourceExternalSecretVaultOutput {
	return i.ToInstanceDataSourceExternalSecretVaultOutputWithContext(context.Background())
}

func (i InstanceDataSourceExternalSecretVaultArgs) ToInstanceDataSourceExternalSecretVaultOutputWithContext(ctx context.Context) InstanceDataSourceExternalSecretVaultOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceDataSourceExternalSecretVaultOutput)
}

func (i InstanceDataSourceExternalSecretVaultArgs) ToInstanceDataSourceExternalSecretVaultPtrOutput() InstanceDataSourceExternalSecretVaultPtrOutput {
	return i.ToInstanceDataSourceExternalSecretVaultPtrOutputWithContext(context.Background())
}

func (i InstanceDataSourceExternalSecretVaultArgs) ToInstanceDataSourceExternalSecretVaultPtrOutputWithContext(ctx context.Context) InstanceDataSourceExternalSecretVaultPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceDataSourceExternalSecretVaultOutput).ToInstanceDataSourceExternalSecretVaultPtrOutputWithContext(ctx)
}

// InstanceDataSourceExternalSecretVaultPtrInput is an input type that accepts InstanceDataSourceExternalSecretVaultArgs, InstanceDataSourceExternalSecretVaultPtr and InstanceDataSourceExternalSecretVaultPtrOutput values.
// You can construct a concrete instance of `InstanceDataSourceExternalSecretVaultPtrInput` via:
//
//	        InstanceDataSourceExternalSecretVaultArgs{...}
//
//	or:
//
//	        nil
type InstanceDataSourceExternalSecretVaultPtrInput interface {
	pulumi.Input

	ToInstanceDataSourceExternalSecretVaultPtrOutput() InstanceDataSourceExternalSecretVaultPtrOutput
	ToInstanceDataSourceExternalSecretVaultPtrOutputWithContext(context.Context) InstanceDataSourceExternalSecretVaultPtrOutput
}

type instanceDataSourceExternalSecretVaultPtrType InstanceDataSourceExternalSecretVaultArgs

func InstanceDataSourceExternalSecretVaultPtr(v *InstanceDataSourceExternalSecretVaultArgs) InstanceDataSourceExternalSecretVaultPtrInput {
	return (*instanceDataSourceExternalSecretVaultPtrType)(v)
}

func (*instanceDataSourceExternalSecretVaultPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceDataSourceExternalSecretVault)(nil)).Elem()
}

func (i *instanceDataSourceExternalSecretVaultPtrType) ToInstanceDataSourceExternalSecretVaultPtrOutput() InstanceDataSourceExternalSecretVaultPtrOutput {
	return i.ToInstanceDataSourceExternalSecretVaultPtrOutputWithContext(context.Background())
}

func (i *instanceDataSourceExternalSecretVaultPtrType) ToInstanceDataSourceExternalSecretVaultPtrOutputWithContext(ctx context.Context) InstanceDataSourceExternalSecretVaultPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceDataSourceExternalSecretVaultPtrOutput)
}

type InstanceDataSourceExternalSecretVaultOutput struct{ *pulumi.OutputState }

func (InstanceDataSourceExternalSecretVaultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceDataSourceExternalSecretVault)(nil)).Elem()
}

func (o InstanceDataSourceExternalSecretVaultOutput) ToInstanceDataSourceExternalSecretVaultOutput() InstanceDataSourceExternalSecretVaultOutput {
	return o
}

func (o InstanceDataSourceExternalSecretVaultOutput) ToInstanceDataSourceExternalSecretVaultOutputWithContext(ctx context.Context) InstanceDataSourceExternalSecretVaultOutput {
	return o
}

func (o InstanceDataSourceExternalSecretVaultOutput) ToInstanceDataSourceExternalSecretVaultPtrOutput() InstanceDataSourceExternalSecretVaultPtrOutput {
	return o.ToInstanceDataSourceExternalSecretVaultPtrOutputWithContext(context.Background())
}

func (o InstanceDataSourceExternalSecretVaultOutput) ToInstanceDataSourceExternalSecretVaultPtrOutputWithContext(ctx context.Context) InstanceDataSourceExternalSecretVaultPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InstanceDataSourceExternalSecretVault) *InstanceDataSourceExternalSecretVault {
		return &v
	}).(InstanceDataSourceExternalSecretVaultPtrOutput)
}

// The Vault app role to get the password.
func (o InstanceDataSourceExternalSecretVaultOutput) AppRole() InstanceDataSourceExternalSecretVaultAppRolePtrOutput {
	return o.ApplyT(func(v InstanceDataSourceExternalSecretVault) *InstanceDataSourceExternalSecretVaultAppRole {
		return v.AppRole
	}).(InstanceDataSourceExternalSecretVaultAppRolePtrOutput)
}

// The name for secret engine.
func (o InstanceDataSourceExternalSecretVaultOutput) EngineName() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceDataSourceExternalSecretVault) string { return v.EngineName }).(pulumi.StringOutput)
}

// The key name for the password.
func (o InstanceDataSourceExternalSecretVaultOutput) PasswordKeyName() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceDataSourceExternalSecretVault) string { return v.PasswordKeyName }).(pulumi.StringOutput)
}

// The secret name in the engine to store the password.
func (o InstanceDataSourceExternalSecretVaultOutput) SecretName() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceDataSourceExternalSecretVault) string { return v.SecretName }).(pulumi.StringOutput)
}

func (o InstanceDataSourceExternalSecretVaultOutput) Token() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceDataSourceExternalSecretVault) *string { return v.Token }).(pulumi.StringPtrOutput)
}

// The Vault URL.
func (o InstanceDataSourceExternalSecretVaultOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceDataSourceExternalSecretVault) string { return v.Url }).(pulumi.StringOutput)
}

type InstanceDataSourceExternalSecretVaultPtrOutput struct{ *pulumi.OutputState }

func (InstanceDataSourceExternalSecretVaultPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceDataSourceExternalSecretVault)(nil)).Elem()
}

func (o InstanceDataSourceExternalSecretVaultPtrOutput) ToInstanceDataSourceExternalSecretVaultPtrOutput() InstanceDataSourceExternalSecretVaultPtrOutput {
	return o
}

func (o InstanceDataSourceExternalSecretVaultPtrOutput) ToInstanceDataSourceExternalSecretVaultPtrOutputWithContext(ctx context.Context) InstanceDataSourceExternalSecretVaultPtrOutput {
	return o
}

func (o InstanceDataSourceExternalSecretVaultPtrOutput) Elem() InstanceDataSourceExternalSecretVaultOutput {
	return o.ApplyT(func(v *InstanceDataSourceExternalSecretVault) InstanceDataSourceExternalSecretVault {
		if v != nil {
			return *v
		}
		var ret InstanceDataSourceExternalSecretVault
		return ret
	}).(InstanceDataSourceExternalSecretVaultOutput)
}

// The Vault app role to get the password.
func (o InstanceDataSourceExternalSecretVaultPtrOutput) AppRole() InstanceDataSourceExternalSecretVaultAppRolePtrOutput {
	return o.ApplyT(func(v *InstanceDataSourceExternalSecretVault) *InstanceDataSourceExternalSecretVaultAppRole {
		if v == nil {
			return nil
		}
		return v.AppRole
	}).(InstanceDataSourceExternalSecretVaultAppRolePtrOutput)
}

// The name for secret engine.
func (o InstanceDataSourceExternalSecretVaultPtrOutput) EngineName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstanceDataSourceExternalSecretVault) *string {
		if v == nil {
			return nil
		}
		return &v.EngineName
	}).(pulumi.StringPtrOutput)
}

// The key name for the password.
func (o InstanceDataSourceExternalSecretVaultPtrOutput) PasswordKeyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstanceDataSourceExternalSecretVault) *string {
		if v == nil {
			return nil
		}
		return &v.PasswordKeyName
	}).(pulumi.StringPtrOutput)
}

// The secret name in the engine to store the password.
func (o InstanceDataSourceExternalSecretVaultPtrOutput) SecretName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstanceDataSourceExternalSecretVault) *string {
		if v == nil {
			return nil
		}
		return &v.SecretName
	}).(pulumi.StringPtrOutput)
}

func (o InstanceDataSourceExternalSecretVaultPtrOutput) Token() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstanceDataSourceExternalSecretVault) *string {
		if v == nil {
			return nil
		}
		return v.Token
	}).(pulumi.StringPtrOutput)
}

// The Vault URL.
func (o InstanceDataSourceExternalSecretVaultPtrOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstanceDataSourceExternalSecretVault) *string {
		if v == nil {
			return nil
		}
		return &v.Url
	}).(pulumi.StringPtrOutput)
}

type InstanceDataSourceExternalSecretVaultAppRole struct {
	// The app role id.
	RoleId string `pulumi:"roleId"`
	// The secret id for the role without ttl.
	Secret string `pulumi:"secret"`
	// The secret id type, can be PLAIN (plain text for the secret) or ENVIRONMENT (envirionment name for the secret).
	SecretType string `pulumi:"secretType"`
}

// InstanceDataSourceExternalSecretVaultAppRoleInput is an input type that accepts InstanceDataSourceExternalSecretVaultAppRoleArgs and InstanceDataSourceExternalSecretVaultAppRoleOutput values.
// You can construct a concrete instance of `InstanceDataSourceExternalSecretVaultAppRoleInput` via:
//
//	InstanceDataSourceExternalSecretVaultAppRoleArgs{...}
type InstanceDataSourceExternalSecretVaultAppRoleInput interface {
	pulumi.Input

	ToInstanceDataSourceExternalSecretVaultAppRoleOutput() InstanceDataSourceExternalSecretVaultAppRoleOutput
	ToInstanceDataSourceExternalSecretVaultAppRoleOutputWithContext(context.Context) InstanceDataSourceExternalSecretVaultAppRoleOutput
}

type InstanceDataSourceExternalSecretVaultAppRoleArgs struct {
	// The app role id.
	RoleId pulumi.StringInput `pulumi:"roleId"`
	// The secret id for the role without ttl.
	Secret pulumi.StringInput `pulumi:"secret"`
	// The secret id type, can be PLAIN (plain text for the secret) or ENVIRONMENT (envirionment name for the secret).
	SecretType pulumi.StringInput `pulumi:"secretType"`
}

func (InstanceDataSourceExternalSecretVaultAppRoleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceDataSourceExternalSecretVaultAppRole)(nil)).Elem()
}

func (i InstanceDataSourceExternalSecretVaultAppRoleArgs) ToInstanceDataSourceExternalSecretVaultAppRoleOutput() InstanceDataSourceExternalSecretVaultAppRoleOutput {
	return i.ToInstanceDataSourceExternalSecretVaultAppRoleOutputWithContext(context.Background())
}

func (i InstanceDataSourceExternalSecretVaultAppRoleArgs) ToInstanceDataSourceExternalSecretVaultAppRoleOutputWithContext(ctx context.Context) InstanceDataSourceExternalSecretVaultAppRoleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceDataSourceExternalSecretVaultAppRoleOutput)
}

func (i InstanceDataSourceExternalSecretVaultAppRoleArgs) ToInstanceDataSourceExternalSecretVaultAppRolePtrOutput() InstanceDataSourceExternalSecretVaultAppRolePtrOutput {
	return i.ToInstanceDataSourceExternalSecretVaultAppRolePtrOutputWithContext(context.Background())
}

func (i InstanceDataSourceExternalSecretVaultAppRoleArgs) ToInstanceDataSourceExternalSecretVaultAppRolePtrOutputWithContext(ctx context.Context) InstanceDataSourceExternalSecretVaultAppRolePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceDataSourceExternalSecretVaultAppRoleOutput).ToInstanceDataSourceExternalSecretVaultAppRolePtrOutputWithContext(ctx)
}

// InstanceDataSourceExternalSecretVaultAppRolePtrInput is an input type that accepts InstanceDataSourceExternalSecretVaultAppRoleArgs, InstanceDataSourceExternalSecretVaultAppRolePtr and InstanceDataSourceExternalSecretVaultAppRolePtrOutput values.
// You can construct a concrete instance of `InstanceDataSourceExternalSecretVaultAppRolePtrInput` via:
//
//	        InstanceDataSourceExternalSecretVaultAppRoleArgs{...}
//
//	or:
//
//	        nil
type InstanceDataSourceExternalSecretVaultAppRolePtrInput interface {
	pulumi.Input

	ToInstanceDataSourceExternalSecretVaultAppRolePtrOutput() InstanceDataSourceExternalSecretVaultAppRolePtrOutput
	ToInstanceDataSourceExternalSecretVaultAppRolePtrOutputWithContext(context.Context) InstanceDataSourceExternalSecretVaultAppRolePtrOutput
}

type instanceDataSourceExternalSecretVaultAppRolePtrType InstanceDataSourceExternalSecretVaultAppRoleArgs

func InstanceDataSourceExternalSecretVaultAppRolePtr(v *InstanceDataSourceExternalSecretVaultAppRoleArgs) InstanceDataSourceExternalSecretVaultAppRolePtrInput {
	return (*instanceDataSourceExternalSecretVaultAppRolePtrType)(v)
}

func (*instanceDataSourceExternalSecretVaultAppRolePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceDataSourceExternalSecretVaultAppRole)(nil)).Elem()
}

func (i *instanceDataSourceExternalSecretVaultAppRolePtrType) ToInstanceDataSourceExternalSecretVaultAppRolePtrOutput() InstanceDataSourceExternalSecretVaultAppRolePtrOutput {
	return i.ToInstanceDataSourceExternalSecretVaultAppRolePtrOutputWithContext(context.Background())
}

func (i *instanceDataSourceExternalSecretVaultAppRolePtrType) ToInstanceDataSourceExternalSecretVaultAppRolePtrOutputWithContext(ctx context.Context) InstanceDataSourceExternalSecretVaultAppRolePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceDataSourceExternalSecretVaultAppRolePtrOutput)
}

type InstanceDataSourceExternalSecretVaultAppRoleOutput struct{ *pulumi.OutputState }

func (InstanceDataSourceExternalSecretVaultAppRoleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceDataSourceExternalSecretVaultAppRole)(nil)).Elem()
}

func (o InstanceDataSourceExternalSecretVaultAppRoleOutput) ToInstanceDataSourceExternalSecretVaultAppRoleOutput() InstanceDataSourceExternalSecretVaultAppRoleOutput {
	return o
}

func (o InstanceDataSourceExternalSecretVaultAppRoleOutput) ToInstanceDataSourceExternalSecretVaultAppRoleOutputWithContext(ctx context.Context) InstanceDataSourceExternalSecretVaultAppRoleOutput {
	return o
}

func (o InstanceDataSourceExternalSecretVaultAppRoleOutput) ToInstanceDataSourceExternalSecretVaultAppRolePtrOutput() InstanceDataSourceExternalSecretVaultAppRolePtrOutput {
	return o.ToInstanceDataSourceExternalSecretVaultAppRolePtrOutputWithContext(context.Background())
}

func (o InstanceDataSourceExternalSecretVaultAppRoleOutput) ToInstanceDataSourceExternalSecretVaultAppRolePtrOutputWithContext(ctx context.Context) InstanceDataSourceExternalSecretVaultAppRolePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InstanceDataSourceExternalSecretVaultAppRole) *InstanceDataSourceExternalSecretVaultAppRole {
		return &v
	}).(InstanceDataSourceExternalSecretVaultAppRolePtrOutput)
}

// The app role id.
func (o InstanceDataSourceExternalSecretVaultAppRoleOutput) RoleId() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceDataSourceExternalSecretVaultAppRole) string { return v.RoleId }).(pulumi.StringOutput)
}

// The secret id for the role without ttl.
func (o InstanceDataSourceExternalSecretVaultAppRoleOutput) Secret() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceDataSourceExternalSecretVaultAppRole) string { return v.Secret }).(pulumi.StringOutput)
}

// The secret id type, can be PLAIN (plain text for the secret) or ENVIRONMENT (envirionment name for the secret).
func (o InstanceDataSourceExternalSecretVaultAppRoleOutput) SecretType() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceDataSourceExternalSecretVaultAppRole) string { return v.SecretType }).(pulumi.StringOutput)
}

type InstanceDataSourceExternalSecretVaultAppRolePtrOutput struct{ *pulumi.OutputState }

func (InstanceDataSourceExternalSecretVaultAppRolePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceDataSourceExternalSecretVaultAppRole)(nil)).Elem()
}

func (o InstanceDataSourceExternalSecretVaultAppRolePtrOutput) ToInstanceDataSourceExternalSecretVaultAppRolePtrOutput() InstanceDataSourceExternalSecretVaultAppRolePtrOutput {
	return o
}

func (o InstanceDataSourceExternalSecretVaultAppRolePtrOutput) ToInstanceDataSourceExternalSecretVaultAppRolePtrOutputWithContext(ctx context.Context) InstanceDataSourceExternalSecretVaultAppRolePtrOutput {
	return o
}

func (o InstanceDataSourceExternalSecretVaultAppRolePtrOutput) Elem() InstanceDataSourceExternalSecretVaultAppRoleOutput {
	return o.ApplyT(func(v *InstanceDataSourceExternalSecretVaultAppRole) InstanceDataSourceExternalSecretVaultAppRole {
		if v != nil {
			return *v
		}
		var ret InstanceDataSourceExternalSecretVaultAppRole
		return ret
	}).(InstanceDataSourceExternalSecretVaultAppRoleOutput)
}

// The app role id.
func (o InstanceDataSourceExternalSecretVaultAppRolePtrOutput) RoleId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstanceDataSourceExternalSecretVaultAppRole) *string {
		if v == nil {
			return nil
		}
		return &v.RoleId
	}).(pulumi.StringPtrOutput)
}

// The secret id for the role without ttl.
func (o InstanceDataSourceExternalSecretVaultAppRolePtrOutput) Secret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstanceDataSourceExternalSecretVaultAppRole) *string {
		if v == nil {
			return nil
		}
		return &v.Secret
	}).(pulumi.StringPtrOutput)
}

// The secret id type, can be PLAIN (plain text for the secret) or ENVIRONMENT (envirionment name for the secret).
func (o InstanceDataSourceExternalSecretVaultAppRolePtrOutput) SecretType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstanceDataSourceExternalSecretVaultAppRole) *string {
		if v == nil {
			return nil
		}
		return &v.SecretType
	}).(pulumi.StringPtrOutput)
}

type PolicyDataSourceQueryPolicy struct {
	// Disallow running DDL statements in the SQL editor.
	DisallowDdl *bool `pulumi:"disallowDdl"`
	// Disallow running DML statements in the SQL editor.
	DisallowDml *bool `pulumi:"disallowDml"`
	// RESTRICTION_UNSPECIFIED means no restriction; FALLBACK will allows to query admin data sources when there is no read-only data source; DISALLOW will always disallow to query admin data sources.
	Restriction *string `pulumi:"restriction"`
}

// PolicyDataSourceQueryPolicyInput is an input type that accepts PolicyDataSourceQueryPolicyArgs and PolicyDataSourceQueryPolicyOutput values.
// You can construct a concrete instance of `PolicyDataSourceQueryPolicyInput` via:
//
//	PolicyDataSourceQueryPolicyArgs{...}
type PolicyDataSourceQueryPolicyInput interface {
	pulumi.Input

	ToPolicyDataSourceQueryPolicyOutput() PolicyDataSourceQueryPolicyOutput
	ToPolicyDataSourceQueryPolicyOutputWithContext(context.Context) PolicyDataSourceQueryPolicyOutput
}

type PolicyDataSourceQueryPolicyArgs struct {
	// Disallow running DDL statements in the SQL editor.
	DisallowDdl pulumi.BoolPtrInput `pulumi:"disallowDdl"`
	// Disallow running DML statements in the SQL editor.
	DisallowDml pulumi.BoolPtrInput `pulumi:"disallowDml"`
	// RESTRICTION_UNSPECIFIED means no restriction; FALLBACK will allows to query admin data sources when there is no read-only data source; DISALLOW will always disallow to query admin data sources.
	Restriction pulumi.StringPtrInput `pulumi:"restriction"`
}

func (PolicyDataSourceQueryPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyDataSourceQueryPolicy)(nil)).Elem()
}

func (i PolicyDataSourceQueryPolicyArgs) ToPolicyDataSourceQueryPolicyOutput() PolicyDataSourceQueryPolicyOutput {
	return i.ToPolicyDataSourceQueryPolicyOutputWithContext(context.Background())
}

func (i PolicyDataSourceQueryPolicyArgs) ToPolicyDataSourceQueryPolicyOutputWithContext(ctx context.Context) PolicyDataSourceQueryPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyDataSourceQueryPolicyOutput)
}

func (i PolicyDataSourceQueryPolicyArgs) ToPolicyDataSourceQueryPolicyPtrOutput() PolicyDataSourceQueryPolicyPtrOutput {
	return i.ToPolicyDataSourceQueryPolicyPtrOutputWithContext(context.Background())
}

func (i PolicyDataSourceQueryPolicyArgs) ToPolicyDataSourceQueryPolicyPtrOutputWithContext(ctx context.Context) PolicyDataSourceQueryPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyDataSourceQueryPolicyOutput).ToPolicyDataSourceQueryPolicyPtrOutputWithContext(ctx)
}

// PolicyDataSourceQueryPolicyPtrInput is an input type that accepts PolicyDataSourceQueryPolicyArgs, PolicyDataSourceQueryPolicyPtr and PolicyDataSourceQueryPolicyPtrOutput values.
// You can construct a concrete instance of `PolicyDataSourceQueryPolicyPtrInput` via:
//
//	        PolicyDataSourceQueryPolicyArgs{...}
//
//	or:
//
//	        nil
type PolicyDataSourceQueryPolicyPtrInput interface {
	pulumi.Input

	ToPolicyDataSourceQueryPolicyPtrOutput() PolicyDataSourceQueryPolicyPtrOutput
	ToPolicyDataSourceQueryPolicyPtrOutputWithContext(context.Context) PolicyDataSourceQueryPolicyPtrOutput
}

type policyDataSourceQueryPolicyPtrType PolicyDataSourceQueryPolicyArgs

func PolicyDataSourceQueryPolicyPtr(v *PolicyDataSourceQueryPolicyArgs) PolicyDataSourceQueryPolicyPtrInput {
	return (*policyDataSourceQueryPolicyPtrType)(v)
}

func (*policyDataSourceQueryPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyDataSourceQueryPolicy)(nil)).Elem()
}

func (i *policyDataSourceQueryPolicyPtrType) ToPolicyDataSourceQueryPolicyPtrOutput() PolicyDataSourceQueryPolicyPtrOutput {
	return i.ToPolicyDataSourceQueryPolicyPtrOutputWithContext(context.Background())
}

func (i *policyDataSourceQueryPolicyPtrType) ToPolicyDataSourceQueryPolicyPtrOutputWithContext(ctx context.Context) PolicyDataSourceQueryPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyDataSourceQueryPolicyPtrOutput)
}

type PolicyDataSourceQueryPolicyOutput struct{ *pulumi.OutputState }

func (PolicyDataSourceQueryPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyDataSourceQueryPolicy)(nil)).Elem()
}

func (o PolicyDataSourceQueryPolicyOutput) ToPolicyDataSourceQueryPolicyOutput() PolicyDataSourceQueryPolicyOutput {
	return o
}

func (o PolicyDataSourceQueryPolicyOutput) ToPolicyDataSourceQueryPolicyOutputWithContext(ctx context.Context) PolicyDataSourceQueryPolicyOutput {
	return o
}

func (o PolicyDataSourceQueryPolicyOutput) ToPolicyDataSourceQueryPolicyPtrOutput() PolicyDataSourceQueryPolicyPtrOutput {
	return o.ToPolicyDataSourceQueryPolicyPtrOutputWithContext(context.Background())
}

func (o PolicyDataSourceQueryPolicyOutput) ToPolicyDataSourceQueryPolicyPtrOutputWithContext(ctx context.Context) PolicyDataSourceQueryPolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PolicyDataSourceQueryPolicy) *PolicyDataSourceQueryPolicy {
		return &v
	}).(PolicyDataSourceQueryPolicyPtrOutput)
}

// Disallow running DDL statements in the SQL editor.
func (o PolicyDataSourceQueryPolicyOutput) DisallowDdl() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PolicyDataSourceQueryPolicy) *bool { return v.DisallowDdl }).(pulumi.BoolPtrOutput)
}

// Disallow running DML statements in the SQL editor.
func (o PolicyDataSourceQueryPolicyOutput) DisallowDml() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PolicyDataSourceQueryPolicy) *bool { return v.DisallowDml }).(pulumi.BoolPtrOutput)
}

// RESTRICTION_UNSPECIFIED means no restriction; FALLBACK will allows to query admin data sources when there is no read-only data source; DISALLOW will always disallow to query admin data sources.
func (o PolicyDataSourceQueryPolicyOutput) Restriction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyDataSourceQueryPolicy) *string { return v.Restriction }).(pulumi.StringPtrOutput)
}

type PolicyDataSourceQueryPolicyPtrOutput struct{ *pulumi.OutputState }

func (PolicyDataSourceQueryPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyDataSourceQueryPolicy)(nil)).Elem()
}

func (o PolicyDataSourceQueryPolicyPtrOutput) ToPolicyDataSourceQueryPolicyPtrOutput() PolicyDataSourceQueryPolicyPtrOutput {
	return o
}

func (o PolicyDataSourceQueryPolicyPtrOutput) ToPolicyDataSourceQueryPolicyPtrOutputWithContext(ctx context.Context) PolicyDataSourceQueryPolicyPtrOutput {
	return o
}

func (o PolicyDataSourceQueryPolicyPtrOutput) Elem() PolicyDataSourceQueryPolicyOutput {
	return o.ApplyT(func(v *PolicyDataSourceQueryPolicy) PolicyDataSourceQueryPolicy {
		if v != nil {
			return *v
		}
		var ret PolicyDataSourceQueryPolicy
		return ret
	}).(PolicyDataSourceQueryPolicyOutput)
}

// Disallow running DDL statements in the SQL editor.
func (o PolicyDataSourceQueryPolicyPtrOutput) DisallowDdl() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PolicyDataSourceQueryPolicy) *bool {
		if v == nil {
			return nil
		}
		return v.DisallowDdl
	}).(pulumi.BoolPtrOutput)
}

// Disallow running DML statements in the SQL editor.
func (o PolicyDataSourceQueryPolicyPtrOutput) DisallowDml() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PolicyDataSourceQueryPolicy) *bool {
		if v == nil {
			return nil
		}
		return v.DisallowDml
	}).(pulumi.BoolPtrOutput)
}

// RESTRICTION_UNSPECIFIED means no restriction; FALLBACK will allows to query admin data sources when there is no read-only data source; DISALLOW will always disallow to query admin data sources.
func (o PolicyDataSourceQueryPolicyPtrOutput) Restriction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolicyDataSourceQueryPolicy) *string {
		if v == nil {
			return nil
		}
		return v.Restriction
	}).(pulumi.StringPtrOutput)
}

type PolicyDisableCopyDataPolicy struct {
	// Restrict data copying
	Enable bool `pulumi:"enable"`
}

// PolicyDisableCopyDataPolicyInput is an input type that accepts PolicyDisableCopyDataPolicyArgs and PolicyDisableCopyDataPolicyOutput values.
// You can construct a concrete instance of `PolicyDisableCopyDataPolicyInput` via:
//
//	PolicyDisableCopyDataPolicyArgs{...}
type PolicyDisableCopyDataPolicyInput interface {
	pulumi.Input

	ToPolicyDisableCopyDataPolicyOutput() PolicyDisableCopyDataPolicyOutput
	ToPolicyDisableCopyDataPolicyOutputWithContext(context.Context) PolicyDisableCopyDataPolicyOutput
}

type PolicyDisableCopyDataPolicyArgs struct {
	// Restrict data copying
	Enable pulumi.BoolInput `pulumi:"enable"`
}

func (PolicyDisableCopyDataPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyDisableCopyDataPolicy)(nil)).Elem()
}

func (i PolicyDisableCopyDataPolicyArgs) ToPolicyDisableCopyDataPolicyOutput() PolicyDisableCopyDataPolicyOutput {
	return i.ToPolicyDisableCopyDataPolicyOutputWithContext(context.Background())
}

func (i PolicyDisableCopyDataPolicyArgs) ToPolicyDisableCopyDataPolicyOutputWithContext(ctx context.Context) PolicyDisableCopyDataPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyDisableCopyDataPolicyOutput)
}

func (i PolicyDisableCopyDataPolicyArgs) ToPolicyDisableCopyDataPolicyPtrOutput() PolicyDisableCopyDataPolicyPtrOutput {
	return i.ToPolicyDisableCopyDataPolicyPtrOutputWithContext(context.Background())
}

func (i PolicyDisableCopyDataPolicyArgs) ToPolicyDisableCopyDataPolicyPtrOutputWithContext(ctx context.Context) PolicyDisableCopyDataPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyDisableCopyDataPolicyOutput).ToPolicyDisableCopyDataPolicyPtrOutputWithContext(ctx)
}

// PolicyDisableCopyDataPolicyPtrInput is an input type that accepts PolicyDisableCopyDataPolicyArgs, PolicyDisableCopyDataPolicyPtr and PolicyDisableCopyDataPolicyPtrOutput values.
// You can construct a concrete instance of `PolicyDisableCopyDataPolicyPtrInput` via:
//
//	        PolicyDisableCopyDataPolicyArgs{...}
//
//	or:
//
//	        nil
type PolicyDisableCopyDataPolicyPtrInput interface {
	pulumi.Input

	ToPolicyDisableCopyDataPolicyPtrOutput() PolicyDisableCopyDataPolicyPtrOutput
	ToPolicyDisableCopyDataPolicyPtrOutputWithContext(context.Context) PolicyDisableCopyDataPolicyPtrOutput
}

type policyDisableCopyDataPolicyPtrType PolicyDisableCopyDataPolicyArgs

func PolicyDisableCopyDataPolicyPtr(v *PolicyDisableCopyDataPolicyArgs) PolicyDisableCopyDataPolicyPtrInput {
	return (*policyDisableCopyDataPolicyPtrType)(v)
}

func (*policyDisableCopyDataPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyDisableCopyDataPolicy)(nil)).Elem()
}

func (i *policyDisableCopyDataPolicyPtrType) ToPolicyDisableCopyDataPolicyPtrOutput() PolicyDisableCopyDataPolicyPtrOutput {
	return i.ToPolicyDisableCopyDataPolicyPtrOutputWithContext(context.Background())
}

func (i *policyDisableCopyDataPolicyPtrType) ToPolicyDisableCopyDataPolicyPtrOutputWithContext(ctx context.Context) PolicyDisableCopyDataPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyDisableCopyDataPolicyPtrOutput)
}

type PolicyDisableCopyDataPolicyOutput struct{ *pulumi.OutputState }

func (PolicyDisableCopyDataPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyDisableCopyDataPolicy)(nil)).Elem()
}

func (o PolicyDisableCopyDataPolicyOutput) ToPolicyDisableCopyDataPolicyOutput() PolicyDisableCopyDataPolicyOutput {
	return o
}

func (o PolicyDisableCopyDataPolicyOutput) ToPolicyDisableCopyDataPolicyOutputWithContext(ctx context.Context) PolicyDisableCopyDataPolicyOutput {
	return o
}

func (o PolicyDisableCopyDataPolicyOutput) ToPolicyDisableCopyDataPolicyPtrOutput() PolicyDisableCopyDataPolicyPtrOutput {
	return o.ToPolicyDisableCopyDataPolicyPtrOutputWithContext(context.Background())
}

func (o PolicyDisableCopyDataPolicyOutput) ToPolicyDisableCopyDataPolicyPtrOutputWithContext(ctx context.Context) PolicyDisableCopyDataPolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PolicyDisableCopyDataPolicy) *PolicyDisableCopyDataPolicy {
		return &v
	}).(PolicyDisableCopyDataPolicyPtrOutput)
}

// Restrict data copying
func (o PolicyDisableCopyDataPolicyOutput) Enable() pulumi.BoolOutput {
	return o.ApplyT(func(v PolicyDisableCopyDataPolicy) bool { return v.Enable }).(pulumi.BoolOutput)
}

type PolicyDisableCopyDataPolicyPtrOutput struct{ *pulumi.OutputState }

func (PolicyDisableCopyDataPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyDisableCopyDataPolicy)(nil)).Elem()
}

func (o PolicyDisableCopyDataPolicyPtrOutput) ToPolicyDisableCopyDataPolicyPtrOutput() PolicyDisableCopyDataPolicyPtrOutput {
	return o
}

func (o PolicyDisableCopyDataPolicyPtrOutput) ToPolicyDisableCopyDataPolicyPtrOutputWithContext(ctx context.Context) PolicyDisableCopyDataPolicyPtrOutput {
	return o
}

func (o PolicyDisableCopyDataPolicyPtrOutput) Elem() PolicyDisableCopyDataPolicyOutput {
	return o.ApplyT(func(v *PolicyDisableCopyDataPolicy) PolicyDisableCopyDataPolicy {
		if v != nil {
			return *v
		}
		var ret PolicyDisableCopyDataPolicy
		return ret
	}).(PolicyDisableCopyDataPolicyOutput)
}

// Restrict data copying
func (o PolicyDisableCopyDataPolicyPtrOutput) Enable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PolicyDisableCopyDataPolicy) *bool {
		if v == nil {
			return nil
		}
		return &v.Enable
	}).(pulumi.BoolPtrOutput)
}

type PolicyGlobalMaskingPolicy struct {
	Rules []PolicyGlobalMaskingPolicyRule `pulumi:"rules"`
}

// PolicyGlobalMaskingPolicyInput is an input type that accepts PolicyGlobalMaskingPolicyArgs and PolicyGlobalMaskingPolicyOutput values.
// You can construct a concrete instance of `PolicyGlobalMaskingPolicyInput` via:
//
//	PolicyGlobalMaskingPolicyArgs{...}
type PolicyGlobalMaskingPolicyInput interface {
	pulumi.Input

	ToPolicyGlobalMaskingPolicyOutput() PolicyGlobalMaskingPolicyOutput
	ToPolicyGlobalMaskingPolicyOutputWithContext(context.Context) PolicyGlobalMaskingPolicyOutput
}

type PolicyGlobalMaskingPolicyArgs struct {
	Rules PolicyGlobalMaskingPolicyRuleArrayInput `pulumi:"rules"`
}

func (PolicyGlobalMaskingPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyGlobalMaskingPolicy)(nil)).Elem()
}

func (i PolicyGlobalMaskingPolicyArgs) ToPolicyGlobalMaskingPolicyOutput() PolicyGlobalMaskingPolicyOutput {
	return i.ToPolicyGlobalMaskingPolicyOutputWithContext(context.Background())
}

func (i PolicyGlobalMaskingPolicyArgs) ToPolicyGlobalMaskingPolicyOutputWithContext(ctx context.Context) PolicyGlobalMaskingPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyGlobalMaskingPolicyOutput)
}

func (i PolicyGlobalMaskingPolicyArgs) ToPolicyGlobalMaskingPolicyPtrOutput() PolicyGlobalMaskingPolicyPtrOutput {
	return i.ToPolicyGlobalMaskingPolicyPtrOutputWithContext(context.Background())
}

func (i PolicyGlobalMaskingPolicyArgs) ToPolicyGlobalMaskingPolicyPtrOutputWithContext(ctx context.Context) PolicyGlobalMaskingPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyGlobalMaskingPolicyOutput).ToPolicyGlobalMaskingPolicyPtrOutputWithContext(ctx)
}

// PolicyGlobalMaskingPolicyPtrInput is an input type that accepts PolicyGlobalMaskingPolicyArgs, PolicyGlobalMaskingPolicyPtr and PolicyGlobalMaskingPolicyPtrOutput values.
// You can construct a concrete instance of `PolicyGlobalMaskingPolicyPtrInput` via:
//
//	        PolicyGlobalMaskingPolicyArgs{...}
//
//	or:
//
//	        nil
type PolicyGlobalMaskingPolicyPtrInput interface {
	pulumi.Input

	ToPolicyGlobalMaskingPolicyPtrOutput() PolicyGlobalMaskingPolicyPtrOutput
	ToPolicyGlobalMaskingPolicyPtrOutputWithContext(context.Context) PolicyGlobalMaskingPolicyPtrOutput
}

type policyGlobalMaskingPolicyPtrType PolicyGlobalMaskingPolicyArgs

func PolicyGlobalMaskingPolicyPtr(v *PolicyGlobalMaskingPolicyArgs) PolicyGlobalMaskingPolicyPtrInput {
	return (*policyGlobalMaskingPolicyPtrType)(v)
}

func (*policyGlobalMaskingPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyGlobalMaskingPolicy)(nil)).Elem()
}

func (i *policyGlobalMaskingPolicyPtrType) ToPolicyGlobalMaskingPolicyPtrOutput() PolicyGlobalMaskingPolicyPtrOutput {
	return i.ToPolicyGlobalMaskingPolicyPtrOutputWithContext(context.Background())
}

func (i *policyGlobalMaskingPolicyPtrType) ToPolicyGlobalMaskingPolicyPtrOutputWithContext(ctx context.Context) PolicyGlobalMaskingPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyGlobalMaskingPolicyPtrOutput)
}

type PolicyGlobalMaskingPolicyOutput struct{ *pulumi.OutputState }

func (PolicyGlobalMaskingPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyGlobalMaskingPolicy)(nil)).Elem()
}

func (o PolicyGlobalMaskingPolicyOutput) ToPolicyGlobalMaskingPolicyOutput() PolicyGlobalMaskingPolicyOutput {
	return o
}

func (o PolicyGlobalMaskingPolicyOutput) ToPolicyGlobalMaskingPolicyOutputWithContext(ctx context.Context) PolicyGlobalMaskingPolicyOutput {
	return o
}

func (o PolicyGlobalMaskingPolicyOutput) ToPolicyGlobalMaskingPolicyPtrOutput() PolicyGlobalMaskingPolicyPtrOutput {
	return o.ToPolicyGlobalMaskingPolicyPtrOutputWithContext(context.Background())
}

func (o PolicyGlobalMaskingPolicyOutput) ToPolicyGlobalMaskingPolicyPtrOutputWithContext(ctx context.Context) PolicyGlobalMaskingPolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PolicyGlobalMaskingPolicy) *PolicyGlobalMaskingPolicy {
		return &v
	}).(PolicyGlobalMaskingPolicyPtrOutput)
}

func (o PolicyGlobalMaskingPolicyOutput) Rules() PolicyGlobalMaskingPolicyRuleArrayOutput {
	return o.ApplyT(func(v PolicyGlobalMaskingPolicy) []PolicyGlobalMaskingPolicyRule { return v.Rules }).(PolicyGlobalMaskingPolicyRuleArrayOutput)
}

type PolicyGlobalMaskingPolicyPtrOutput struct{ *pulumi.OutputState }

func (PolicyGlobalMaskingPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyGlobalMaskingPolicy)(nil)).Elem()
}

func (o PolicyGlobalMaskingPolicyPtrOutput) ToPolicyGlobalMaskingPolicyPtrOutput() PolicyGlobalMaskingPolicyPtrOutput {
	return o
}

func (o PolicyGlobalMaskingPolicyPtrOutput) ToPolicyGlobalMaskingPolicyPtrOutputWithContext(ctx context.Context) PolicyGlobalMaskingPolicyPtrOutput {
	return o
}

func (o PolicyGlobalMaskingPolicyPtrOutput) Elem() PolicyGlobalMaskingPolicyOutput {
	return o.ApplyT(func(v *PolicyGlobalMaskingPolicy) PolicyGlobalMaskingPolicy {
		if v != nil {
			return *v
		}
		var ret PolicyGlobalMaskingPolicy
		return ret
	}).(PolicyGlobalMaskingPolicyOutput)
}

func (o PolicyGlobalMaskingPolicyPtrOutput) Rules() PolicyGlobalMaskingPolicyRuleArrayOutput {
	return o.ApplyT(func(v *PolicyGlobalMaskingPolicy) []PolicyGlobalMaskingPolicyRule {
		if v == nil {
			return nil
		}
		return v.Rules
	}).(PolicyGlobalMaskingPolicyRuleArrayOutput)
}

type PolicyGlobalMaskingPolicyRule struct {
	// The condition expression
	Condition string `pulumi:"condition"`
	// The unique rule id
	Id string `pulumi:"id"`
	// The semantic type id
	SemanticType string `pulumi:"semanticType"`
	// The title for the rule
	Title *string `pulumi:"title"`
}

// PolicyGlobalMaskingPolicyRuleInput is an input type that accepts PolicyGlobalMaskingPolicyRuleArgs and PolicyGlobalMaskingPolicyRuleOutput values.
// You can construct a concrete instance of `PolicyGlobalMaskingPolicyRuleInput` via:
//
//	PolicyGlobalMaskingPolicyRuleArgs{...}
type PolicyGlobalMaskingPolicyRuleInput interface {
	pulumi.Input

	ToPolicyGlobalMaskingPolicyRuleOutput() PolicyGlobalMaskingPolicyRuleOutput
	ToPolicyGlobalMaskingPolicyRuleOutputWithContext(context.Context) PolicyGlobalMaskingPolicyRuleOutput
}

type PolicyGlobalMaskingPolicyRuleArgs struct {
	// The condition expression
	Condition pulumi.StringInput `pulumi:"condition"`
	// The unique rule id
	Id pulumi.StringInput `pulumi:"id"`
	// The semantic type id
	SemanticType pulumi.StringInput `pulumi:"semanticType"`
	// The title for the rule
	Title pulumi.StringPtrInput `pulumi:"title"`
}

func (PolicyGlobalMaskingPolicyRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyGlobalMaskingPolicyRule)(nil)).Elem()
}

func (i PolicyGlobalMaskingPolicyRuleArgs) ToPolicyGlobalMaskingPolicyRuleOutput() PolicyGlobalMaskingPolicyRuleOutput {
	return i.ToPolicyGlobalMaskingPolicyRuleOutputWithContext(context.Background())
}

func (i PolicyGlobalMaskingPolicyRuleArgs) ToPolicyGlobalMaskingPolicyRuleOutputWithContext(ctx context.Context) PolicyGlobalMaskingPolicyRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyGlobalMaskingPolicyRuleOutput)
}

// PolicyGlobalMaskingPolicyRuleArrayInput is an input type that accepts PolicyGlobalMaskingPolicyRuleArray and PolicyGlobalMaskingPolicyRuleArrayOutput values.
// You can construct a concrete instance of `PolicyGlobalMaskingPolicyRuleArrayInput` via:
//
//	PolicyGlobalMaskingPolicyRuleArray{ PolicyGlobalMaskingPolicyRuleArgs{...} }
type PolicyGlobalMaskingPolicyRuleArrayInput interface {
	pulumi.Input

	ToPolicyGlobalMaskingPolicyRuleArrayOutput() PolicyGlobalMaskingPolicyRuleArrayOutput
	ToPolicyGlobalMaskingPolicyRuleArrayOutputWithContext(context.Context) PolicyGlobalMaskingPolicyRuleArrayOutput
}

type PolicyGlobalMaskingPolicyRuleArray []PolicyGlobalMaskingPolicyRuleInput

func (PolicyGlobalMaskingPolicyRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyGlobalMaskingPolicyRule)(nil)).Elem()
}

func (i PolicyGlobalMaskingPolicyRuleArray) ToPolicyGlobalMaskingPolicyRuleArrayOutput() PolicyGlobalMaskingPolicyRuleArrayOutput {
	return i.ToPolicyGlobalMaskingPolicyRuleArrayOutputWithContext(context.Background())
}

func (i PolicyGlobalMaskingPolicyRuleArray) ToPolicyGlobalMaskingPolicyRuleArrayOutputWithContext(ctx context.Context) PolicyGlobalMaskingPolicyRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyGlobalMaskingPolicyRuleArrayOutput)
}

type PolicyGlobalMaskingPolicyRuleOutput struct{ *pulumi.OutputState }

func (PolicyGlobalMaskingPolicyRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyGlobalMaskingPolicyRule)(nil)).Elem()
}

func (o PolicyGlobalMaskingPolicyRuleOutput) ToPolicyGlobalMaskingPolicyRuleOutput() PolicyGlobalMaskingPolicyRuleOutput {
	return o
}

func (o PolicyGlobalMaskingPolicyRuleOutput) ToPolicyGlobalMaskingPolicyRuleOutputWithContext(ctx context.Context) PolicyGlobalMaskingPolicyRuleOutput {
	return o
}

// The condition expression
func (o PolicyGlobalMaskingPolicyRuleOutput) Condition() pulumi.StringOutput {
	return o.ApplyT(func(v PolicyGlobalMaskingPolicyRule) string { return v.Condition }).(pulumi.StringOutput)
}

// The unique rule id
func (o PolicyGlobalMaskingPolicyRuleOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v PolicyGlobalMaskingPolicyRule) string { return v.Id }).(pulumi.StringOutput)
}

// The semantic type id
func (o PolicyGlobalMaskingPolicyRuleOutput) SemanticType() pulumi.StringOutput {
	return o.ApplyT(func(v PolicyGlobalMaskingPolicyRule) string { return v.SemanticType }).(pulumi.StringOutput)
}

// The title for the rule
func (o PolicyGlobalMaskingPolicyRuleOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyGlobalMaskingPolicyRule) *string { return v.Title }).(pulumi.StringPtrOutput)
}

type PolicyGlobalMaskingPolicyRuleArrayOutput struct{ *pulumi.OutputState }

func (PolicyGlobalMaskingPolicyRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyGlobalMaskingPolicyRule)(nil)).Elem()
}

func (o PolicyGlobalMaskingPolicyRuleArrayOutput) ToPolicyGlobalMaskingPolicyRuleArrayOutput() PolicyGlobalMaskingPolicyRuleArrayOutput {
	return o
}

func (o PolicyGlobalMaskingPolicyRuleArrayOutput) ToPolicyGlobalMaskingPolicyRuleArrayOutputWithContext(ctx context.Context) PolicyGlobalMaskingPolicyRuleArrayOutput {
	return o
}

func (o PolicyGlobalMaskingPolicyRuleArrayOutput) Index(i pulumi.IntInput) PolicyGlobalMaskingPolicyRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PolicyGlobalMaskingPolicyRule {
		return vs[0].([]PolicyGlobalMaskingPolicyRule)[vs[1].(int)]
	}).(PolicyGlobalMaskingPolicyRuleOutput)
}

type PolicyMaskingExceptionPolicy struct {
	Exceptions []PolicyMaskingExceptionPolicyException `pulumi:"exceptions"`
}

// PolicyMaskingExceptionPolicyInput is an input type that accepts PolicyMaskingExceptionPolicyArgs and PolicyMaskingExceptionPolicyOutput values.
// You can construct a concrete instance of `PolicyMaskingExceptionPolicyInput` via:
//
//	PolicyMaskingExceptionPolicyArgs{...}
type PolicyMaskingExceptionPolicyInput interface {
	pulumi.Input

	ToPolicyMaskingExceptionPolicyOutput() PolicyMaskingExceptionPolicyOutput
	ToPolicyMaskingExceptionPolicyOutputWithContext(context.Context) PolicyMaskingExceptionPolicyOutput
}

type PolicyMaskingExceptionPolicyArgs struct {
	Exceptions PolicyMaskingExceptionPolicyExceptionArrayInput `pulumi:"exceptions"`
}

func (PolicyMaskingExceptionPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyMaskingExceptionPolicy)(nil)).Elem()
}

func (i PolicyMaskingExceptionPolicyArgs) ToPolicyMaskingExceptionPolicyOutput() PolicyMaskingExceptionPolicyOutput {
	return i.ToPolicyMaskingExceptionPolicyOutputWithContext(context.Background())
}

func (i PolicyMaskingExceptionPolicyArgs) ToPolicyMaskingExceptionPolicyOutputWithContext(ctx context.Context) PolicyMaskingExceptionPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyMaskingExceptionPolicyOutput)
}

func (i PolicyMaskingExceptionPolicyArgs) ToPolicyMaskingExceptionPolicyPtrOutput() PolicyMaskingExceptionPolicyPtrOutput {
	return i.ToPolicyMaskingExceptionPolicyPtrOutputWithContext(context.Background())
}

func (i PolicyMaskingExceptionPolicyArgs) ToPolicyMaskingExceptionPolicyPtrOutputWithContext(ctx context.Context) PolicyMaskingExceptionPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyMaskingExceptionPolicyOutput).ToPolicyMaskingExceptionPolicyPtrOutputWithContext(ctx)
}

// PolicyMaskingExceptionPolicyPtrInput is an input type that accepts PolicyMaskingExceptionPolicyArgs, PolicyMaskingExceptionPolicyPtr and PolicyMaskingExceptionPolicyPtrOutput values.
// You can construct a concrete instance of `PolicyMaskingExceptionPolicyPtrInput` via:
//
//	        PolicyMaskingExceptionPolicyArgs{...}
//
//	or:
//
//	        nil
type PolicyMaskingExceptionPolicyPtrInput interface {
	pulumi.Input

	ToPolicyMaskingExceptionPolicyPtrOutput() PolicyMaskingExceptionPolicyPtrOutput
	ToPolicyMaskingExceptionPolicyPtrOutputWithContext(context.Context) PolicyMaskingExceptionPolicyPtrOutput
}

type policyMaskingExceptionPolicyPtrType PolicyMaskingExceptionPolicyArgs

func PolicyMaskingExceptionPolicyPtr(v *PolicyMaskingExceptionPolicyArgs) PolicyMaskingExceptionPolicyPtrInput {
	return (*policyMaskingExceptionPolicyPtrType)(v)
}

func (*policyMaskingExceptionPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyMaskingExceptionPolicy)(nil)).Elem()
}

func (i *policyMaskingExceptionPolicyPtrType) ToPolicyMaskingExceptionPolicyPtrOutput() PolicyMaskingExceptionPolicyPtrOutput {
	return i.ToPolicyMaskingExceptionPolicyPtrOutputWithContext(context.Background())
}

func (i *policyMaskingExceptionPolicyPtrType) ToPolicyMaskingExceptionPolicyPtrOutputWithContext(ctx context.Context) PolicyMaskingExceptionPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyMaskingExceptionPolicyPtrOutput)
}

type PolicyMaskingExceptionPolicyOutput struct{ *pulumi.OutputState }

func (PolicyMaskingExceptionPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyMaskingExceptionPolicy)(nil)).Elem()
}

func (o PolicyMaskingExceptionPolicyOutput) ToPolicyMaskingExceptionPolicyOutput() PolicyMaskingExceptionPolicyOutput {
	return o
}

func (o PolicyMaskingExceptionPolicyOutput) ToPolicyMaskingExceptionPolicyOutputWithContext(ctx context.Context) PolicyMaskingExceptionPolicyOutput {
	return o
}

func (o PolicyMaskingExceptionPolicyOutput) ToPolicyMaskingExceptionPolicyPtrOutput() PolicyMaskingExceptionPolicyPtrOutput {
	return o.ToPolicyMaskingExceptionPolicyPtrOutputWithContext(context.Background())
}

func (o PolicyMaskingExceptionPolicyOutput) ToPolicyMaskingExceptionPolicyPtrOutputWithContext(ctx context.Context) PolicyMaskingExceptionPolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PolicyMaskingExceptionPolicy) *PolicyMaskingExceptionPolicy {
		return &v
	}).(PolicyMaskingExceptionPolicyPtrOutput)
}

func (o PolicyMaskingExceptionPolicyOutput) Exceptions() PolicyMaskingExceptionPolicyExceptionArrayOutput {
	return o.ApplyT(func(v PolicyMaskingExceptionPolicy) []PolicyMaskingExceptionPolicyException { return v.Exceptions }).(PolicyMaskingExceptionPolicyExceptionArrayOutput)
}

type PolicyMaskingExceptionPolicyPtrOutput struct{ *pulumi.OutputState }

func (PolicyMaskingExceptionPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyMaskingExceptionPolicy)(nil)).Elem()
}

func (o PolicyMaskingExceptionPolicyPtrOutput) ToPolicyMaskingExceptionPolicyPtrOutput() PolicyMaskingExceptionPolicyPtrOutput {
	return o
}

func (o PolicyMaskingExceptionPolicyPtrOutput) ToPolicyMaskingExceptionPolicyPtrOutputWithContext(ctx context.Context) PolicyMaskingExceptionPolicyPtrOutput {
	return o
}

func (o PolicyMaskingExceptionPolicyPtrOutput) Elem() PolicyMaskingExceptionPolicyOutput {
	return o.ApplyT(func(v *PolicyMaskingExceptionPolicy) PolicyMaskingExceptionPolicy {
		if v != nil {
			return *v
		}
		var ret PolicyMaskingExceptionPolicy
		return ret
	}).(PolicyMaskingExceptionPolicyOutput)
}

func (o PolicyMaskingExceptionPolicyPtrOutput) Exceptions() PolicyMaskingExceptionPolicyExceptionArrayOutput {
	return o.ApplyT(func(v *PolicyMaskingExceptionPolicy) []PolicyMaskingExceptionPolicyException {
		if v == nil {
			return nil
		}
		return v.Exceptions
	}).(PolicyMaskingExceptionPolicyExceptionArrayOutput)
}

type PolicyMaskingExceptionPolicyException struct {
	Action string  `pulumi:"action"`
	Column *string `pulumi:"column"`
	// The database full name in instances/{instance resource id}/databases/{database name} format
	Database string `pulumi:"database"`
	// The expiration timestamp in YYYY-MM-DDThh:mm:ss.000Z format
	ExpireTimestamp *string `pulumi:"expireTimestamp"`
	// The member in user:{email} or group:{email} format.
	Member string `pulumi:"member"`
	// The reason for the masking exemption
	Reason *string `pulumi:"reason"`
	Schema *string `pulumi:"schema"`
	Table  *string `pulumi:"table"`
}

// PolicyMaskingExceptionPolicyExceptionInput is an input type that accepts PolicyMaskingExceptionPolicyExceptionArgs and PolicyMaskingExceptionPolicyExceptionOutput values.
// You can construct a concrete instance of `PolicyMaskingExceptionPolicyExceptionInput` via:
//
//	PolicyMaskingExceptionPolicyExceptionArgs{...}
type PolicyMaskingExceptionPolicyExceptionInput interface {
	pulumi.Input

	ToPolicyMaskingExceptionPolicyExceptionOutput() PolicyMaskingExceptionPolicyExceptionOutput
	ToPolicyMaskingExceptionPolicyExceptionOutputWithContext(context.Context) PolicyMaskingExceptionPolicyExceptionOutput
}

type PolicyMaskingExceptionPolicyExceptionArgs struct {
	Action pulumi.StringInput    `pulumi:"action"`
	Column pulumi.StringPtrInput `pulumi:"column"`
	// The database full name in instances/{instance resource id}/databases/{database name} format
	Database pulumi.StringInput `pulumi:"database"`
	// The expiration timestamp in YYYY-MM-DDThh:mm:ss.000Z format
	ExpireTimestamp pulumi.StringPtrInput `pulumi:"expireTimestamp"`
	// The member in user:{email} or group:{email} format.
	Member pulumi.StringInput `pulumi:"member"`
	// The reason for the masking exemption
	Reason pulumi.StringPtrInput `pulumi:"reason"`
	Schema pulumi.StringPtrInput `pulumi:"schema"`
	Table  pulumi.StringPtrInput `pulumi:"table"`
}

func (PolicyMaskingExceptionPolicyExceptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyMaskingExceptionPolicyException)(nil)).Elem()
}

func (i PolicyMaskingExceptionPolicyExceptionArgs) ToPolicyMaskingExceptionPolicyExceptionOutput() PolicyMaskingExceptionPolicyExceptionOutput {
	return i.ToPolicyMaskingExceptionPolicyExceptionOutputWithContext(context.Background())
}

func (i PolicyMaskingExceptionPolicyExceptionArgs) ToPolicyMaskingExceptionPolicyExceptionOutputWithContext(ctx context.Context) PolicyMaskingExceptionPolicyExceptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyMaskingExceptionPolicyExceptionOutput)
}

// PolicyMaskingExceptionPolicyExceptionArrayInput is an input type that accepts PolicyMaskingExceptionPolicyExceptionArray and PolicyMaskingExceptionPolicyExceptionArrayOutput values.
// You can construct a concrete instance of `PolicyMaskingExceptionPolicyExceptionArrayInput` via:
//
//	PolicyMaskingExceptionPolicyExceptionArray{ PolicyMaskingExceptionPolicyExceptionArgs{...} }
type PolicyMaskingExceptionPolicyExceptionArrayInput interface {
	pulumi.Input

	ToPolicyMaskingExceptionPolicyExceptionArrayOutput() PolicyMaskingExceptionPolicyExceptionArrayOutput
	ToPolicyMaskingExceptionPolicyExceptionArrayOutputWithContext(context.Context) PolicyMaskingExceptionPolicyExceptionArrayOutput
}

type PolicyMaskingExceptionPolicyExceptionArray []PolicyMaskingExceptionPolicyExceptionInput

func (PolicyMaskingExceptionPolicyExceptionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyMaskingExceptionPolicyException)(nil)).Elem()
}

func (i PolicyMaskingExceptionPolicyExceptionArray) ToPolicyMaskingExceptionPolicyExceptionArrayOutput() PolicyMaskingExceptionPolicyExceptionArrayOutput {
	return i.ToPolicyMaskingExceptionPolicyExceptionArrayOutputWithContext(context.Background())
}

func (i PolicyMaskingExceptionPolicyExceptionArray) ToPolicyMaskingExceptionPolicyExceptionArrayOutputWithContext(ctx context.Context) PolicyMaskingExceptionPolicyExceptionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyMaskingExceptionPolicyExceptionArrayOutput)
}

type PolicyMaskingExceptionPolicyExceptionOutput struct{ *pulumi.OutputState }

func (PolicyMaskingExceptionPolicyExceptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyMaskingExceptionPolicyException)(nil)).Elem()
}

func (o PolicyMaskingExceptionPolicyExceptionOutput) ToPolicyMaskingExceptionPolicyExceptionOutput() PolicyMaskingExceptionPolicyExceptionOutput {
	return o
}

func (o PolicyMaskingExceptionPolicyExceptionOutput) ToPolicyMaskingExceptionPolicyExceptionOutputWithContext(ctx context.Context) PolicyMaskingExceptionPolicyExceptionOutput {
	return o
}

func (o PolicyMaskingExceptionPolicyExceptionOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v PolicyMaskingExceptionPolicyException) string { return v.Action }).(pulumi.StringOutput)
}

func (o PolicyMaskingExceptionPolicyExceptionOutput) Column() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyMaskingExceptionPolicyException) *string { return v.Column }).(pulumi.StringPtrOutput)
}

// The database full name in instances/{instance resource id}/databases/{database name} format
func (o PolicyMaskingExceptionPolicyExceptionOutput) Database() pulumi.StringOutput {
	return o.ApplyT(func(v PolicyMaskingExceptionPolicyException) string { return v.Database }).(pulumi.StringOutput)
}

// The expiration timestamp in YYYY-MM-DDThh:mm:ss.000Z format
func (o PolicyMaskingExceptionPolicyExceptionOutput) ExpireTimestamp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyMaskingExceptionPolicyException) *string { return v.ExpireTimestamp }).(pulumi.StringPtrOutput)
}

// The member in user:{email} or group:{email} format.
func (o PolicyMaskingExceptionPolicyExceptionOutput) Member() pulumi.StringOutput {
	return o.ApplyT(func(v PolicyMaskingExceptionPolicyException) string { return v.Member }).(pulumi.StringOutput)
}

// The reason for the masking exemption
func (o PolicyMaskingExceptionPolicyExceptionOutput) Reason() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyMaskingExceptionPolicyException) *string { return v.Reason }).(pulumi.StringPtrOutput)
}

func (o PolicyMaskingExceptionPolicyExceptionOutput) Schema() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyMaskingExceptionPolicyException) *string { return v.Schema }).(pulumi.StringPtrOutput)
}

func (o PolicyMaskingExceptionPolicyExceptionOutput) Table() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyMaskingExceptionPolicyException) *string { return v.Table }).(pulumi.StringPtrOutput)
}

type PolicyMaskingExceptionPolicyExceptionArrayOutput struct{ *pulumi.OutputState }

func (PolicyMaskingExceptionPolicyExceptionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyMaskingExceptionPolicyException)(nil)).Elem()
}

func (o PolicyMaskingExceptionPolicyExceptionArrayOutput) ToPolicyMaskingExceptionPolicyExceptionArrayOutput() PolicyMaskingExceptionPolicyExceptionArrayOutput {
	return o
}

func (o PolicyMaskingExceptionPolicyExceptionArrayOutput) ToPolicyMaskingExceptionPolicyExceptionArrayOutputWithContext(ctx context.Context) PolicyMaskingExceptionPolicyExceptionArrayOutput {
	return o
}

func (o PolicyMaskingExceptionPolicyExceptionArrayOutput) Index(i pulumi.IntInput) PolicyMaskingExceptionPolicyExceptionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PolicyMaskingExceptionPolicyException {
		return vs[0].([]PolicyMaskingExceptionPolicyException)[vs[1].(int)]
	}).(PolicyMaskingExceptionPolicyExceptionOutput)
}

type PolicyRolloutPolicy struct {
	// If all check pass, the change will be rolled out and executed automatically.
	Automatic *bool `pulumi:"automatic"`
	// If any roles are specified, Bytebase requires users with those roles to manually roll out the change.
	Roles []string `pulumi:"roles"`
}

// PolicyRolloutPolicyInput is an input type that accepts PolicyRolloutPolicyArgs and PolicyRolloutPolicyOutput values.
// You can construct a concrete instance of `PolicyRolloutPolicyInput` via:
//
//	PolicyRolloutPolicyArgs{...}
type PolicyRolloutPolicyInput interface {
	pulumi.Input

	ToPolicyRolloutPolicyOutput() PolicyRolloutPolicyOutput
	ToPolicyRolloutPolicyOutputWithContext(context.Context) PolicyRolloutPolicyOutput
}

type PolicyRolloutPolicyArgs struct {
	// If all check pass, the change will be rolled out and executed automatically.
	Automatic pulumi.BoolPtrInput `pulumi:"automatic"`
	// If any roles are specified, Bytebase requires users with those roles to manually roll out the change.
	Roles pulumi.StringArrayInput `pulumi:"roles"`
}

func (PolicyRolloutPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyRolloutPolicy)(nil)).Elem()
}

func (i PolicyRolloutPolicyArgs) ToPolicyRolloutPolicyOutput() PolicyRolloutPolicyOutput {
	return i.ToPolicyRolloutPolicyOutputWithContext(context.Background())
}

func (i PolicyRolloutPolicyArgs) ToPolicyRolloutPolicyOutputWithContext(ctx context.Context) PolicyRolloutPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyRolloutPolicyOutput)
}

func (i PolicyRolloutPolicyArgs) ToPolicyRolloutPolicyPtrOutput() PolicyRolloutPolicyPtrOutput {
	return i.ToPolicyRolloutPolicyPtrOutputWithContext(context.Background())
}

func (i PolicyRolloutPolicyArgs) ToPolicyRolloutPolicyPtrOutputWithContext(ctx context.Context) PolicyRolloutPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyRolloutPolicyOutput).ToPolicyRolloutPolicyPtrOutputWithContext(ctx)
}

// PolicyRolloutPolicyPtrInput is an input type that accepts PolicyRolloutPolicyArgs, PolicyRolloutPolicyPtr and PolicyRolloutPolicyPtrOutput values.
// You can construct a concrete instance of `PolicyRolloutPolicyPtrInput` via:
//
//	        PolicyRolloutPolicyArgs{...}
//
//	or:
//
//	        nil
type PolicyRolloutPolicyPtrInput interface {
	pulumi.Input

	ToPolicyRolloutPolicyPtrOutput() PolicyRolloutPolicyPtrOutput
	ToPolicyRolloutPolicyPtrOutputWithContext(context.Context) PolicyRolloutPolicyPtrOutput
}

type policyRolloutPolicyPtrType PolicyRolloutPolicyArgs

func PolicyRolloutPolicyPtr(v *PolicyRolloutPolicyArgs) PolicyRolloutPolicyPtrInput {
	return (*policyRolloutPolicyPtrType)(v)
}

func (*policyRolloutPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyRolloutPolicy)(nil)).Elem()
}

func (i *policyRolloutPolicyPtrType) ToPolicyRolloutPolicyPtrOutput() PolicyRolloutPolicyPtrOutput {
	return i.ToPolicyRolloutPolicyPtrOutputWithContext(context.Background())
}

func (i *policyRolloutPolicyPtrType) ToPolicyRolloutPolicyPtrOutputWithContext(ctx context.Context) PolicyRolloutPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyRolloutPolicyPtrOutput)
}

type PolicyRolloutPolicyOutput struct{ *pulumi.OutputState }

func (PolicyRolloutPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyRolloutPolicy)(nil)).Elem()
}

func (o PolicyRolloutPolicyOutput) ToPolicyRolloutPolicyOutput() PolicyRolloutPolicyOutput {
	return o
}

func (o PolicyRolloutPolicyOutput) ToPolicyRolloutPolicyOutputWithContext(ctx context.Context) PolicyRolloutPolicyOutput {
	return o
}

func (o PolicyRolloutPolicyOutput) ToPolicyRolloutPolicyPtrOutput() PolicyRolloutPolicyPtrOutput {
	return o.ToPolicyRolloutPolicyPtrOutputWithContext(context.Background())
}

func (o PolicyRolloutPolicyOutput) ToPolicyRolloutPolicyPtrOutputWithContext(ctx context.Context) PolicyRolloutPolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PolicyRolloutPolicy) *PolicyRolloutPolicy {
		return &v
	}).(PolicyRolloutPolicyPtrOutput)
}

// If all check pass, the change will be rolled out and executed automatically.
func (o PolicyRolloutPolicyOutput) Automatic() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PolicyRolloutPolicy) *bool { return v.Automatic }).(pulumi.BoolPtrOutput)
}

// If any roles are specified, Bytebase requires users with those roles to manually roll out the change.
func (o PolicyRolloutPolicyOutput) Roles() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PolicyRolloutPolicy) []string { return v.Roles }).(pulumi.StringArrayOutput)
}

type PolicyRolloutPolicyPtrOutput struct{ *pulumi.OutputState }

func (PolicyRolloutPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyRolloutPolicy)(nil)).Elem()
}

func (o PolicyRolloutPolicyPtrOutput) ToPolicyRolloutPolicyPtrOutput() PolicyRolloutPolicyPtrOutput {
	return o
}

func (o PolicyRolloutPolicyPtrOutput) ToPolicyRolloutPolicyPtrOutputWithContext(ctx context.Context) PolicyRolloutPolicyPtrOutput {
	return o
}

func (o PolicyRolloutPolicyPtrOutput) Elem() PolicyRolloutPolicyOutput {
	return o.ApplyT(func(v *PolicyRolloutPolicy) PolicyRolloutPolicy {
		if v != nil {
			return *v
		}
		var ret PolicyRolloutPolicy
		return ret
	}).(PolicyRolloutPolicyOutput)
}

// If all check pass, the change will be rolled out and executed automatically.
func (o PolicyRolloutPolicyPtrOutput) Automatic() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PolicyRolloutPolicy) *bool {
		if v == nil {
			return nil
		}
		return v.Automatic
	}).(pulumi.BoolPtrOutput)
}

// If any roles are specified, Bytebase requires users with those roles to manually roll out the change.
func (o PolicyRolloutPolicyPtrOutput) Roles() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PolicyRolloutPolicy) []string {
		if v == nil {
			return nil
		}
		return v.Roles
	}).(pulumi.StringArrayOutput)
}

type ProjectWebhook struct {
	// If directMessage is set, the notification is sent directly to the persons and url will be ignored. Require IM integration for this function to work.
	DirectMessage *bool `pulumi:"directMessage"`
	// The webhook full name in projects/{resource id}/webhooks/{id} format.
	Name *string `pulumi:"name"`
	// notification_types is the list of activities types that the webhook is interested in. Bytebase will only send notifications to the webhook if the activity type is in the list.
	NotificationTypes []string `pulumi:"notificationTypes"`
	// The webhook title
	Title string `pulumi:"title"`
	// The webhook type. Check https://github.com/bytebase/bytebase/blob/main/proto/v1/v1/project_service.proto#L449 for support types.
	Type string `pulumi:"type"`
	// The webhook URL
	Url string `pulumi:"url"`
}

// ProjectWebhookInput is an input type that accepts ProjectWebhookArgs and ProjectWebhookOutput values.
// You can construct a concrete instance of `ProjectWebhookInput` via:
//
//	ProjectWebhookArgs{...}
type ProjectWebhookInput interface {
	pulumi.Input

	ToProjectWebhookOutput() ProjectWebhookOutput
	ToProjectWebhookOutputWithContext(context.Context) ProjectWebhookOutput
}

type ProjectWebhookArgs struct {
	// If directMessage is set, the notification is sent directly to the persons and url will be ignored. Require IM integration for this function to work.
	DirectMessage pulumi.BoolPtrInput `pulumi:"directMessage"`
	// The webhook full name in projects/{resource id}/webhooks/{id} format.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// notification_types is the list of activities types that the webhook is interested in. Bytebase will only send notifications to the webhook if the activity type is in the list.
	NotificationTypes pulumi.StringArrayInput `pulumi:"notificationTypes"`
	// The webhook title
	Title pulumi.StringInput `pulumi:"title"`
	// The webhook type. Check https://github.com/bytebase/bytebase/blob/main/proto/v1/v1/project_service.proto#L449 for support types.
	Type pulumi.StringInput `pulumi:"type"`
	// The webhook URL
	Url pulumi.StringInput `pulumi:"url"`
}

func (ProjectWebhookArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectWebhook)(nil)).Elem()
}

func (i ProjectWebhookArgs) ToProjectWebhookOutput() ProjectWebhookOutput {
	return i.ToProjectWebhookOutputWithContext(context.Background())
}

func (i ProjectWebhookArgs) ToProjectWebhookOutputWithContext(ctx context.Context) ProjectWebhookOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectWebhookOutput)
}

// ProjectWebhookArrayInput is an input type that accepts ProjectWebhookArray and ProjectWebhookArrayOutput values.
// You can construct a concrete instance of `ProjectWebhookArrayInput` via:
//
//	ProjectWebhookArray{ ProjectWebhookArgs{...} }
type ProjectWebhookArrayInput interface {
	pulumi.Input

	ToProjectWebhookArrayOutput() ProjectWebhookArrayOutput
	ToProjectWebhookArrayOutputWithContext(context.Context) ProjectWebhookArrayOutput
}

type ProjectWebhookArray []ProjectWebhookInput

func (ProjectWebhookArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectWebhook)(nil)).Elem()
}

func (i ProjectWebhookArray) ToProjectWebhookArrayOutput() ProjectWebhookArrayOutput {
	return i.ToProjectWebhookArrayOutputWithContext(context.Background())
}

func (i ProjectWebhookArray) ToProjectWebhookArrayOutputWithContext(ctx context.Context) ProjectWebhookArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectWebhookArrayOutput)
}

type ProjectWebhookOutput struct{ *pulumi.OutputState }

func (ProjectWebhookOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectWebhook)(nil)).Elem()
}

func (o ProjectWebhookOutput) ToProjectWebhookOutput() ProjectWebhookOutput {
	return o
}

func (o ProjectWebhookOutput) ToProjectWebhookOutputWithContext(ctx context.Context) ProjectWebhookOutput {
	return o
}

// If directMessage is set, the notification is sent directly to the persons and url will be ignored. Require IM integration for this function to work.
func (o ProjectWebhookOutput) DirectMessage() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ProjectWebhook) *bool { return v.DirectMessage }).(pulumi.BoolPtrOutput)
}

// The webhook full name in projects/{resource id}/webhooks/{id} format.
func (o ProjectWebhookOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectWebhook) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// notification_types is the list of activities types that the webhook is interested in. Bytebase will only send notifications to the webhook if the activity type is in the list.
func (o ProjectWebhookOutput) NotificationTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ProjectWebhook) []string { return v.NotificationTypes }).(pulumi.StringArrayOutput)
}

// The webhook title
func (o ProjectWebhookOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v ProjectWebhook) string { return v.Title }).(pulumi.StringOutput)
}

// The webhook type. Check https://github.com/bytebase/bytebase/blob/main/proto/v1/v1/project_service.proto#L449 for support types.
func (o ProjectWebhookOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ProjectWebhook) string { return v.Type }).(pulumi.StringOutput)
}

// The webhook URL
func (o ProjectWebhookOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v ProjectWebhook) string { return v.Url }).(pulumi.StringOutput)
}

type ProjectWebhookArrayOutput struct{ *pulumi.OutputState }

func (ProjectWebhookArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectWebhook)(nil)).Elem()
}

func (o ProjectWebhookArrayOutput) ToProjectWebhookArrayOutput() ProjectWebhookArrayOutput {
	return o
}

func (o ProjectWebhookArrayOutput) ToProjectWebhookArrayOutputWithContext(ctx context.Context) ProjectWebhookArrayOutput {
	return o
}

func (o ProjectWebhookArrayOutput) Index(i pulumi.IntInput) ProjectWebhookOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProjectWebhook {
		return vs[0].([]ProjectWebhook)[vs[1].(int)]
	}).(ProjectWebhookOutput)
}

type SettingApprovalFlow struct {
	Rules []SettingApprovalFlowRule `pulumi:"rules"`
}

// SettingApprovalFlowInput is an input type that accepts SettingApprovalFlowArgs and SettingApprovalFlowOutput values.
// You can construct a concrete instance of `SettingApprovalFlowInput` via:
//
//	SettingApprovalFlowArgs{...}
type SettingApprovalFlowInput interface {
	pulumi.Input

	ToSettingApprovalFlowOutput() SettingApprovalFlowOutput
	ToSettingApprovalFlowOutputWithContext(context.Context) SettingApprovalFlowOutput
}

type SettingApprovalFlowArgs struct {
	Rules SettingApprovalFlowRuleArrayInput `pulumi:"rules"`
}

func (SettingApprovalFlowArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SettingApprovalFlow)(nil)).Elem()
}

func (i SettingApprovalFlowArgs) ToSettingApprovalFlowOutput() SettingApprovalFlowOutput {
	return i.ToSettingApprovalFlowOutputWithContext(context.Background())
}

func (i SettingApprovalFlowArgs) ToSettingApprovalFlowOutputWithContext(ctx context.Context) SettingApprovalFlowOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SettingApprovalFlowOutput)
}

// SettingApprovalFlowArrayInput is an input type that accepts SettingApprovalFlowArray and SettingApprovalFlowArrayOutput values.
// You can construct a concrete instance of `SettingApprovalFlowArrayInput` via:
//
//	SettingApprovalFlowArray{ SettingApprovalFlowArgs{...} }
type SettingApprovalFlowArrayInput interface {
	pulumi.Input

	ToSettingApprovalFlowArrayOutput() SettingApprovalFlowArrayOutput
	ToSettingApprovalFlowArrayOutputWithContext(context.Context) SettingApprovalFlowArrayOutput
}

type SettingApprovalFlowArray []SettingApprovalFlowInput

func (SettingApprovalFlowArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SettingApprovalFlow)(nil)).Elem()
}

func (i SettingApprovalFlowArray) ToSettingApprovalFlowArrayOutput() SettingApprovalFlowArrayOutput {
	return i.ToSettingApprovalFlowArrayOutputWithContext(context.Background())
}

func (i SettingApprovalFlowArray) ToSettingApprovalFlowArrayOutputWithContext(ctx context.Context) SettingApprovalFlowArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SettingApprovalFlowArrayOutput)
}

type SettingApprovalFlowOutput struct{ *pulumi.OutputState }

func (SettingApprovalFlowOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SettingApprovalFlow)(nil)).Elem()
}

func (o SettingApprovalFlowOutput) ToSettingApprovalFlowOutput() SettingApprovalFlowOutput {
	return o
}

func (o SettingApprovalFlowOutput) ToSettingApprovalFlowOutputWithContext(ctx context.Context) SettingApprovalFlowOutput {
	return o
}

func (o SettingApprovalFlowOutput) Rules() SettingApprovalFlowRuleArrayOutput {
	return o.ApplyT(func(v SettingApprovalFlow) []SettingApprovalFlowRule { return v.Rules }).(SettingApprovalFlowRuleArrayOutput)
}

type SettingApprovalFlowArrayOutput struct{ *pulumi.OutputState }

func (SettingApprovalFlowArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SettingApprovalFlow)(nil)).Elem()
}

func (o SettingApprovalFlowArrayOutput) ToSettingApprovalFlowArrayOutput() SettingApprovalFlowArrayOutput {
	return o
}

func (o SettingApprovalFlowArrayOutput) ToSettingApprovalFlowArrayOutputWithContext(ctx context.Context) SettingApprovalFlowArrayOutput {
	return o
}

func (o SettingApprovalFlowArrayOutput) Index(i pulumi.IntInput) SettingApprovalFlowOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SettingApprovalFlow {
		return vs[0].([]SettingApprovalFlow)[vs[1].(int)]
	}).(SettingApprovalFlowOutput)
}

type SettingApprovalFlowRule struct {
	// Match any condition will trigger this approval flow.
	Conditions []SettingApprovalFlowRuleCondition `pulumi:"conditions"`
	Flows      []SettingApprovalFlowRuleFlow      `pulumi:"flows"`
}

// SettingApprovalFlowRuleInput is an input type that accepts SettingApprovalFlowRuleArgs and SettingApprovalFlowRuleOutput values.
// You can construct a concrete instance of `SettingApprovalFlowRuleInput` via:
//
//	SettingApprovalFlowRuleArgs{...}
type SettingApprovalFlowRuleInput interface {
	pulumi.Input

	ToSettingApprovalFlowRuleOutput() SettingApprovalFlowRuleOutput
	ToSettingApprovalFlowRuleOutputWithContext(context.Context) SettingApprovalFlowRuleOutput
}

type SettingApprovalFlowRuleArgs struct {
	// Match any condition will trigger this approval flow.
	Conditions SettingApprovalFlowRuleConditionArrayInput `pulumi:"conditions"`
	Flows      SettingApprovalFlowRuleFlowArrayInput      `pulumi:"flows"`
}

func (SettingApprovalFlowRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SettingApprovalFlowRule)(nil)).Elem()
}

func (i SettingApprovalFlowRuleArgs) ToSettingApprovalFlowRuleOutput() SettingApprovalFlowRuleOutput {
	return i.ToSettingApprovalFlowRuleOutputWithContext(context.Background())
}

func (i SettingApprovalFlowRuleArgs) ToSettingApprovalFlowRuleOutputWithContext(ctx context.Context) SettingApprovalFlowRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SettingApprovalFlowRuleOutput)
}

// SettingApprovalFlowRuleArrayInput is an input type that accepts SettingApprovalFlowRuleArray and SettingApprovalFlowRuleArrayOutput values.
// You can construct a concrete instance of `SettingApprovalFlowRuleArrayInput` via:
//
//	SettingApprovalFlowRuleArray{ SettingApprovalFlowRuleArgs{...} }
type SettingApprovalFlowRuleArrayInput interface {
	pulumi.Input

	ToSettingApprovalFlowRuleArrayOutput() SettingApprovalFlowRuleArrayOutput
	ToSettingApprovalFlowRuleArrayOutputWithContext(context.Context) SettingApprovalFlowRuleArrayOutput
}

type SettingApprovalFlowRuleArray []SettingApprovalFlowRuleInput

func (SettingApprovalFlowRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SettingApprovalFlowRule)(nil)).Elem()
}

func (i SettingApprovalFlowRuleArray) ToSettingApprovalFlowRuleArrayOutput() SettingApprovalFlowRuleArrayOutput {
	return i.ToSettingApprovalFlowRuleArrayOutputWithContext(context.Background())
}

func (i SettingApprovalFlowRuleArray) ToSettingApprovalFlowRuleArrayOutputWithContext(ctx context.Context) SettingApprovalFlowRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SettingApprovalFlowRuleArrayOutput)
}

type SettingApprovalFlowRuleOutput struct{ *pulumi.OutputState }

func (SettingApprovalFlowRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SettingApprovalFlowRule)(nil)).Elem()
}

func (o SettingApprovalFlowRuleOutput) ToSettingApprovalFlowRuleOutput() SettingApprovalFlowRuleOutput {
	return o
}

func (o SettingApprovalFlowRuleOutput) ToSettingApprovalFlowRuleOutputWithContext(ctx context.Context) SettingApprovalFlowRuleOutput {
	return o
}

// Match any condition will trigger this approval flow.
func (o SettingApprovalFlowRuleOutput) Conditions() SettingApprovalFlowRuleConditionArrayOutput {
	return o.ApplyT(func(v SettingApprovalFlowRule) []SettingApprovalFlowRuleCondition { return v.Conditions }).(SettingApprovalFlowRuleConditionArrayOutput)
}

func (o SettingApprovalFlowRuleOutput) Flows() SettingApprovalFlowRuleFlowArrayOutput {
	return o.ApplyT(func(v SettingApprovalFlowRule) []SettingApprovalFlowRuleFlow { return v.Flows }).(SettingApprovalFlowRuleFlowArrayOutput)
}

type SettingApprovalFlowRuleArrayOutput struct{ *pulumi.OutputState }

func (SettingApprovalFlowRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SettingApprovalFlowRule)(nil)).Elem()
}

func (o SettingApprovalFlowRuleArrayOutput) ToSettingApprovalFlowRuleArrayOutput() SettingApprovalFlowRuleArrayOutput {
	return o
}

func (o SettingApprovalFlowRuleArrayOutput) ToSettingApprovalFlowRuleArrayOutputWithContext(ctx context.Context) SettingApprovalFlowRuleArrayOutput {
	return o
}

func (o SettingApprovalFlowRuleArrayOutput) Index(i pulumi.IntInput) SettingApprovalFlowRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SettingApprovalFlowRule {
		return vs[0].([]SettingApprovalFlowRule)[vs[1].(int)]
	}).(SettingApprovalFlowRuleOutput)
}

type SettingApprovalFlowRuleCondition struct {
	Level  *string `pulumi:"level"`
	Source *string `pulumi:"source"`
}

// SettingApprovalFlowRuleConditionInput is an input type that accepts SettingApprovalFlowRuleConditionArgs and SettingApprovalFlowRuleConditionOutput values.
// You can construct a concrete instance of `SettingApprovalFlowRuleConditionInput` via:
//
//	SettingApprovalFlowRuleConditionArgs{...}
type SettingApprovalFlowRuleConditionInput interface {
	pulumi.Input

	ToSettingApprovalFlowRuleConditionOutput() SettingApprovalFlowRuleConditionOutput
	ToSettingApprovalFlowRuleConditionOutputWithContext(context.Context) SettingApprovalFlowRuleConditionOutput
}

type SettingApprovalFlowRuleConditionArgs struct {
	Level  pulumi.StringPtrInput `pulumi:"level"`
	Source pulumi.StringPtrInput `pulumi:"source"`
}

func (SettingApprovalFlowRuleConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SettingApprovalFlowRuleCondition)(nil)).Elem()
}

func (i SettingApprovalFlowRuleConditionArgs) ToSettingApprovalFlowRuleConditionOutput() SettingApprovalFlowRuleConditionOutput {
	return i.ToSettingApprovalFlowRuleConditionOutputWithContext(context.Background())
}

func (i SettingApprovalFlowRuleConditionArgs) ToSettingApprovalFlowRuleConditionOutputWithContext(ctx context.Context) SettingApprovalFlowRuleConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SettingApprovalFlowRuleConditionOutput)
}

// SettingApprovalFlowRuleConditionArrayInput is an input type that accepts SettingApprovalFlowRuleConditionArray and SettingApprovalFlowRuleConditionArrayOutput values.
// You can construct a concrete instance of `SettingApprovalFlowRuleConditionArrayInput` via:
//
//	SettingApprovalFlowRuleConditionArray{ SettingApprovalFlowRuleConditionArgs{...} }
type SettingApprovalFlowRuleConditionArrayInput interface {
	pulumi.Input

	ToSettingApprovalFlowRuleConditionArrayOutput() SettingApprovalFlowRuleConditionArrayOutput
	ToSettingApprovalFlowRuleConditionArrayOutputWithContext(context.Context) SettingApprovalFlowRuleConditionArrayOutput
}

type SettingApprovalFlowRuleConditionArray []SettingApprovalFlowRuleConditionInput

func (SettingApprovalFlowRuleConditionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SettingApprovalFlowRuleCondition)(nil)).Elem()
}

func (i SettingApprovalFlowRuleConditionArray) ToSettingApprovalFlowRuleConditionArrayOutput() SettingApprovalFlowRuleConditionArrayOutput {
	return i.ToSettingApprovalFlowRuleConditionArrayOutputWithContext(context.Background())
}

func (i SettingApprovalFlowRuleConditionArray) ToSettingApprovalFlowRuleConditionArrayOutputWithContext(ctx context.Context) SettingApprovalFlowRuleConditionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SettingApprovalFlowRuleConditionArrayOutput)
}

type SettingApprovalFlowRuleConditionOutput struct{ *pulumi.OutputState }

func (SettingApprovalFlowRuleConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SettingApprovalFlowRuleCondition)(nil)).Elem()
}

func (o SettingApprovalFlowRuleConditionOutput) ToSettingApprovalFlowRuleConditionOutput() SettingApprovalFlowRuleConditionOutput {
	return o
}

func (o SettingApprovalFlowRuleConditionOutput) ToSettingApprovalFlowRuleConditionOutputWithContext(ctx context.Context) SettingApprovalFlowRuleConditionOutput {
	return o
}

func (o SettingApprovalFlowRuleConditionOutput) Level() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SettingApprovalFlowRuleCondition) *string { return v.Level }).(pulumi.StringPtrOutput)
}

func (o SettingApprovalFlowRuleConditionOutput) Source() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SettingApprovalFlowRuleCondition) *string { return v.Source }).(pulumi.StringPtrOutput)
}

type SettingApprovalFlowRuleConditionArrayOutput struct{ *pulumi.OutputState }

func (SettingApprovalFlowRuleConditionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SettingApprovalFlowRuleCondition)(nil)).Elem()
}

func (o SettingApprovalFlowRuleConditionArrayOutput) ToSettingApprovalFlowRuleConditionArrayOutput() SettingApprovalFlowRuleConditionArrayOutput {
	return o
}

func (o SettingApprovalFlowRuleConditionArrayOutput) ToSettingApprovalFlowRuleConditionArrayOutputWithContext(ctx context.Context) SettingApprovalFlowRuleConditionArrayOutput {
	return o
}

func (o SettingApprovalFlowRuleConditionArrayOutput) Index(i pulumi.IntInput) SettingApprovalFlowRuleConditionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SettingApprovalFlowRuleCondition {
		return vs[0].([]SettingApprovalFlowRuleCondition)[vs[1].(int)]
	}).(SettingApprovalFlowRuleConditionOutput)
}

type SettingApprovalFlowRuleFlow struct {
	Description *string `pulumi:"description"`
	// Approval flow following the step order.
	Steps []SettingApprovalFlowRuleFlowStep `pulumi:"steps"`
	Title string                            `pulumi:"title"`
}

// SettingApprovalFlowRuleFlowInput is an input type that accepts SettingApprovalFlowRuleFlowArgs and SettingApprovalFlowRuleFlowOutput values.
// You can construct a concrete instance of `SettingApprovalFlowRuleFlowInput` via:
//
//	SettingApprovalFlowRuleFlowArgs{...}
type SettingApprovalFlowRuleFlowInput interface {
	pulumi.Input

	ToSettingApprovalFlowRuleFlowOutput() SettingApprovalFlowRuleFlowOutput
	ToSettingApprovalFlowRuleFlowOutputWithContext(context.Context) SettingApprovalFlowRuleFlowOutput
}

type SettingApprovalFlowRuleFlowArgs struct {
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Approval flow following the step order.
	Steps SettingApprovalFlowRuleFlowStepArrayInput `pulumi:"steps"`
	Title pulumi.StringInput                        `pulumi:"title"`
}

func (SettingApprovalFlowRuleFlowArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SettingApprovalFlowRuleFlow)(nil)).Elem()
}

func (i SettingApprovalFlowRuleFlowArgs) ToSettingApprovalFlowRuleFlowOutput() SettingApprovalFlowRuleFlowOutput {
	return i.ToSettingApprovalFlowRuleFlowOutputWithContext(context.Background())
}

func (i SettingApprovalFlowRuleFlowArgs) ToSettingApprovalFlowRuleFlowOutputWithContext(ctx context.Context) SettingApprovalFlowRuleFlowOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SettingApprovalFlowRuleFlowOutput)
}

// SettingApprovalFlowRuleFlowArrayInput is an input type that accepts SettingApprovalFlowRuleFlowArray and SettingApprovalFlowRuleFlowArrayOutput values.
// You can construct a concrete instance of `SettingApprovalFlowRuleFlowArrayInput` via:
//
//	SettingApprovalFlowRuleFlowArray{ SettingApprovalFlowRuleFlowArgs{...} }
type SettingApprovalFlowRuleFlowArrayInput interface {
	pulumi.Input

	ToSettingApprovalFlowRuleFlowArrayOutput() SettingApprovalFlowRuleFlowArrayOutput
	ToSettingApprovalFlowRuleFlowArrayOutputWithContext(context.Context) SettingApprovalFlowRuleFlowArrayOutput
}

type SettingApprovalFlowRuleFlowArray []SettingApprovalFlowRuleFlowInput

func (SettingApprovalFlowRuleFlowArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SettingApprovalFlowRuleFlow)(nil)).Elem()
}

func (i SettingApprovalFlowRuleFlowArray) ToSettingApprovalFlowRuleFlowArrayOutput() SettingApprovalFlowRuleFlowArrayOutput {
	return i.ToSettingApprovalFlowRuleFlowArrayOutputWithContext(context.Background())
}

func (i SettingApprovalFlowRuleFlowArray) ToSettingApprovalFlowRuleFlowArrayOutputWithContext(ctx context.Context) SettingApprovalFlowRuleFlowArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SettingApprovalFlowRuleFlowArrayOutput)
}

type SettingApprovalFlowRuleFlowOutput struct{ *pulumi.OutputState }

func (SettingApprovalFlowRuleFlowOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SettingApprovalFlowRuleFlow)(nil)).Elem()
}

func (o SettingApprovalFlowRuleFlowOutput) ToSettingApprovalFlowRuleFlowOutput() SettingApprovalFlowRuleFlowOutput {
	return o
}

func (o SettingApprovalFlowRuleFlowOutput) ToSettingApprovalFlowRuleFlowOutputWithContext(ctx context.Context) SettingApprovalFlowRuleFlowOutput {
	return o
}

func (o SettingApprovalFlowRuleFlowOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SettingApprovalFlowRuleFlow) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Approval flow following the step order.
func (o SettingApprovalFlowRuleFlowOutput) Steps() SettingApprovalFlowRuleFlowStepArrayOutput {
	return o.ApplyT(func(v SettingApprovalFlowRuleFlow) []SettingApprovalFlowRuleFlowStep { return v.Steps }).(SettingApprovalFlowRuleFlowStepArrayOutput)
}

func (o SettingApprovalFlowRuleFlowOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v SettingApprovalFlowRuleFlow) string { return v.Title }).(pulumi.StringOutput)
}

type SettingApprovalFlowRuleFlowArrayOutput struct{ *pulumi.OutputState }

func (SettingApprovalFlowRuleFlowArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SettingApprovalFlowRuleFlow)(nil)).Elem()
}

func (o SettingApprovalFlowRuleFlowArrayOutput) ToSettingApprovalFlowRuleFlowArrayOutput() SettingApprovalFlowRuleFlowArrayOutput {
	return o
}

func (o SettingApprovalFlowRuleFlowArrayOutput) ToSettingApprovalFlowRuleFlowArrayOutputWithContext(ctx context.Context) SettingApprovalFlowRuleFlowArrayOutput {
	return o
}

func (o SettingApprovalFlowRuleFlowArrayOutput) Index(i pulumi.IntInput) SettingApprovalFlowRuleFlowOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SettingApprovalFlowRuleFlow {
		return vs[0].([]SettingApprovalFlowRuleFlow)[vs[1].(int)]
	}).(SettingApprovalFlowRuleFlowOutput)
}

type SettingApprovalFlowRuleFlowStep struct {
	// The role require to review in this step
	Role string `pulumi:"role"`
}

// SettingApprovalFlowRuleFlowStepInput is an input type that accepts SettingApprovalFlowRuleFlowStepArgs and SettingApprovalFlowRuleFlowStepOutput values.
// You can construct a concrete instance of `SettingApprovalFlowRuleFlowStepInput` via:
//
//	SettingApprovalFlowRuleFlowStepArgs{...}
type SettingApprovalFlowRuleFlowStepInput interface {
	pulumi.Input

	ToSettingApprovalFlowRuleFlowStepOutput() SettingApprovalFlowRuleFlowStepOutput
	ToSettingApprovalFlowRuleFlowStepOutputWithContext(context.Context) SettingApprovalFlowRuleFlowStepOutput
}

type SettingApprovalFlowRuleFlowStepArgs struct {
	// The role require to review in this step
	Role pulumi.StringInput `pulumi:"role"`
}

func (SettingApprovalFlowRuleFlowStepArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SettingApprovalFlowRuleFlowStep)(nil)).Elem()
}

func (i SettingApprovalFlowRuleFlowStepArgs) ToSettingApprovalFlowRuleFlowStepOutput() SettingApprovalFlowRuleFlowStepOutput {
	return i.ToSettingApprovalFlowRuleFlowStepOutputWithContext(context.Background())
}

func (i SettingApprovalFlowRuleFlowStepArgs) ToSettingApprovalFlowRuleFlowStepOutputWithContext(ctx context.Context) SettingApprovalFlowRuleFlowStepOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SettingApprovalFlowRuleFlowStepOutput)
}

// SettingApprovalFlowRuleFlowStepArrayInput is an input type that accepts SettingApprovalFlowRuleFlowStepArray and SettingApprovalFlowRuleFlowStepArrayOutput values.
// You can construct a concrete instance of `SettingApprovalFlowRuleFlowStepArrayInput` via:
//
//	SettingApprovalFlowRuleFlowStepArray{ SettingApprovalFlowRuleFlowStepArgs{...} }
type SettingApprovalFlowRuleFlowStepArrayInput interface {
	pulumi.Input

	ToSettingApprovalFlowRuleFlowStepArrayOutput() SettingApprovalFlowRuleFlowStepArrayOutput
	ToSettingApprovalFlowRuleFlowStepArrayOutputWithContext(context.Context) SettingApprovalFlowRuleFlowStepArrayOutput
}

type SettingApprovalFlowRuleFlowStepArray []SettingApprovalFlowRuleFlowStepInput

func (SettingApprovalFlowRuleFlowStepArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SettingApprovalFlowRuleFlowStep)(nil)).Elem()
}

func (i SettingApprovalFlowRuleFlowStepArray) ToSettingApprovalFlowRuleFlowStepArrayOutput() SettingApprovalFlowRuleFlowStepArrayOutput {
	return i.ToSettingApprovalFlowRuleFlowStepArrayOutputWithContext(context.Background())
}

func (i SettingApprovalFlowRuleFlowStepArray) ToSettingApprovalFlowRuleFlowStepArrayOutputWithContext(ctx context.Context) SettingApprovalFlowRuleFlowStepArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SettingApprovalFlowRuleFlowStepArrayOutput)
}

type SettingApprovalFlowRuleFlowStepOutput struct{ *pulumi.OutputState }

func (SettingApprovalFlowRuleFlowStepOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SettingApprovalFlowRuleFlowStep)(nil)).Elem()
}

func (o SettingApprovalFlowRuleFlowStepOutput) ToSettingApprovalFlowRuleFlowStepOutput() SettingApprovalFlowRuleFlowStepOutput {
	return o
}

func (o SettingApprovalFlowRuleFlowStepOutput) ToSettingApprovalFlowRuleFlowStepOutputWithContext(ctx context.Context) SettingApprovalFlowRuleFlowStepOutput {
	return o
}

// The role require to review in this step
func (o SettingApprovalFlowRuleFlowStepOutput) Role() pulumi.StringOutput {
	return o.ApplyT(func(v SettingApprovalFlowRuleFlowStep) string { return v.Role }).(pulumi.StringOutput)
}

type SettingApprovalFlowRuleFlowStepArrayOutput struct{ *pulumi.OutputState }

func (SettingApprovalFlowRuleFlowStepArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SettingApprovalFlowRuleFlowStep)(nil)).Elem()
}

func (o SettingApprovalFlowRuleFlowStepArrayOutput) ToSettingApprovalFlowRuleFlowStepArrayOutput() SettingApprovalFlowRuleFlowStepArrayOutput {
	return o
}

func (o SettingApprovalFlowRuleFlowStepArrayOutput) ToSettingApprovalFlowRuleFlowStepArrayOutputWithContext(ctx context.Context) SettingApprovalFlowRuleFlowStepArrayOutput {
	return o
}

func (o SettingApprovalFlowRuleFlowStepArrayOutput) Index(i pulumi.IntInput) SettingApprovalFlowRuleFlowStepOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SettingApprovalFlowRuleFlowStep {
		return vs[0].([]SettingApprovalFlowRuleFlowStep)[vs[1].(int)]
	}).(SettingApprovalFlowRuleFlowStepOutput)
}

type SettingClassification struct {
	// If true, we will only store the classification in the config. Otherwise we will get the classification from table/column comment, and write back to the schema metadata.
	ClassificationFromConfig *bool                                 `pulumi:"classificationFromConfig"`
	Classifications          []SettingClassificationClassification `pulumi:"classifications"`
	// The classification unique uuid.
	Id     string                       `pulumi:"id"`
	Levels []SettingClassificationLevel `pulumi:"levels"`
	// The classification title. Optional.
	Title string `pulumi:"title"`
}

// SettingClassificationInput is an input type that accepts SettingClassificationArgs and SettingClassificationOutput values.
// You can construct a concrete instance of `SettingClassificationInput` via:
//
//	SettingClassificationArgs{...}
type SettingClassificationInput interface {
	pulumi.Input

	ToSettingClassificationOutput() SettingClassificationOutput
	ToSettingClassificationOutputWithContext(context.Context) SettingClassificationOutput
}

type SettingClassificationArgs struct {
	// If true, we will only store the classification in the config. Otherwise we will get the classification from table/column comment, and write back to the schema metadata.
	ClassificationFromConfig pulumi.BoolPtrInput                           `pulumi:"classificationFromConfig"`
	Classifications          SettingClassificationClassificationArrayInput `pulumi:"classifications"`
	// The classification unique uuid.
	Id     pulumi.StringInput                   `pulumi:"id"`
	Levels SettingClassificationLevelArrayInput `pulumi:"levels"`
	// The classification title. Optional.
	Title pulumi.StringInput `pulumi:"title"`
}

func (SettingClassificationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SettingClassification)(nil)).Elem()
}

func (i SettingClassificationArgs) ToSettingClassificationOutput() SettingClassificationOutput {
	return i.ToSettingClassificationOutputWithContext(context.Background())
}

func (i SettingClassificationArgs) ToSettingClassificationOutputWithContext(ctx context.Context) SettingClassificationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SettingClassificationOutput)
}

func (i SettingClassificationArgs) ToSettingClassificationPtrOutput() SettingClassificationPtrOutput {
	return i.ToSettingClassificationPtrOutputWithContext(context.Background())
}

func (i SettingClassificationArgs) ToSettingClassificationPtrOutputWithContext(ctx context.Context) SettingClassificationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SettingClassificationOutput).ToSettingClassificationPtrOutputWithContext(ctx)
}

// SettingClassificationPtrInput is an input type that accepts SettingClassificationArgs, SettingClassificationPtr and SettingClassificationPtrOutput values.
// You can construct a concrete instance of `SettingClassificationPtrInput` via:
//
//	        SettingClassificationArgs{...}
//
//	or:
//
//	        nil
type SettingClassificationPtrInput interface {
	pulumi.Input

	ToSettingClassificationPtrOutput() SettingClassificationPtrOutput
	ToSettingClassificationPtrOutputWithContext(context.Context) SettingClassificationPtrOutput
}

type settingClassificationPtrType SettingClassificationArgs

func SettingClassificationPtr(v *SettingClassificationArgs) SettingClassificationPtrInput {
	return (*settingClassificationPtrType)(v)
}

func (*settingClassificationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SettingClassification)(nil)).Elem()
}

func (i *settingClassificationPtrType) ToSettingClassificationPtrOutput() SettingClassificationPtrOutput {
	return i.ToSettingClassificationPtrOutputWithContext(context.Background())
}

func (i *settingClassificationPtrType) ToSettingClassificationPtrOutputWithContext(ctx context.Context) SettingClassificationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SettingClassificationPtrOutput)
}

type SettingClassificationOutput struct{ *pulumi.OutputState }

func (SettingClassificationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SettingClassification)(nil)).Elem()
}

func (o SettingClassificationOutput) ToSettingClassificationOutput() SettingClassificationOutput {
	return o
}

func (o SettingClassificationOutput) ToSettingClassificationOutputWithContext(ctx context.Context) SettingClassificationOutput {
	return o
}

func (o SettingClassificationOutput) ToSettingClassificationPtrOutput() SettingClassificationPtrOutput {
	return o.ToSettingClassificationPtrOutputWithContext(context.Background())
}

func (o SettingClassificationOutput) ToSettingClassificationPtrOutputWithContext(ctx context.Context) SettingClassificationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SettingClassification) *SettingClassification {
		return &v
	}).(SettingClassificationPtrOutput)
}

// If true, we will only store the classification in the config. Otherwise we will get the classification from table/column comment, and write back to the schema metadata.
func (o SettingClassificationOutput) ClassificationFromConfig() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SettingClassification) *bool { return v.ClassificationFromConfig }).(pulumi.BoolPtrOutput)
}

func (o SettingClassificationOutput) Classifications() SettingClassificationClassificationArrayOutput {
	return o.ApplyT(func(v SettingClassification) []SettingClassificationClassification { return v.Classifications }).(SettingClassificationClassificationArrayOutput)
}

// The classification unique uuid.
func (o SettingClassificationOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v SettingClassification) string { return v.Id }).(pulumi.StringOutput)
}

func (o SettingClassificationOutput) Levels() SettingClassificationLevelArrayOutput {
	return o.ApplyT(func(v SettingClassification) []SettingClassificationLevel { return v.Levels }).(SettingClassificationLevelArrayOutput)
}

// The classification title. Optional.
func (o SettingClassificationOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v SettingClassification) string { return v.Title }).(pulumi.StringOutput)
}

type SettingClassificationPtrOutput struct{ *pulumi.OutputState }

func (SettingClassificationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SettingClassification)(nil)).Elem()
}

func (o SettingClassificationPtrOutput) ToSettingClassificationPtrOutput() SettingClassificationPtrOutput {
	return o
}

func (o SettingClassificationPtrOutput) ToSettingClassificationPtrOutputWithContext(ctx context.Context) SettingClassificationPtrOutput {
	return o
}

func (o SettingClassificationPtrOutput) Elem() SettingClassificationOutput {
	return o.ApplyT(func(v *SettingClassification) SettingClassification {
		if v != nil {
			return *v
		}
		var ret SettingClassification
		return ret
	}).(SettingClassificationOutput)
}

// If true, we will only store the classification in the config. Otherwise we will get the classification from table/column comment, and write back to the schema metadata.
func (o SettingClassificationPtrOutput) ClassificationFromConfig() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SettingClassification) *bool {
		if v == nil {
			return nil
		}
		return v.ClassificationFromConfig
	}).(pulumi.BoolPtrOutput)
}

func (o SettingClassificationPtrOutput) Classifications() SettingClassificationClassificationArrayOutput {
	return o.ApplyT(func(v *SettingClassification) []SettingClassificationClassification {
		if v == nil {
			return nil
		}
		return v.Classifications
	}).(SettingClassificationClassificationArrayOutput)
}

// The classification unique uuid.
func (o SettingClassificationPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SettingClassification) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

func (o SettingClassificationPtrOutput) Levels() SettingClassificationLevelArrayOutput {
	return o.ApplyT(func(v *SettingClassification) []SettingClassificationLevel {
		if v == nil {
			return nil
		}
		return v.Levels
	}).(SettingClassificationLevelArrayOutput)
}

// The classification title. Optional.
func (o SettingClassificationPtrOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SettingClassification) *string {
		if v == nil {
			return nil
		}
		return &v.Title
	}).(pulumi.StringPtrOutput)
}

type SettingClassificationClassification struct {
	// The classification description.
	Description *string `pulumi:"description"`
	// The classification unique id, must in {number}-{number} format.
	Id string `pulumi:"id"`
	// The classification level id.
	Level *string `pulumi:"level"`
	// The classification title.
	Title string `pulumi:"title"`
}

// SettingClassificationClassificationInput is an input type that accepts SettingClassificationClassificationArgs and SettingClassificationClassificationOutput values.
// You can construct a concrete instance of `SettingClassificationClassificationInput` via:
//
//	SettingClassificationClassificationArgs{...}
type SettingClassificationClassificationInput interface {
	pulumi.Input

	ToSettingClassificationClassificationOutput() SettingClassificationClassificationOutput
	ToSettingClassificationClassificationOutputWithContext(context.Context) SettingClassificationClassificationOutput
}

type SettingClassificationClassificationArgs struct {
	// The classification description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The classification unique id, must in {number}-{number} format.
	Id pulumi.StringInput `pulumi:"id"`
	// The classification level id.
	Level pulumi.StringPtrInput `pulumi:"level"`
	// The classification title.
	Title pulumi.StringInput `pulumi:"title"`
}

func (SettingClassificationClassificationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SettingClassificationClassification)(nil)).Elem()
}

func (i SettingClassificationClassificationArgs) ToSettingClassificationClassificationOutput() SettingClassificationClassificationOutput {
	return i.ToSettingClassificationClassificationOutputWithContext(context.Background())
}

func (i SettingClassificationClassificationArgs) ToSettingClassificationClassificationOutputWithContext(ctx context.Context) SettingClassificationClassificationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SettingClassificationClassificationOutput)
}

// SettingClassificationClassificationArrayInput is an input type that accepts SettingClassificationClassificationArray and SettingClassificationClassificationArrayOutput values.
// You can construct a concrete instance of `SettingClassificationClassificationArrayInput` via:
//
//	SettingClassificationClassificationArray{ SettingClassificationClassificationArgs{...} }
type SettingClassificationClassificationArrayInput interface {
	pulumi.Input

	ToSettingClassificationClassificationArrayOutput() SettingClassificationClassificationArrayOutput
	ToSettingClassificationClassificationArrayOutputWithContext(context.Context) SettingClassificationClassificationArrayOutput
}

type SettingClassificationClassificationArray []SettingClassificationClassificationInput

func (SettingClassificationClassificationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SettingClassificationClassification)(nil)).Elem()
}

func (i SettingClassificationClassificationArray) ToSettingClassificationClassificationArrayOutput() SettingClassificationClassificationArrayOutput {
	return i.ToSettingClassificationClassificationArrayOutputWithContext(context.Background())
}

func (i SettingClassificationClassificationArray) ToSettingClassificationClassificationArrayOutputWithContext(ctx context.Context) SettingClassificationClassificationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SettingClassificationClassificationArrayOutput)
}

type SettingClassificationClassificationOutput struct{ *pulumi.OutputState }

func (SettingClassificationClassificationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SettingClassificationClassification)(nil)).Elem()
}

func (o SettingClassificationClassificationOutput) ToSettingClassificationClassificationOutput() SettingClassificationClassificationOutput {
	return o
}

func (o SettingClassificationClassificationOutput) ToSettingClassificationClassificationOutputWithContext(ctx context.Context) SettingClassificationClassificationOutput {
	return o
}

// The classification description.
func (o SettingClassificationClassificationOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SettingClassificationClassification) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The classification unique id, must in {number}-{number} format.
func (o SettingClassificationClassificationOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v SettingClassificationClassification) string { return v.Id }).(pulumi.StringOutput)
}

// The classification level id.
func (o SettingClassificationClassificationOutput) Level() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SettingClassificationClassification) *string { return v.Level }).(pulumi.StringPtrOutput)
}

// The classification title.
func (o SettingClassificationClassificationOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v SettingClassificationClassification) string { return v.Title }).(pulumi.StringOutput)
}

type SettingClassificationClassificationArrayOutput struct{ *pulumi.OutputState }

func (SettingClassificationClassificationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SettingClassificationClassification)(nil)).Elem()
}

func (o SettingClassificationClassificationArrayOutput) ToSettingClassificationClassificationArrayOutput() SettingClassificationClassificationArrayOutput {
	return o
}

func (o SettingClassificationClassificationArrayOutput) ToSettingClassificationClassificationArrayOutputWithContext(ctx context.Context) SettingClassificationClassificationArrayOutput {
	return o
}

func (o SettingClassificationClassificationArrayOutput) Index(i pulumi.IntInput) SettingClassificationClassificationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SettingClassificationClassification {
		return vs[0].([]SettingClassificationClassification)[vs[1].(int)]
	}).(SettingClassificationClassificationOutput)
}

type SettingClassificationLevel struct {
	// The classification level description.
	Description *string `pulumi:"description"`
	// The classification level unique uuid.
	Id string `pulumi:"id"`
	// The classification level title.
	Title string `pulumi:"title"`
}

// SettingClassificationLevelInput is an input type that accepts SettingClassificationLevelArgs and SettingClassificationLevelOutput values.
// You can construct a concrete instance of `SettingClassificationLevelInput` via:
//
//	SettingClassificationLevelArgs{...}
type SettingClassificationLevelInput interface {
	pulumi.Input

	ToSettingClassificationLevelOutput() SettingClassificationLevelOutput
	ToSettingClassificationLevelOutputWithContext(context.Context) SettingClassificationLevelOutput
}

type SettingClassificationLevelArgs struct {
	// The classification level description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The classification level unique uuid.
	Id pulumi.StringInput `pulumi:"id"`
	// The classification level title.
	Title pulumi.StringInput `pulumi:"title"`
}

func (SettingClassificationLevelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SettingClassificationLevel)(nil)).Elem()
}

func (i SettingClassificationLevelArgs) ToSettingClassificationLevelOutput() SettingClassificationLevelOutput {
	return i.ToSettingClassificationLevelOutputWithContext(context.Background())
}

func (i SettingClassificationLevelArgs) ToSettingClassificationLevelOutputWithContext(ctx context.Context) SettingClassificationLevelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SettingClassificationLevelOutput)
}

// SettingClassificationLevelArrayInput is an input type that accepts SettingClassificationLevelArray and SettingClassificationLevelArrayOutput values.
// You can construct a concrete instance of `SettingClassificationLevelArrayInput` via:
//
//	SettingClassificationLevelArray{ SettingClassificationLevelArgs{...} }
type SettingClassificationLevelArrayInput interface {
	pulumi.Input

	ToSettingClassificationLevelArrayOutput() SettingClassificationLevelArrayOutput
	ToSettingClassificationLevelArrayOutputWithContext(context.Context) SettingClassificationLevelArrayOutput
}

type SettingClassificationLevelArray []SettingClassificationLevelInput

func (SettingClassificationLevelArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SettingClassificationLevel)(nil)).Elem()
}

func (i SettingClassificationLevelArray) ToSettingClassificationLevelArrayOutput() SettingClassificationLevelArrayOutput {
	return i.ToSettingClassificationLevelArrayOutputWithContext(context.Background())
}

func (i SettingClassificationLevelArray) ToSettingClassificationLevelArrayOutputWithContext(ctx context.Context) SettingClassificationLevelArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SettingClassificationLevelArrayOutput)
}

type SettingClassificationLevelOutput struct{ *pulumi.OutputState }

func (SettingClassificationLevelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SettingClassificationLevel)(nil)).Elem()
}

func (o SettingClassificationLevelOutput) ToSettingClassificationLevelOutput() SettingClassificationLevelOutput {
	return o
}

func (o SettingClassificationLevelOutput) ToSettingClassificationLevelOutputWithContext(ctx context.Context) SettingClassificationLevelOutput {
	return o
}

// The classification level description.
func (o SettingClassificationLevelOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SettingClassificationLevel) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The classification level unique uuid.
func (o SettingClassificationLevelOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v SettingClassificationLevel) string { return v.Id }).(pulumi.StringOutput)
}

// The classification level title.
func (o SettingClassificationLevelOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v SettingClassificationLevel) string { return v.Title }).(pulumi.StringOutput)
}

type SettingClassificationLevelArrayOutput struct{ *pulumi.OutputState }

func (SettingClassificationLevelArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SettingClassificationLevel)(nil)).Elem()
}

func (o SettingClassificationLevelArrayOutput) ToSettingClassificationLevelArrayOutput() SettingClassificationLevelArrayOutput {
	return o
}

func (o SettingClassificationLevelArrayOutput) ToSettingClassificationLevelArrayOutputWithContext(ctx context.Context) SettingClassificationLevelArrayOutput {
	return o
}

func (o SettingClassificationLevelArrayOutput) Index(i pulumi.IntInput) SettingClassificationLevelOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SettingClassificationLevel {
		return vs[0].([]SettingClassificationLevel)[vs[1].(int)]
	}).(SettingClassificationLevelOutput)
}

type SettingEnvironmentSetting struct {
	Environments []SettingEnvironmentSettingEnvironment `pulumi:"environments"`
}

// SettingEnvironmentSettingInput is an input type that accepts SettingEnvironmentSettingArgs and SettingEnvironmentSettingOutput values.
// You can construct a concrete instance of `SettingEnvironmentSettingInput` via:
//
//	SettingEnvironmentSettingArgs{...}
type SettingEnvironmentSettingInput interface {
	pulumi.Input

	ToSettingEnvironmentSettingOutput() SettingEnvironmentSettingOutput
	ToSettingEnvironmentSettingOutputWithContext(context.Context) SettingEnvironmentSettingOutput
}

type SettingEnvironmentSettingArgs struct {
	Environments SettingEnvironmentSettingEnvironmentArrayInput `pulumi:"environments"`
}

func (SettingEnvironmentSettingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SettingEnvironmentSetting)(nil)).Elem()
}

func (i SettingEnvironmentSettingArgs) ToSettingEnvironmentSettingOutput() SettingEnvironmentSettingOutput {
	return i.ToSettingEnvironmentSettingOutputWithContext(context.Background())
}

func (i SettingEnvironmentSettingArgs) ToSettingEnvironmentSettingOutputWithContext(ctx context.Context) SettingEnvironmentSettingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SettingEnvironmentSettingOutput)
}

// SettingEnvironmentSettingArrayInput is an input type that accepts SettingEnvironmentSettingArray and SettingEnvironmentSettingArrayOutput values.
// You can construct a concrete instance of `SettingEnvironmentSettingArrayInput` via:
//
//	SettingEnvironmentSettingArray{ SettingEnvironmentSettingArgs{...} }
type SettingEnvironmentSettingArrayInput interface {
	pulumi.Input

	ToSettingEnvironmentSettingArrayOutput() SettingEnvironmentSettingArrayOutput
	ToSettingEnvironmentSettingArrayOutputWithContext(context.Context) SettingEnvironmentSettingArrayOutput
}

type SettingEnvironmentSettingArray []SettingEnvironmentSettingInput

func (SettingEnvironmentSettingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SettingEnvironmentSetting)(nil)).Elem()
}

func (i SettingEnvironmentSettingArray) ToSettingEnvironmentSettingArrayOutput() SettingEnvironmentSettingArrayOutput {
	return i.ToSettingEnvironmentSettingArrayOutputWithContext(context.Background())
}

func (i SettingEnvironmentSettingArray) ToSettingEnvironmentSettingArrayOutputWithContext(ctx context.Context) SettingEnvironmentSettingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SettingEnvironmentSettingArrayOutput)
}

type SettingEnvironmentSettingOutput struct{ *pulumi.OutputState }

func (SettingEnvironmentSettingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SettingEnvironmentSetting)(nil)).Elem()
}

func (o SettingEnvironmentSettingOutput) ToSettingEnvironmentSettingOutput() SettingEnvironmentSettingOutput {
	return o
}

func (o SettingEnvironmentSettingOutput) ToSettingEnvironmentSettingOutputWithContext(ctx context.Context) SettingEnvironmentSettingOutput {
	return o
}

func (o SettingEnvironmentSettingOutput) Environments() SettingEnvironmentSettingEnvironmentArrayOutput {
	return o.ApplyT(func(v SettingEnvironmentSetting) []SettingEnvironmentSettingEnvironment { return v.Environments }).(SettingEnvironmentSettingEnvironmentArrayOutput)
}

type SettingEnvironmentSettingArrayOutput struct{ *pulumi.OutputState }

func (SettingEnvironmentSettingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SettingEnvironmentSetting)(nil)).Elem()
}

func (o SettingEnvironmentSettingArrayOutput) ToSettingEnvironmentSettingArrayOutput() SettingEnvironmentSettingArrayOutput {
	return o
}

func (o SettingEnvironmentSettingArrayOutput) ToSettingEnvironmentSettingArrayOutputWithContext(ctx context.Context) SettingEnvironmentSettingArrayOutput {
	return o
}

func (o SettingEnvironmentSettingArrayOutput) Index(i pulumi.IntInput) SettingEnvironmentSettingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SettingEnvironmentSetting {
		return vs[0].([]SettingEnvironmentSetting)[vs[1].(int)]
	}).(SettingEnvironmentSettingOutput)
}

type SettingEnvironmentSettingEnvironment struct {
	// The environment color.
	Color *string `pulumi:"color"`
	// The environment unique id.
	Id string `pulumi:"id"`
	// The environment readonly name in environments/{id} format.
	Name *string `pulumi:"name"`
	// The environment is protected or not.
	Protected *bool `pulumi:"protected"`
	// The environment display name.
	Title string `pulumi:"title"`
}

// SettingEnvironmentSettingEnvironmentInput is an input type that accepts SettingEnvironmentSettingEnvironmentArgs and SettingEnvironmentSettingEnvironmentOutput values.
// You can construct a concrete instance of `SettingEnvironmentSettingEnvironmentInput` via:
//
//	SettingEnvironmentSettingEnvironmentArgs{...}
type SettingEnvironmentSettingEnvironmentInput interface {
	pulumi.Input

	ToSettingEnvironmentSettingEnvironmentOutput() SettingEnvironmentSettingEnvironmentOutput
	ToSettingEnvironmentSettingEnvironmentOutputWithContext(context.Context) SettingEnvironmentSettingEnvironmentOutput
}

type SettingEnvironmentSettingEnvironmentArgs struct {
	// The environment color.
	Color pulumi.StringPtrInput `pulumi:"color"`
	// The environment unique id.
	Id pulumi.StringInput `pulumi:"id"`
	// The environment readonly name in environments/{id} format.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The environment is protected or not.
	Protected pulumi.BoolPtrInput `pulumi:"protected"`
	// The environment display name.
	Title pulumi.StringInput `pulumi:"title"`
}

func (SettingEnvironmentSettingEnvironmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SettingEnvironmentSettingEnvironment)(nil)).Elem()
}

func (i SettingEnvironmentSettingEnvironmentArgs) ToSettingEnvironmentSettingEnvironmentOutput() SettingEnvironmentSettingEnvironmentOutput {
	return i.ToSettingEnvironmentSettingEnvironmentOutputWithContext(context.Background())
}

func (i SettingEnvironmentSettingEnvironmentArgs) ToSettingEnvironmentSettingEnvironmentOutputWithContext(ctx context.Context) SettingEnvironmentSettingEnvironmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SettingEnvironmentSettingEnvironmentOutput)
}

// SettingEnvironmentSettingEnvironmentArrayInput is an input type that accepts SettingEnvironmentSettingEnvironmentArray and SettingEnvironmentSettingEnvironmentArrayOutput values.
// You can construct a concrete instance of `SettingEnvironmentSettingEnvironmentArrayInput` via:
//
//	SettingEnvironmentSettingEnvironmentArray{ SettingEnvironmentSettingEnvironmentArgs{...} }
type SettingEnvironmentSettingEnvironmentArrayInput interface {
	pulumi.Input

	ToSettingEnvironmentSettingEnvironmentArrayOutput() SettingEnvironmentSettingEnvironmentArrayOutput
	ToSettingEnvironmentSettingEnvironmentArrayOutputWithContext(context.Context) SettingEnvironmentSettingEnvironmentArrayOutput
}

type SettingEnvironmentSettingEnvironmentArray []SettingEnvironmentSettingEnvironmentInput

func (SettingEnvironmentSettingEnvironmentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SettingEnvironmentSettingEnvironment)(nil)).Elem()
}

func (i SettingEnvironmentSettingEnvironmentArray) ToSettingEnvironmentSettingEnvironmentArrayOutput() SettingEnvironmentSettingEnvironmentArrayOutput {
	return i.ToSettingEnvironmentSettingEnvironmentArrayOutputWithContext(context.Background())
}

func (i SettingEnvironmentSettingEnvironmentArray) ToSettingEnvironmentSettingEnvironmentArrayOutputWithContext(ctx context.Context) SettingEnvironmentSettingEnvironmentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SettingEnvironmentSettingEnvironmentArrayOutput)
}

type SettingEnvironmentSettingEnvironmentOutput struct{ *pulumi.OutputState }

func (SettingEnvironmentSettingEnvironmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SettingEnvironmentSettingEnvironment)(nil)).Elem()
}

func (o SettingEnvironmentSettingEnvironmentOutput) ToSettingEnvironmentSettingEnvironmentOutput() SettingEnvironmentSettingEnvironmentOutput {
	return o
}

func (o SettingEnvironmentSettingEnvironmentOutput) ToSettingEnvironmentSettingEnvironmentOutputWithContext(ctx context.Context) SettingEnvironmentSettingEnvironmentOutput {
	return o
}

// The environment color.
func (o SettingEnvironmentSettingEnvironmentOutput) Color() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SettingEnvironmentSettingEnvironment) *string { return v.Color }).(pulumi.StringPtrOutput)
}

// The environment unique id.
func (o SettingEnvironmentSettingEnvironmentOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v SettingEnvironmentSettingEnvironment) string { return v.Id }).(pulumi.StringOutput)
}

// The environment readonly name in environments/{id} format.
func (o SettingEnvironmentSettingEnvironmentOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SettingEnvironmentSettingEnvironment) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The environment is protected or not.
func (o SettingEnvironmentSettingEnvironmentOutput) Protected() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SettingEnvironmentSettingEnvironment) *bool { return v.Protected }).(pulumi.BoolPtrOutput)
}

// The environment display name.
func (o SettingEnvironmentSettingEnvironmentOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v SettingEnvironmentSettingEnvironment) string { return v.Title }).(pulumi.StringOutput)
}

type SettingEnvironmentSettingEnvironmentArrayOutput struct{ *pulumi.OutputState }

func (SettingEnvironmentSettingEnvironmentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SettingEnvironmentSettingEnvironment)(nil)).Elem()
}

func (o SettingEnvironmentSettingEnvironmentArrayOutput) ToSettingEnvironmentSettingEnvironmentArrayOutput() SettingEnvironmentSettingEnvironmentArrayOutput {
	return o
}

func (o SettingEnvironmentSettingEnvironmentArrayOutput) ToSettingEnvironmentSettingEnvironmentArrayOutputWithContext(ctx context.Context) SettingEnvironmentSettingEnvironmentArrayOutput {
	return o
}

func (o SettingEnvironmentSettingEnvironmentArrayOutput) Index(i pulumi.IntInput) SettingEnvironmentSettingEnvironmentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SettingEnvironmentSettingEnvironment {
		return vs[0].([]SettingEnvironmentSettingEnvironment)[vs[1].(int)]
	}).(SettingEnvironmentSettingEnvironmentOutput)
}

type SettingPasswordRestriction struct {
	// min_length is the minimum length for password, should no less than 8.
	MinLength *int `pulumi:"minLength"`
	// password_rotation requires users to reset their password after the duration. The duration should be at least 86400 (one day).
	PasswordRotationInSeconds *int `pulumi:"passwordRotationInSeconds"`
	// require_letter requires the password must contains at least one letter, regardless of upper case or lower case.
	RequireLetter *bool `pulumi:"requireLetter"`
	// require_number requires the password must contains at least one number.
	RequireNumber *bool `pulumi:"requireNumber"`
	// require*reset*password*for*first_login requires users to reset their password after the 1st login.
	RequireResetPasswordForFirstLogin *bool `pulumi:"requireResetPasswordForFirstLogin"`
	// require*special*character requires the password must contains at least one special character.
	RequireSpecialCharacter *bool `pulumi:"requireSpecialCharacter"`
	// require*uppercase*letter requires the password must contains at least one upper case letter.
	RequireUppercaseLetter *bool `pulumi:"requireUppercaseLetter"`
}

// SettingPasswordRestrictionInput is an input type that accepts SettingPasswordRestrictionArgs and SettingPasswordRestrictionOutput values.
// You can construct a concrete instance of `SettingPasswordRestrictionInput` via:
//
//	SettingPasswordRestrictionArgs{...}
type SettingPasswordRestrictionInput interface {
	pulumi.Input

	ToSettingPasswordRestrictionOutput() SettingPasswordRestrictionOutput
	ToSettingPasswordRestrictionOutputWithContext(context.Context) SettingPasswordRestrictionOutput
}

type SettingPasswordRestrictionArgs struct {
	// min_length is the minimum length for password, should no less than 8.
	MinLength pulumi.IntPtrInput `pulumi:"minLength"`
	// password_rotation requires users to reset their password after the duration. The duration should be at least 86400 (one day).
	PasswordRotationInSeconds pulumi.IntPtrInput `pulumi:"passwordRotationInSeconds"`
	// require_letter requires the password must contains at least one letter, regardless of upper case or lower case.
	RequireLetter pulumi.BoolPtrInput `pulumi:"requireLetter"`
	// require_number requires the password must contains at least one number.
	RequireNumber pulumi.BoolPtrInput `pulumi:"requireNumber"`
	// require*reset*password*for*first_login requires users to reset their password after the 1st login.
	RequireResetPasswordForFirstLogin pulumi.BoolPtrInput `pulumi:"requireResetPasswordForFirstLogin"`
	// require*special*character requires the password must contains at least one special character.
	RequireSpecialCharacter pulumi.BoolPtrInput `pulumi:"requireSpecialCharacter"`
	// require*uppercase*letter requires the password must contains at least one upper case letter.
	RequireUppercaseLetter pulumi.BoolPtrInput `pulumi:"requireUppercaseLetter"`
}

func (SettingPasswordRestrictionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SettingPasswordRestriction)(nil)).Elem()
}

func (i SettingPasswordRestrictionArgs) ToSettingPasswordRestrictionOutput() SettingPasswordRestrictionOutput {
	return i.ToSettingPasswordRestrictionOutputWithContext(context.Background())
}

func (i SettingPasswordRestrictionArgs) ToSettingPasswordRestrictionOutputWithContext(ctx context.Context) SettingPasswordRestrictionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SettingPasswordRestrictionOutput)
}

func (i SettingPasswordRestrictionArgs) ToSettingPasswordRestrictionPtrOutput() SettingPasswordRestrictionPtrOutput {
	return i.ToSettingPasswordRestrictionPtrOutputWithContext(context.Background())
}

func (i SettingPasswordRestrictionArgs) ToSettingPasswordRestrictionPtrOutputWithContext(ctx context.Context) SettingPasswordRestrictionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SettingPasswordRestrictionOutput).ToSettingPasswordRestrictionPtrOutputWithContext(ctx)
}

// SettingPasswordRestrictionPtrInput is an input type that accepts SettingPasswordRestrictionArgs, SettingPasswordRestrictionPtr and SettingPasswordRestrictionPtrOutput values.
// You can construct a concrete instance of `SettingPasswordRestrictionPtrInput` via:
//
//	        SettingPasswordRestrictionArgs{...}
//
//	or:
//
//	        nil
type SettingPasswordRestrictionPtrInput interface {
	pulumi.Input

	ToSettingPasswordRestrictionPtrOutput() SettingPasswordRestrictionPtrOutput
	ToSettingPasswordRestrictionPtrOutputWithContext(context.Context) SettingPasswordRestrictionPtrOutput
}

type settingPasswordRestrictionPtrType SettingPasswordRestrictionArgs

func SettingPasswordRestrictionPtr(v *SettingPasswordRestrictionArgs) SettingPasswordRestrictionPtrInput {
	return (*settingPasswordRestrictionPtrType)(v)
}

func (*settingPasswordRestrictionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SettingPasswordRestriction)(nil)).Elem()
}

func (i *settingPasswordRestrictionPtrType) ToSettingPasswordRestrictionPtrOutput() SettingPasswordRestrictionPtrOutput {
	return i.ToSettingPasswordRestrictionPtrOutputWithContext(context.Background())
}

func (i *settingPasswordRestrictionPtrType) ToSettingPasswordRestrictionPtrOutputWithContext(ctx context.Context) SettingPasswordRestrictionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SettingPasswordRestrictionPtrOutput)
}

type SettingPasswordRestrictionOutput struct{ *pulumi.OutputState }

func (SettingPasswordRestrictionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SettingPasswordRestriction)(nil)).Elem()
}

func (o SettingPasswordRestrictionOutput) ToSettingPasswordRestrictionOutput() SettingPasswordRestrictionOutput {
	return o
}

func (o SettingPasswordRestrictionOutput) ToSettingPasswordRestrictionOutputWithContext(ctx context.Context) SettingPasswordRestrictionOutput {
	return o
}

func (o SettingPasswordRestrictionOutput) ToSettingPasswordRestrictionPtrOutput() SettingPasswordRestrictionPtrOutput {
	return o.ToSettingPasswordRestrictionPtrOutputWithContext(context.Background())
}

func (o SettingPasswordRestrictionOutput) ToSettingPasswordRestrictionPtrOutputWithContext(ctx context.Context) SettingPasswordRestrictionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SettingPasswordRestriction) *SettingPasswordRestriction {
		return &v
	}).(SettingPasswordRestrictionPtrOutput)
}

// min_length is the minimum length for password, should no less than 8.
func (o SettingPasswordRestrictionOutput) MinLength() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SettingPasswordRestriction) *int { return v.MinLength }).(pulumi.IntPtrOutput)
}

// password_rotation requires users to reset their password after the duration. The duration should be at least 86400 (one day).
func (o SettingPasswordRestrictionOutput) PasswordRotationInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SettingPasswordRestriction) *int { return v.PasswordRotationInSeconds }).(pulumi.IntPtrOutput)
}

// require_letter requires the password must contains at least one letter, regardless of upper case or lower case.
func (o SettingPasswordRestrictionOutput) RequireLetter() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SettingPasswordRestriction) *bool { return v.RequireLetter }).(pulumi.BoolPtrOutput)
}

// require_number requires the password must contains at least one number.
func (o SettingPasswordRestrictionOutput) RequireNumber() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SettingPasswordRestriction) *bool { return v.RequireNumber }).(pulumi.BoolPtrOutput)
}

// require*reset*password*for*first_login requires users to reset their password after the 1st login.
func (o SettingPasswordRestrictionOutput) RequireResetPasswordForFirstLogin() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SettingPasswordRestriction) *bool { return v.RequireResetPasswordForFirstLogin }).(pulumi.BoolPtrOutput)
}

// require*special*character requires the password must contains at least one special character.
func (o SettingPasswordRestrictionOutput) RequireSpecialCharacter() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SettingPasswordRestriction) *bool { return v.RequireSpecialCharacter }).(pulumi.BoolPtrOutput)
}

// require*uppercase*letter requires the password must contains at least one upper case letter.
func (o SettingPasswordRestrictionOutput) RequireUppercaseLetter() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SettingPasswordRestriction) *bool { return v.RequireUppercaseLetter }).(pulumi.BoolPtrOutput)
}

type SettingPasswordRestrictionPtrOutput struct{ *pulumi.OutputState }

func (SettingPasswordRestrictionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SettingPasswordRestriction)(nil)).Elem()
}

func (o SettingPasswordRestrictionPtrOutput) ToSettingPasswordRestrictionPtrOutput() SettingPasswordRestrictionPtrOutput {
	return o
}

func (o SettingPasswordRestrictionPtrOutput) ToSettingPasswordRestrictionPtrOutputWithContext(ctx context.Context) SettingPasswordRestrictionPtrOutput {
	return o
}

func (o SettingPasswordRestrictionPtrOutput) Elem() SettingPasswordRestrictionOutput {
	return o.ApplyT(func(v *SettingPasswordRestriction) SettingPasswordRestriction {
		if v != nil {
			return *v
		}
		var ret SettingPasswordRestriction
		return ret
	}).(SettingPasswordRestrictionOutput)
}

// min_length is the minimum length for password, should no less than 8.
func (o SettingPasswordRestrictionPtrOutput) MinLength() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SettingPasswordRestriction) *int {
		if v == nil {
			return nil
		}
		return v.MinLength
	}).(pulumi.IntPtrOutput)
}

// password_rotation requires users to reset their password after the duration. The duration should be at least 86400 (one day).
func (o SettingPasswordRestrictionPtrOutput) PasswordRotationInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SettingPasswordRestriction) *int {
		if v == nil {
			return nil
		}
		return v.PasswordRotationInSeconds
	}).(pulumi.IntPtrOutput)
}

// require_letter requires the password must contains at least one letter, regardless of upper case or lower case.
func (o SettingPasswordRestrictionPtrOutput) RequireLetter() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SettingPasswordRestriction) *bool {
		if v == nil {
			return nil
		}
		return v.RequireLetter
	}).(pulumi.BoolPtrOutput)
}

// require_number requires the password must contains at least one number.
func (o SettingPasswordRestrictionPtrOutput) RequireNumber() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SettingPasswordRestriction) *bool {
		if v == nil {
			return nil
		}
		return v.RequireNumber
	}).(pulumi.BoolPtrOutput)
}

// require*reset*password*for*first_login requires users to reset their password after the 1st login.
func (o SettingPasswordRestrictionPtrOutput) RequireResetPasswordForFirstLogin() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SettingPasswordRestriction) *bool {
		if v == nil {
			return nil
		}
		return v.RequireResetPasswordForFirstLogin
	}).(pulumi.BoolPtrOutput)
}

// require*special*character requires the password must contains at least one special character.
func (o SettingPasswordRestrictionPtrOutput) RequireSpecialCharacter() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SettingPasswordRestriction) *bool {
		if v == nil {
			return nil
		}
		return v.RequireSpecialCharacter
	}).(pulumi.BoolPtrOutput)
}

// require*uppercase*letter requires the password must contains at least one upper case letter.
func (o SettingPasswordRestrictionPtrOutput) RequireUppercaseLetter() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SettingPasswordRestriction) *bool {
		if v == nil {
			return nil
		}
		return v.RequireUppercaseLetter
	}).(pulumi.BoolPtrOutput)
}

type SettingSemanticType struct {
	// The semantic type algorithm. Required.
	Algorithm *SettingSemanticTypeAlgorithm `pulumi:"algorithm"`
	// The semantic type description. Optional.
	Description *string `pulumi:"description"`
	// The semantic type unique uuid.
	Id string `pulumi:"id"`
	// The semantic type title. Required.
	Title string `pulumi:"title"`
}

// SettingSemanticTypeInput is an input type that accepts SettingSemanticTypeArgs and SettingSemanticTypeOutput values.
// You can construct a concrete instance of `SettingSemanticTypeInput` via:
//
//	SettingSemanticTypeArgs{...}
type SettingSemanticTypeInput interface {
	pulumi.Input

	ToSettingSemanticTypeOutput() SettingSemanticTypeOutput
	ToSettingSemanticTypeOutputWithContext(context.Context) SettingSemanticTypeOutput
}

type SettingSemanticTypeArgs struct {
	// The semantic type algorithm. Required.
	Algorithm SettingSemanticTypeAlgorithmPtrInput `pulumi:"algorithm"`
	// The semantic type description. Optional.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The semantic type unique uuid.
	Id pulumi.StringInput `pulumi:"id"`
	// The semantic type title. Required.
	Title pulumi.StringInput `pulumi:"title"`
}

func (SettingSemanticTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SettingSemanticType)(nil)).Elem()
}

func (i SettingSemanticTypeArgs) ToSettingSemanticTypeOutput() SettingSemanticTypeOutput {
	return i.ToSettingSemanticTypeOutputWithContext(context.Background())
}

func (i SettingSemanticTypeArgs) ToSettingSemanticTypeOutputWithContext(ctx context.Context) SettingSemanticTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SettingSemanticTypeOutput)
}

// SettingSemanticTypeArrayInput is an input type that accepts SettingSemanticTypeArray and SettingSemanticTypeArrayOutput values.
// You can construct a concrete instance of `SettingSemanticTypeArrayInput` via:
//
//	SettingSemanticTypeArray{ SettingSemanticTypeArgs{...} }
type SettingSemanticTypeArrayInput interface {
	pulumi.Input

	ToSettingSemanticTypeArrayOutput() SettingSemanticTypeArrayOutput
	ToSettingSemanticTypeArrayOutputWithContext(context.Context) SettingSemanticTypeArrayOutput
}

type SettingSemanticTypeArray []SettingSemanticTypeInput

func (SettingSemanticTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SettingSemanticType)(nil)).Elem()
}

func (i SettingSemanticTypeArray) ToSettingSemanticTypeArrayOutput() SettingSemanticTypeArrayOutput {
	return i.ToSettingSemanticTypeArrayOutputWithContext(context.Background())
}

func (i SettingSemanticTypeArray) ToSettingSemanticTypeArrayOutputWithContext(ctx context.Context) SettingSemanticTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SettingSemanticTypeArrayOutput)
}

type SettingSemanticTypeOutput struct{ *pulumi.OutputState }

func (SettingSemanticTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SettingSemanticType)(nil)).Elem()
}

func (o SettingSemanticTypeOutput) ToSettingSemanticTypeOutput() SettingSemanticTypeOutput {
	return o
}

func (o SettingSemanticTypeOutput) ToSettingSemanticTypeOutputWithContext(ctx context.Context) SettingSemanticTypeOutput {
	return o
}

// The semantic type algorithm. Required.
func (o SettingSemanticTypeOutput) Algorithm() SettingSemanticTypeAlgorithmPtrOutput {
	return o.ApplyT(func(v SettingSemanticType) *SettingSemanticTypeAlgorithm { return v.Algorithm }).(SettingSemanticTypeAlgorithmPtrOutput)
}

// The semantic type description. Optional.
func (o SettingSemanticTypeOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SettingSemanticType) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The semantic type unique uuid.
func (o SettingSemanticTypeOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v SettingSemanticType) string { return v.Id }).(pulumi.StringOutput)
}

// The semantic type title. Required.
func (o SettingSemanticTypeOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v SettingSemanticType) string { return v.Title }).(pulumi.StringOutput)
}

type SettingSemanticTypeArrayOutput struct{ *pulumi.OutputState }

func (SettingSemanticTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SettingSemanticType)(nil)).Elem()
}

func (o SettingSemanticTypeArrayOutput) ToSettingSemanticTypeArrayOutput() SettingSemanticTypeArrayOutput {
	return o
}

func (o SettingSemanticTypeArrayOutput) ToSettingSemanticTypeArrayOutputWithContext(ctx context.Context) SettingSemanticTypeArrayOutput {
	return o
}

func (o SettingSemanticTypeArrayOutput) Index(i pulumi.IntInput) SettingSemanticTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SettingSemanticType {
		return vs[0].([]SettingSemanticType)[vs[1].(int)]
	}).(SettingSemanticTypeOutput)
}

type SettingSemanticTypeAlgorithm struct {
	FullMask       *SettingSemanticTypeAlgorithmFullMask       `pulumi:"fullMask"`
	InnerOuterMask *SettingSemanticTypeAlgorithmInnerOuterMask `pulumi:"innerOuterMask"`
	Md5Mask        *SettingSemanticTypeAlgorithmMd5Mask        `pulumi:"md5Mask"`
	RangeMask      *SettingSemanticTypeAlgorithmRangeMask      `pulumi:"rangeMask"`
}

// SettingSemanticTypeAlgorithmInput is an input type that accepts SettingSemanticTypeAlgorithmArgs and SettingSemanticTypeAlgorithmOutput values.
// You can construct a concrete instance of `SettingSemanticTypeAlgorithmInput` via:
//
//	SettingSemanticTypeAlgorithmArgs{...}
type SettingSemanticTypeAlgorithmInput interface {
	pulumi.Input

	ToSettingSemanticTypeAlgorithmOutput() SettingSemanticTypeAlgorithmOutput
	ToSettingSemanticTypeAlgorithmOutputWithContext(context.Context) SettingSemanticTypeAlgorithmOutput
}

type SettingSemanticTypeAlgorithmArgs struct {
	FullMask       SettingSemanticTypeAlgorithmFullMaskPtrInput       `pulumi:"fullMask"`
	InnerOuterMask SettingSemanticTypeAlgorithmInnerOuterMaskPtrInput `pulumi:"innerOuterMask"`
	Md5Mask        SettingSemanticTypeAlgorithmMd5MaskPtrInput        `pulumi:"md5Mask"`
	RangeMask      SettingSemanticTypeAlgorithmRangeMaskPtrInput      `pulumi:"rangeMask"`
}

func (SettingSemanticTypeAlgorithmArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SettingSemanticTypeAlgorithm)(nil)).Elem()
}

func (i SettingSemanticTypeAlgorithmArgs) ToSettingSemanticTypeAlgorithmOutput() SettingSemanticTypeAlgorithmOutput {
	return i.ToSettingSemanticTypeAlgorithmOutputWithContext(context.Background())
}

func (i SettingSemanticTypeAlgorithmArgs) ToSettingSemanticTypeAlgorithmOutputWithContext(ctx context.Context) SettingSemanticTypeAlgorithmOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SettingSemanticTypeAlgorithmOutput)
}

func (i SettingSemanticTypeAlgorithmArgs) ToSettingSemanticTypeAlgorithmPtrOutput() SettingSemanticTypeAlgorithmPtrOutput {
	return i.ToSettingSemanticTypeAlgorithmPtrOutputWithContext(context.Background())
}

func (i SettingSemanticTypeAlgorithmArgs) ToSettingSemanticTypeAlgorithmPtrOutputWithContext(ctx context.Context) SettingSemanticTypeAlgorithmPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SettingSemanticTypeAlgorithmOutput).ToSettingSemanticTypeAlgorithmPtrOutputWithContext(ctx)
}

// SettingSemanticTypeAlgorithmPtrInput is an input type that accepts SettingSemanticTypeAlgorithmArgs, SettingSemanticTypeAlgorithmPtr and SettingSemanticTypeAlgorithmPtrOutput values.
// You can construct a concrete instance of `SettingSemanticTypeAlgorithmPtrInput` via:
//
//	        SettingSemanticTypeAlgorithmArgs{...}
//
//	or:
//
//	        nil
type SettingSemanticTypeAlgorithmPtrInput interface {
	pulumi.Input

	ToSettingSemanticTypeAlgorithmPtrOutput() SettingSemanticTypeAlgorithmPtrOutput
	ToSettingSemanticTypeAlgorithmPtrOutputWithContext(context.Context) SettingSemanticTypeAlgorithmPtrOutput
}

type settingSemanticTypeAlgorithmPtrType SettingSemanticTypeAlgorithmArgs

func SettingSemanticTypeAlgorithmPtr(v *SettingSemanticTypeAlgorithmArgs) SettingSemanticTypeAlgorithmPtrInput {
	return (*settingSemanticTypeAlgorithmPtrType)(v)
}

func (*settingSemanticTypeAlgorithmPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SettingSemanticTypeAlgorithm)(nil)).Elem()
}

func (i *settingSemanticTypeAlgorithmPtrType) ToSettingSemanticTypeAlgorithmPtrOutput() SettingSemanticTypeAlgorithmPtrOutput {
	return i.ToSettingSemanticTypeAlgorithmPtrOutputWithContext(context.Background())
}

func (i *settingSemanticTypeAlgorithmPtrType) ToSettingSemanticTypeAlgorithmPtrOutputWithContext(ctx context.Context) SettingSemanticTypeAlgorithmPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SettingSemanticTypeAlgorithmPtrOutput)
}

type SettingSemanticTypeAlgorithmOutput struct{ *pulumi.OutputState }

func (SettingSemanticTypeAlgorithmOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SettingSemanticTypeAlgorithm)(nil)).Elem()
}

func (o SettingSemanticTypeAlgorithmOutput) ToSettingSemanticTypeAlgorithmOutput() SettingSemanticTypeAlgorithmOutput {
	return o
}

func (o SettingSemanticTypeAlgorithmOutput) ToSettingSemanticTypeAlgorithmOutputWithContext(ctx context.Context) SettingSemanticTypeAlgorithmOutput {
	return o
}

func (o SettingSemanticTypeAlgorithmOutput) ToSettingSemanticTypeAlgorithmPtrOutput() SettingSemanticTypeAlgorithmPtrOutput {
	return o.ToSettingSemanticTypeAlgorithmPtrOutputWithContext(context.Background())
}

func (o SettingSemanticTypeAlgorithmOutput) ToSettingSemanticTypeAlgorithmPtrOutputWithContext(ctx context.Context) SettingSemanticTypeAlgorithmPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SettingSemanticTypeAlgorithm) *SettingSemanticTypeAlgorithm {
		return &v
	}).(SettingSemanticTypeAlgorithmPtrOutput)
}

func (o SettingSemanticTypeAlgorithmOutput) FullMask() SettingSemanticTypeAlgorithmFullMaskPtrOutput {
	return o.ApplyT(func(v SettingSemanticTypeAlgorithm) *SettingSemanticTypeAlgorithmFullMask { return v.FullMask }).(SettingSemanticTypeAlgorithmFullMaskPtrOutput)
}

func (o SettingSemanticTypeAlgorithmOutput) InnerOuterMask() SettingSemanticTypeAlgorithmInnerOuterMaskPtrOutput {
	return o.ApplyT(func(v SettingSemanticTypeAlgorithm) *SettingSemanticTypeAlgorithmInnerOuterMask {
		return v.InnerOuterMask
	}).(SettingSemanticTypeAlgorithmInnerOuterMaskPtrOutput)
}

func (o SettingSemanticTypeAlgorithmOutput) Md5Mask() SettingSemanticTypeAlgorithmMd5MaskPtrOutput {
	return o.ApplyT(func(v SettingSemanticTypeAlgorithm) *SettingSemanticTypeAlgorithmMd5Mask { return v.Md5Mask }).(SettingSemanticTypeAlgorithmMd5MaskPtrOutput)
}

func (o SettingSemanticTypeAlgorithmOutput) RangeMask() SettingSemanticTypeAlgorithmRangeMaskPtrOutput {
	return o.ApplyT(func(v SettingSemanticTypeAlgorithm) *SettingSemanticTypeAlgorithmRangeMask { return v.RangeMask }).(SettingSemanticTypeAlgorithmRangeMaskPtrOutput)
}

type SettingSemanticTypeAlgorithmPtrOutput struct{ *pulumi.OutputState }

func (SettingSemanticTypeAlgorithmPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SettingSemanticTypeAlgorithm)(nil)).Elem()
}

func (o SettingSemanticTypeAlgorithmPtrOutput) ToSettingSemanticTypeAlgorithmPtrOutput() SettingSemanticTypeAlgorithmPtrOutput {
	return o
}

func (o SettingSemanticTypeAlgorithmPtrOutput) ToSettingSemanticTypeAlgorithmPtrOutputWithContext(ctx context.Context) SettingSemanticTypeAlgorithmPtrOutput {
	return o
}

func (o SettingSemanticTypeAlgorithmPtrOutput) Elem() SettingSemanticTypeAlgorithmOutput {
	return o.ApplyT(func(v *SettingSemanticTypeAlgorithm) SettingSemanticTypeAlgorithm {
		if v != nil {
			return *v
		}
		var ret SettingSemanticTypeAlgorithm
		return ret
	}).(SettingSemanticTypeAlgorithmOutput)
}

func (o SettingSemanticTypeAlgorithmPtrOutput) FullMask() SettingSemanticTypeAlgorithmFullMaskPtrOutput {
	return o.ApplyT(func(v *SettingSemanticTypeAlgorithm) *SettingSemanticTypeAlgorithmFullMask {
		if v == nil {
			return nil
		}
		return v.FullMask
	}).(SettingSemanticTypeAlgorithmFullMaskPtrOutput)
}

func (o SettingSemanticTypeAlgorithmPtrOutput) InnerOuterMask() SettingSemanticTypeAlgorithmInnerOuterMaskPtrOutput {
	return o.ApplyT(func(v *SettingSemanticTypeAlgorithm) *SettingSemanticTypeAlgorithmInnerOuterMask {
		if v == nil {
			return nil
		}
		return v.InnerOuterMask
	}).(SettingSemanticTypeAlgorithmInnerOuterMaskPtrOutput)
}

func (o SettingSemanticTypeAlgorithmPtrOutput) Md5Mask() SettingSemanticTypeAlgorithmMd5MaskPtrOutput {
	return o.ApplyT(func(v *SettingSemanticTypeAlgorithm) *SettingSemanticTypeAlgorithmMd5Mask {
		if v == nil {
			return nil
		}
		return v.Md5Mask
	}).(SettingSemanticTypeAlgorithmMd5MaskPtrOutput)
}

func (o SettingSemanticTypeAlgorithmPtrOutput) RangeMask() SettingSemanticTypeAlgorithmRangeMaskPtrOutput {
	return o.ApplyT(func(v *SettingSemanticTypeAlgorithm) *SettingSemanticTypeAlgorithmRangeMask {
		if v == nil {
			return nil
		}
		return v.RangeMask
	}).(SettingSemanticTypeAlgorithmRangeMaskPtrOutput)
}

type SettingSemanticTypeAlgorithmFullMask struct {
	// Substitution is the string used to replace the original value, the max length of the string is 16 bytes.
	Substitution string `pulumi:"substitution"`
}

// SettingSemanticTypeAlgorithmFullMaskInput is an input type that accepts SettingSemanticTypeAlgorithmFullMaskArgs and SettingSemanticTypeAlgorithmFullMaskOutput values.
// You can construct a concrete instance of `SettingSemanticTypeAlgorithmFullMaskInput` via:
//
//	SettingSemanticTypeAlgorithmFullMaskArgs{...}
type SettingSemanticTypeAlgorithmFullMaskInput interface {
	pulumi.Input

	ToSettingSemanticTypeAlgorithmFullMaskOutput() SettingSemanticTypeAlgorithmFullMaskOutput
	ToSettingSemanticTypeAlgorithmFullMaskOutputWithContext(context.Context) SettingSemanticTypeAlgorithmFullMaskOutput
}

type SettingSemanticTypeAlgorithmFullMaskArgs struct {
	// Substitution is the string used to replace the original value, the max length of the string is 16 bytes.
	Substitution pulumi.StringInput `pulumi:"substitution"`
}

func (SettingSemanticTypeAlgorithmFullMaskArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SettingSemanticTypeAlgorithmFullMask)(nil)).Elem()
}

func (i SettingSemanticTypeAlgorithmFullMaskArgs) ToSettingSemanticTypeAlgorithmFullMaskOutput() SettingSemanticTypeAlgorithmFullMaskOutput {
	return i.ToSettingSemanticTypeAlgorithmFullMaskOutputWithContext(context.Background())
}

func (i SettingSemanticTypeAlgorithmFullMaskArgs) ToSettingSemanticTypeAlgorithmFullMaskOutputWithContext(ctx context.Context) SettingSemanticTypeAlgorithmFullMaskOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SettingSemanticTypeAlgorithmFullMaskOutput)
}

func (i SettingSemanticTypeAlgorithmFullMaskArgs) ToSettingSemanticTypeAlgorithmFullMaskPtrOutput() SettingSemanticTypeAlgorithmFullMaskPtrOutput {
	return i.ToSettingSemanticTypeAlgorithmFullMaskPtrOutputWithContext(context.Background())
}

func (i SettingSemanticTypeAlgorithmFullMaskArgs) ToSettingSemanticTypeAlgorithmFullMaskPtrOutputWithContext(ctx context.Context) SettingSemanticTypeAlgorithmFullMaskPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SettingSemanticTypeAlgorithmFullMaskOutput).ToSettingSemanticTypeAlgorithmFullMaskPtrOutputWithContext(ctx)
}

// SettingSemanticTypeAlgorithmFullMaskPtrInput is an input type that accepts SettingSemanticTypeAlgorithmFullMaskArgs, SettingSemanticTypeAlgorithmFullMaskPtr and SettingSemanticTypeAlgorithmFullMaskPtrOutput values.
// You can construct a concrete instance of `SettingSemanticTypeAlgorithmFullMaskPtrInput` via:
//
//	        SettingSemanticTypeAlgorithmFullMaskArgs{...}
//
//	or:
//
//	        nil
type SettingSemanticTypeAlgorithmFullMaskPtrInput interface {
	pulumi.Input

	ToSettingSemanticTypeAlgorithmFullMaskPtrOutput() SettingSemanticTypeAlgorithmFullMaskPtrOutput
	ToSettingSemanticTypeAlgorithmFullMaskPtrOutputWithContext(context.Context) SettingSemanticTypeAlgorithmFullMaskPtrOutput
}

type settingSemanticTypeAlgorithmFullMaskPtrType SettingSemanticTypeAlgorithmFullMaskArgs

func SettingSemanticTypeAlgorithmFullMaskPtr(v *SettingSemanticTypeAlgorithmFullMaskArgs) SettingSemanticTypeAlgorithmFullMaskPtrInput {
	return (*settingSemanticTypeAlgorithmFullMaskPtrType)(v)
}

func (*settingSemanticTypeAlgorithmFullMaskPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SettingSemanticTypeAlgorithmFullMask)(nil)).Elem()
}

func (i *settingSemanticTypeAlgorithmFullMaskPtrType) ToSettingSemanticTypeAlgorithmFullMaskPtrOutput() SettingSemanticTypeAlgorithmFullMaskPtrOutput {
	return i.ToSettingSemanticTypeAlgorithmFullMaskPtrOutputWithContext(context.Background())
}

func (i *settingSemanticTypeAlgorithmFullMaskPtrType) ToSettingSemanticTypeAlgorithmFullMaskPtrOutputWithContext(ctx context.Context) SettingSemanticTypeAlgorithmFullMaskPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SettingSemanticTypeAlgorithmFullMaskPtrOutput)
}

type SettingSemanticTypeAlgorithmFullMaskOutput struct{ *pulumi.OutputState }

func (SettingSemanticTypeAlgorithmFullMaskOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SettingSemanticTypeAlgorithmFullMask)(nil)).Elem()
}

func (o SettingSemanticTypeAlgorithmFullMaskOutput) ToSettingSemanticTypeAlgorithmFullMaskOutput() SettingSemanticTypeAlgorithmFullMaskOutput {
	return o
}

func (o SettingSemanticTypeAlgorithmFullMaskOutput) ToSettingSemanticTypeAlgorithmFullMaskOutputWithContext(ctx context.Context) SettingSemanticTypeAlgorithmFullMaskOutput {
	return o
}

func (o SettingSemanticTypeAlgorithmFullMaskOutput) ToSettingSemanticTypeAlgorithmFullMaskPtrOutput() SettingSemanticTypeAlgorithmFullMaskPtrOutput {
	return o.ToSettingSemanticTypeAlgorithmFullMaskPtrOutputWithContext(context.Background())
}

func (o SettingSemanticTypeAlgorithmFullMaskOutput) ToSettingSemanticTypeAlgorithmFullMaskPtrOutputWithContext(ctx context.Context) SettingSemanticTypeAlgorithmFullMaskPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SettingSemanticTypeAlgorithmFullMask) *SettingSemanticTypeAlgorithmFullMask {
		return &v
	}).(SettingSemanticTypeAlgorithmFullMaskPtrOutput)
}

// Substitution is the string used to replace the original value, the max length of the string is 16 bytes.
func (o SettingSemanticTypeAlgorithmFullMaskOutput) Substitution() pulumi.StringOutput {
	return o.ApplyT(func(v SettingSemanticTypeAlgorithmFullMask) string { return v.Substitution }).(pulumi.StringOutput)
}

type SettingSemanticTypeAlgorithmFullMaskPtrOutput struct{ *pulumi.OutputState }

func (SettingSemanticTypeAlgorithmFullMaskPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SettingSemanticTypeAlgorithmFullMask)(nil)).Elem()
}

func (o SettingSemanticTypeAlgorithmFullMaskPtrOutput) ToSettingSemanticTypeAlgorithmFullMaskPtrOutput() SettingSemanticTypeAlgorithmFullMaskPtrOutput {
	return o
}

func (o SettingSemanticTypeAlgorithmFullMaskPtrOutput) ToSettingSemanticTypeAlgorithmFullMaskPtrOutputWithContext(ctx context.Context) SettingSemanticTypeAlgorithmFullMaskPtrOutput {
	return o
}

func (o SettingSemanticTypeAlgorithmFullMaskPtrOutput) Elem() SettingSemanticTypeAlgorithmFullMaskOutput {
	return o.ApplyT(func(v *SettingSemanticTypeAlgorithmFullMask) SettingSemanticTypeAlgorithmFullMask {
		if v != nil {
			return *v
		}
		var ret SettingSemanticTypeAlgorithmFullMask
		return ret
	}).(SettingSemanticTypeAlgorithmFullMaskOutput)
}

// Substitution is the string used to replace the original value, the max length of the string is 16 bytes.
func (o SettingSemanticTypeAlgorithmFullMaskPtrOutput) Substitution() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SettingSemanticTypeAlgorithmFullMask) *string {
		if v == nil {
			return nil
		}
		return &v.Substitution
	}).(pulumi.StringPtrOutput)
}

type SettingSemanticTypeAlgorithmInnerOuterMask struct {
	// The length of prefix.
	PrefixLen int `pulumi:"prefixLen"`
	// Substitution is the string used to replace the inner or outer substring.
	Substitution string `pulumi:"substitution"`
	// The length of suffix.
	SuffixLen int `pulumi:"suffixLen"`
	// INNER or OUTER.
	Type string `pulumi:"type"`
}

// SettingSemanticTypeAlgorithmInnerOuterMaskInput is an input type that accepts SettingSemanticTypeAlgorithmInnerOuterMaskArgs and SettingSemanticTypeAlgorithmInnerOuterMaskOutput values.
// You can construct a concrete instance of `SettingSemanticTypeAlgorithmInnerOuterMaskInput` via:
//
//	SettingSemanticTypeAlgorithmInnerOuterMaskArgs{...}
type SettingSemanticTypeAlgorithmInnerOuterMaskInput interface {
	pulumi.Input

	ToSettingSemanticTypeAlgorithmInnerOuterMaskOutput() SettingSemanticTypeAlgorithmInnerOuterMaskOutput
	ToSettingSemanticTypeAlgorithmInnerOuterMaskOutputWithContext(context.Context) SettingSemanticTypeAlgorithmInnerOuterMaskOutput
}

type SettingSemanticTypeAlgorithmInnerOuterMaskArgs struct {
	// The length of prefix.
	PrefixLen pulumi.IntInput `pulumi:"prefixLen"`
	// Substitution is the string used to replace the inner or outer substring.
	Substitution pulumi.StringInput `pulumi:"substitution"`
	// The length of suffix.
	SuffixLen pulumi.IntInput `pulumi:"suffixLen"`
	// INNER or OUTER.
	Type pulumi.StringInput `pulumi:"type"`
}

func (SettingSemanticTypeAlgorithmInnerOuterMaskArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SettingSemanticTypeAlgorithmInnerOuterMask)(nil)).Elem()
}

func (i SettingSemanticTypeAlgorithmInnerOuterMaskArgs) ToSettingSemanticTypeAlgorithmInnerOuterMaskOutput() SettingSemanticTypeAlgorithmInnerOuterMaskOutput {
	return i.ToSettingSemanticTypeAlgorithmInnerOuterMaskOutputWithContext(context.Background())
}

func (i SettingSemanticTypeAlgorithmInnerOuterMaskArgs) ToSettingSemanticTypeAlgorithmInnerOuterMaskOutputWithContext(ctx context.Context) SettingSemanticTypeAlgorithmInnerOuterMaskOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SettingSemanticTypeAlgorithmInnerOuterMaskOutput)
}

func (i SettingSemanticTypeAlgorithmInnerOuterMaskArgs) ToSettingSemanticTypeAlgorithmInnerOuterMaskPtrOutput() SettingSemanticTypeAlgorithmInnerOuterMaskPtrOutput {
	return i.ToSettingSemanticTypeAlgorithmInnerOuterMaskPtrOutputWithContext(context.Background())
}

func (i SettingSemanticTypeAlgorithmInnerOuterMaskArgs) ToSettingSemanticTypeAlgorithmInnerOuterMaskPtrOutputWithContext(ctx context.Context) SettingSemanticTypeAlgorithmInnerOuterMaskPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SettingSemanticTypeAlgorithmInnerOuterMaskOutput).ToSettingSemanticTypeAlgorithmInnerOuterMaskPtrOutputWithContext(ctx)
}

// SettingSemanticTypeAlgorithmInnerOuterMaskPtrInput is an input type that accepts SettingSemanticTypeAlgorithmInnerOuterMaskArgs, SettingSemanticTypeAlgorithmInnerOuterMaskPtr and SettingSemanticTypeAlgorithmInnerOuterMaskPtrOutput values.
// You can construct a concrete instance of `SettingSemanticTypeAlgorithmInnerOuterMaskPtrInput` via:
//
//	        SettingSemanticTypeAlgorithmInnerOuterMaskArgs{...}
//
//	or:
//
//	        nil
type SettingSemanticTypeAlgorithmInnerOuterMaskPtrInput interface {
	pulumi.Input

	ToSettingSemanticTypeAlgorithmInnerOuterMaskPtrOutput() SettingSemanticTypeAlgorithmInnerOuterMaskPtrOutput
	ToSettingSemanticTypeAlgorithmInnerOuterMaskPtrOutputWithContext(context.Context) SettingSemanticTypeAlgorithmInnerOuterMaskPtrOutput
}

type settingSemanticTypeAlgorithmInnerOuterMaskPtrType SettingSemanticTypeAlgorithmInnerOuterMaskArgs

func SettingSemanticTypeAlgorithmInnerOuterMaskPtr(v *SettingSemanticTypeAlgorithmInnerOuterMaskArgs) SettingSemanticTypeAlgorithmInnerOuterMaskPtrInput {
	return (*settingSemanticTypeAlgorithmInnerOuterMaskPtrType)(v)
}

func (*settingSemanticTypeAlgorithmInnerOuterMaskPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SettingSemanticTypeAlgorithmInnerOuterMask)(nil)).Elem()
}

func (i *settingSemanticTypeAlgorithmInnerOuterMaskPtrType) ToSettingSemanticTypeAlgorithmInnerOuterMaskPtrOutput() SettingSemanticTypeAlgorithmInnerOuterMaskPtrOutput {
	return i.ToSettingSemanticTypeAlgorithmInnerOuterMaskPtrOutputWithContext(context.Background())
}

func (i *settingSemanticTypeAlgorithmInnerOuterMaskPtrType) ToSettingSemanticTypeAlgorithmInnerOuterMaskPtrOutputWithContext(ctx context.Context) SettingSemanticTypeAlgorithmInnerOuterMaskPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SettingSemanticTypeAlgorithmInnerOuterMaskPtrOutput)
}

type SettingSemanticTypeAlgorithmInnerOuterMaskOutput struct{ *pulumi.OutputState }

func (SettingSemanticTypeAlgorithmInnerOuterMaskOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SettingSemanticTypeAlgorithmInnerOuterMask)(nil)).Elem()
}

func (o SettingSemanticTypeAlgorithmInnerOuterMaskOutput) ToSettingSemanticTypeAlgorithmInnerOuterMaskOutput() SettingSemanticTypeAlgorithmInnerOuterMaskOutput {
	return o
}

func (o SettingSemanticTypeAlgorithmInnerOuterMaskOutput) ToSettingSemanticTypeAlgorithmInnerOuterMaskOutputWithContext(ctx context.Context) SettingSemanticTypeAlgorithmInnerOuterMaskOutput {
	return o
}

func (o SettingSemanticTypeAlgorithmInnerOuterMaskOutput) ToSettingSemanticTypeAlgorithmInnerOuterMaskPtrOutput() SettingSemanticTypeAlgorithmInnerOuterMaskPtrOutput {
	return o.ToSettingSemanticTypeAlgorithmInnerOuterMaskPtrOutputWithContext(context.Background())
}

func (o SettingSemanticTypeAlgorithmInnerOuterMaskOutput) ToSettingSemanticTypeAlgorithmInnerOuterMaskPtrOutputWithContext(ctx context.Context) SettingSemanticTypeAlgorithmInnerOuterMaskPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SettingSemanticTypeAlgorithmInnerOuterMask) *SettingSemanticTypeAlgorithmInnerOuterMask {
		return &v
	}).(SettingSemanticTypeAlgorithmInnerOuterMaskPtrOutput)
}

// The length of prefix.
func (o SettingSemanticTypeAlgorithmInnerOuterMaskOutput) PrefixLen() pulumi.IntOutput {
	return o.ApplyT(func(v SettingSemanticTypeAlgorithmInnerOuterMask) int { return v.PrefixLen }).(pulumi.IntOutput)
}

// Substitution is the string used to replace the inner or outer substring.
func (o SettingSemanticTypeAlgorithmInnerOuterMaskOutput) Substitution() pulumi.StringOutput {
	return o.ApplyT(func(v SettingSemanticTypeAlgorithmInnerOuterMask) string { return v.Substitution }).(pulumi.StringOutput)
}

// The length of suffix.
func (o SettingSemanticTypeAlgorithmInnerOuterMaskOutput) SuffixLen() pulumi.IntOutput {
	return o.ApplyT(func(v SettingSemanticTypeAlgorithmInnerOuterMask) int { return v.SuffixLen }).(pulumi.IntOutput)
}

// INNER or OUTER.
func (o SettingSemanticTypeAlgorithmInnerOuterMaskOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v SettingSemanticTypeAlgorithmInnerOuterMask) string { return v.Type }).(pulumi.StringOutput)
}

type SettingSemanticTypeAlgorithmInnerOuterMaskPtrOutput struct{ *pulumi.OutputState }

func (SettingSemanticTypeAlgorithmInnerOuterMaskPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SettingSemanticTypeAlgorithmInnerOuterMask)(nil)).Elem()
}

func (o SettingSemanticTypeAlgorithmInnerOuterMaskPtrOutput) ToSettingSemanticTypeAlgorithmInnerOuterMaskPtrOutput() SettingSemanticTypeAlgorithmInnerOuterMaskPtrOutput {
	return o
}

func (o SettingSemanticTypeAlgorithmInnerOuterMaskPtrOutput) ToSettingSemanticTypeAlgorithmInnerOuterMaskPtrOutputWithContext(ctx context.Context) SettingSemanticTypeAlgorithmInnerOuterMaskPtrOutput {
	return o
}

func (o SettingSemanticTypeAlgorithmInnerOuterMaskPtrOutput) Elem() SettingSemanticTypeAlgorithmInnerOuterMaskOutput {
	return o.ApplyT(func(v *SettingSemanticTypeAlgorithmInnerOuterMask) SettingSemanticTypeAlgorithmInnerOuterMask {
		if v != nil {
			return *v
		}
		var ret SettingSemanticTypeAlgorithmInnerOuterMask
		return ret
	}).(SettingSemanticTypeAlgorithmInnerOuterMaskOutput)
}

// The length of prefix.
func (o SettingSemanticTypeAlgorithmInnerOuterMaskPtrOutput) PrefixLen() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SettingSemanticTypeAlgorithmInnerOuterMask) *int {
		if v == nil {
			return nil
		}
		return &v.PrefixLen
	}).(pulumi.IntPtrOutput)
}

// Substitution is the string used to replace the inner or outer substring.
func (o SettingSemanticTypeAlgorithmInnerOuterMaskPtrOutput) Substitution() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SettingSemanticTypeAlgorithmInnerOuterMask) *string {
		if v == nil {
			return nil
		}
		return &v.Substitution
	}).(pulumi.StringPtrOutput)
}

// The length of suffix.
func (o SettingSemanticTypeAlgorithmInnerOuterMaskPtrOutput) SuffixLen() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SettingSemanticTypeAlgorithmInnerOuterMask) *int {
		if v == nil {
			return nil
		}
		return &v.SuffixLen
	}).(pulumi.IntPtrOutput)
}

// INNER or OUTER.
func (o SettingSemanticTypeAlgorithmInnerOuterMaskPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SettingSemanticTypeAlgorithmInnerOuterMask) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type SettingSemanticTypeAlgorithmMd5Mask struct {
	// Salt is the salt value to generate a different hash that with the word alone.
	Salt string `pulumi:"salt"`
}

// SettingSemanticTypeAlgorithmMd5MaskInput is an input type that accepts SettingSemanticTypeAlgorithmMd5MaskArgs and SettingSemanticTypeAlgorithmMd5MaskOutput values.
// You can construct a concrete instance of `SettingSemanticTypeAlgorithmMd5MaskInput` via:
//
//	SettingSemanticTypeAlgorithmMd5MaskArgs{...}
type SettingSemanticTypeAlgorithmMd5MaskInput interface {
	pulumi.Input

	ToSettingSemanticTypeAlgorithmMd5MaskOutput() SettingSemanticTypeAlgorithmMd5MaskOutput
	ToSettingSemanticTypeAlgorithmMd5MaskOutputWithContext(context.Context) SettingSemanticTypeAlgorithmMd5MaskOutput
}

type SettingSemanticTypeAlgorithmMd5MaskArgs struct {
	// Salt is the salt value to generate a different hash that with the word alone.
	Salt pulumi.StringInput `pulumi:"salt"`
}

func (SettingSemanticTypeAlgorithmMd5MaskArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SettingSemanticTypeAlgorithmMd5Mask)(nil)).Elem()
}

func (i SettingSemanticTypeAlgorithmMd5MaskArgs) ToSettingSemanticTypeAlgorithmMd5MaskOutput() SettingSemanticTypeAlgorithmMd5MaskOutput {
	return i.ToSettingSemanticTypeAlgorithmMd5MaskOutputWithContext(context.Background())
}

func (i SettingSemanticTypeAlgorithmMd5MaskArgs) ToSettingSemanticTypeAlgorithmMd5MaskOutputWithContext(ctx context.Context) SettingSemanticTypeAlgorithmMd5MaskOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SettingSemanticTypeAlgorithmMd5MaskOutput)
}

func (i SettingSemanticTypeAlgorithmMd5MaskArgs) ToSettingSemanticTypeAlgorithmMd5MaskPtrOutput() SettingSemanticTypeAlgorithmMd5MaskPtrOutput {
	return i.ToSettingSemanticTypeAlgorithmMd5MaskPtrOutputWithContext(context.Background())
}

func (i SettingSemanticTypeAlgorithmMd5MaskArgs) ToSettingSemanticTypeAlgorithmMd5MaskPtrOutputWithContext(ctx context.Context) SettingSemanticTypeAlgorithmMd5MaskPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SettingSemanticTypeAlgorithmMd5MaskOutput).ToSettingSemanticTypeAlgorithmMd5MaskPtrOutputWithContext(ctx)
}

// SettingSemanticTypeAlgorithmMd5MaskPtrInput is an input type that accepts SettingSemanticTypeAlgorithmMd5MaskArgs, SettingSemanticTypeAlgorithmMd5MaskPtr and SettingSemanticTypeAlgorithmMd5MaskPtrOutput values.
// You can construct a concrete instance of `SettingSemanticTypeAlgorithmMd5MaskPtrInput` via:
//
//	        SettingSemanticTypeAlgorithmMd5MaskArgs{...}
//
//	or:
//
//	        nil
type SettingSemanticTypeAlgorithmMd5MaskPtrInput interface {
	pulumi.Input

	ToSettingSemanticTypeAlgorithmMd5MaskPtrOutput() SettingSemanticTypeAlgorithmMd5MaskPtrOutput
	ToSettingSemanticTypeAlgorithmMd5MaskPtrOutputWithContext(context.Context) SettingSemanticTypeAlgorithmMd5MaskPtrOutput
}

type settingSemanticTypeAlgorithmMd5MaskPtrType SettingSemanticTypeAlgorithmMd5MaskArgs

func SettingSemanticTypeAlgorithmMd5MaskPtr(v *SettingSemanticTypeAlgorithmMd5MaskArgs) SettingSemanticTypeAlgorithmMd5MaskPtrInput {
	return (*settingSemanticTypeAlgorithmMd5MaskPtrType)(v)
}

func (*settingSemanticTypeAlgorithmMd5MaskPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SettingSemanticTypeAlgorithmMd5Mask)(nil)).Elem()
}

func (i *settingSemanticTypeAlgorithmMd5MaskPtrType) ToSettingSemanticTypeAlgorithmMd5MaskPtrOutput() SettingSemanticTypeAlgorithmMd5MaskPtrOutput {
	return i.ToSettingSemanticTypeAlgorithmMd5MaskPtrOutputWithContext(context.Background())
}

func (i *settingSemanticTypeAlgorithmMd5MaskPtrType) ToSettingSemanticTypeAlgorithmMd5MaskPtrOutputWithContext(ctx context.Context) SettingSemanticTypeAlgorithmMd5MaskPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SettingSemanticTypeAlgorithmMd5MaskPtrOutput)
}

type SettingSemanticTypeAlgorithmMd5MaskOutput struct{ *pulumi.OutputState }

func (SettingSemanticTypeAlgorithmMd5MaskOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SettingSemanticTypeAlgorithmMd5Mask)(nil)).Elem()
}

func (o SettingSemanticTypeAlgorithmMd5MaskOutput) ToSettingSemanticTypeAlgorithmMd5MaskOutput() SettingSemanticTypeAlgorithmMd5MaskOutput {
	return o
}

func (o SettingSemanticTypeAlgorithmMd5MaskOutput) ToSettingSemanticTypeAlgorithmMd5MaskOutputWithContext(ctx context.Context) SettingSemanticTypeAlgorithmMd5MaskOutput {
	return o
}

func (o SettingSemanticTypeAlgorithmMd5MaskOutput) ToSettingSemanticTypeAlgorithmMd5MaskPtrOutput() SettingSemanticTypeAlgorithmMd5MaskPtrOutput {
	return o.ToSettingSemanticTypeAlgorithmMd5MaskPtrOutputWithContext(context.Background())
}

func (o SettingSemanticTypeAlgorithmMd5MaskOutput) ToSettingSemanticTypeAlgorithmMd5MaskPtrOutputWithContext(ctx context.Context) SettingSemanticTypeAlgorithmMd5MaskPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SettingSemanticTypeAlgorithmMd5Mask) *SettingSemanticTypeAlgorithmMd5Mask {
		return &v
	}).(SettingSemanticTypeAlgorithmMd5MaskPtrOutput)
}

// Salt is the salt value to generate a different hash that with the word alone.
func (o SettingSemanticTypeAlgorithmMd5MaskOutput) Salt() pulumi.StringOutput {
	return o.ApplyT(func(v SettingSemanticTypeAlgorithmMd5Mask) string { return v.Salt }).(pulumi.StringOutput)
}

type SettingSemanticTypeAlgorithmMd5MaskPtrOutput struct{ *pulumi.OutputState }

func (SettingSemanticTypeAlgorithmMd5MaskPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SettingSemanticTypeAlgorithmMd5Mask)(nil)).Elem()
}

func (o SettingSemanticTypeAlgorithmMd5MaskPtrOutput) ToSettingSemanticTypeAlgorithmMd5MaskPtrOutput() SettingSemanticTypeAlgorithmMd5MaskPtrOutput {
	return o
}

func (o SettingSemanticTypeAlgorithmMd5MaskPtrOutput) ToSettingSemanticTypeAlgorithmMd5MaskPtrOutputWithContext(ctx context.Context) SettingSemanticTypeAlgorithmMd5MaskPtrOutput {
	return o
}

func (o SettingSemanticTypeAlgorithmMd5MaskPtrOutput) Elem() SettingSemanticTypeAlgorithmMd5MaskOutput {
	return o.ApplyT(func(v *SettingSemanticTypeAlgorithmMd5Mask) SettingSemanticTypeAlgorithmMd5Mask {
		if v != nil {
			return *v
		}
		var ret SettingSemanticTypeAlgorithmMd5Mask
		return ret
	}).(SettingSemanticTypeAlgorithmMd5MaskOutput)
}

// Salt is the salt value to generate a different hash that with the word alone.
func (o SettingSemanticTypeAlgorithmMd5MaskPtrOutput) Salt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SettingSemanticTypeAlgorithmMd5Mask) *string {
		if v == nil {
			return nil
		}
		return &v.Salt
	}).(pulumi.StringPtrOutput)
}

type SettingSemanticTypeAlgorithmRangeMask struct {
	Slices []SettingSemanticTypeAlgorithmRangeMaskSlice `pulumi:"slices"`
}

// SettingSemanticTypeAlgorithmRangeMaskInput is an input type that accepts SettingSemanticTypeAlgorithmRangeMaskArgs and SettingSemanticTypeAlgorithmRangeMaskOutput values.
// You can construct a concrete instance of `SettingSemanticTypeAlgorithmRangeMaskInput` via:
//
//	SettingSemanticTypeAlgorithmRangeMaskArgs{...}
type SettingSemanticTypeAlgorithmRangeMaskInput interface {
	pulumi.Input

	ToSettingSemanticTypeAlgorithmRangeMaskOutput() SettingSemanticTypeAlgorithmRangeMaskOutput
	ToSettingSemanticTypeAlgorithmRangeMaskOutputWithContext(context.Context) SettingSemanticTypeAlgorithmRangeMaskOutput
}

type SettingSemanticTypeAlgorithmRangeMaskArgs struct {
	Slices SettingSemanticTypeAlgorithmRangeMaskSliceArrayInput `pulumi:"slices"`
}

func (SettingSemanticTypeAlgorithmRangeMaskArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SettingSemanticTypeAlgorithmRangeMask)(nil)).Elem()
}

func (i SettingSemanticTypeAlgorithmRangeMaskArgs) ToSettingSemanticTypeAlgorithmRangeMaskOutput() SettingSemanticTypeAlgorithmRangeMaskOutput {
	return i.ToSettingSemanticTypeAlgorithmRangeMaskOutputWithContext(context.Background())
}

func (i SettingSemanticTypeAlgorithmRangeMaskArgs) ToSettingSemanticTypeAlgorithmRangeMaskOutputWithContext(ctx context.Context) SettingSemanticTypeAlgorithmRangeMaskOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SettingSemanticTypeAlgorithmRangeMaskOutput)
}

func (i SettingSemanticTypeAlgorithmRangeMaskArgs) ToSettingSemanticTypeAlgorithmRangeMaskPtrOutput() SettingSemanticTypeAlgorithmRangeMaskPtrOutput {
	return i.ToSettingSemanticTypeAlgorithmRangeMaskPtrOutputWithContext(context.Background())
}

func (i SettingSemanticTypeAlgorithmRangeMaskArgs) ToSettingSemanticTypeAlgorithmRangeMaskPtrOutputWithContext(ctx context.Context) SettingSemanticTypeAlgorithmRangeMaskPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SettingSemanticTypeAlgorithmRangeMaskOutput).ToSettingSemanticTypeAlgorithmRangeMaskPtrOutputWithContext(ctx)
}

// SettingSemanticTypeAlgorithmRangeMaskPtrInput is an input type that accepts SettingSemanticTypeAlgorithmRangeMaskArgs, SettingSemanticTypeAlgorithmRangeMaskPtr and SettingSemanticTypeAlgorithmRangeMaskPtrOutput values.
// You can construct a concrete instance of `SettingSemanticTypeAlgorithmRangeMaskPtrInput` via:
//
//	        SettingSemanticTypeAlgorithmRangeMaskArgs{...}
//
//	or:
//
//	        nil
type SettingSemanticTypeAlgorithmRangeMaskPtrInput interface {
	pulumi.Input

	ToSettingSemanticTypeAlgorithmRangeMaskPtrOutput() SettingSemanticTypeAlgorithmRangeMaskPtrOutput
	ToSettingSemanticTypeAlgorithmRangeMaskPtrOutputWithContext(context.Context) SettingSemanticTypeAlgorithmRangeMaskPtrOutput
}

type settingSemanticTypeAlgorithmRangeMaskPtrType SettingSemanticTypeAlgorithmRangeMaskArgs

func SettingSemanticTypeAlgorithmRangeMaskPtr(v *SettingSemanticTypeAlgorithmRangeMaskArgs) SettingSemanticTypeAlgorithmRangeMaskPtrInput {
	return (*settingSemanticTypeAlgorithmRangeMaskPtrType)(v)
}

func (*settingSemanticTypeAlgorithmRangeMaskPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SettingSemanticTypeAlgorithmRangeMask)(nil)).Elem()
}

func (i *settingSemanticTypeAlgorithmRangeMaskPtrType) ToSettingSemanticTypeAlgorithmRangeMaskPtrOutput() SettingSemanticTypeAlgorithmRangeMaskPtrOutput {
	return i.ToSettingSemanticTypeAlgorithmRangeMaskPtrOutputWithContext(context.Background())
}

func (i *settingSemanticTypeAlgorithmRangeMaskPtrType) ToSettingSemanticTypeAlgorithmRangeMaskPtrOutputWithContext(ctx context.Context) SettingSemanticTypeAlgorithmRangeMaskPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SettingSemanticTypeAlgorithmRangeMaskPtrOutput)
}

type SettingSemanticTypeAlgorithmRangeMaskOutput struct{ *pulumi.OutputState }

func (SettingSemanticTypeAlgorithmRangeMaskOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SettingSemanticTypeAlgorithmRangeMask)(nil)).Elem()
}

func (o SettingSemanticTypeAlgorithmRangeMaskOutput) ToSettingSemanticTypeAlgorithmRangeMaskOutput() SettingSemanticTypeAlgorithmRangeMaskOutput {
	return o
}

func (o SettingSemanticTypeAlgorithmRangeMaskOutput) ToSettingSemanticTypeAlgorithmRangeMaskOutputWithContext(ctx context.Context) SettingSemanticTypeAlgorithmRangeMaskOutput {
	return o
}

func (o SettingSemanticTypeAlgorithmRangeMaskOutput) ToSettingSemanticTypeAlgorithmRangeMaskPtrOutput() SettingSemanticTypeAlgorithmRangeMaskPtrOutput {
	return o.ToSettingSemanticTypeAlgorithmRangeMaskPtrOutputWithContext(context.Background())
}

func (o SettingSemanticTypeAlgorithmRangeMaskOutput) ToSettingSemanticTypeAlgorithmRangeMaskPtrOutputWithContext(ctx context.Context) SettingSemanticTypeAlgorithmRangeMaskPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SettingSemanticTypeAlgorithmRangeMask) *SettingSemanticTypeAlgorithmRangeMask {
		return &v
	}).(SettingSemanticTypeAlgorithmRangeMaskPtrOutput)
}

func (o SettingSemanticTypeAlgorithmRangeMaskOutput) Slices() SettingSemanticTypeAlgorithmRangeMaskSliceArrayOutput {
	return o.ApplyT(func(v SettingSemanticTypeAlgorithmRangeMask) []SettingSemanticTypeAlgorithmRangeMaskSlice {
		return v.Slices
	}).(SettingSemanticTypeAlgorithmRangeMaskSliceArrayOutput)
}

type SettingSemanticTypeAlgorithmRangeMaskPtrOutput struct{ *pulumi.OutputState }

func (SettingSemanticTypeAlgorithmRangeMaskPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SettingSemanticTypeAlgorithmRangeMask)(nil)).Elem()
}

func (o SettingSemanticTypeAlgorithmRangeMaskPtrOutput) ToSettingSemanticTypeAlgorithmRangeMaskPtrOutput() SettingSemanticTypeAlgorithmRangeMaskPtrOutput {
	return o
}

func (o SettingSemanticTypeAlgorithmRangeMaskPtrOutput) ToSettingSemanticTypeAlgorithmRangeMaskPtrOutputWithContext(ctx context.Context) SettingSemanticTypeAlgorithmRangeMaskPtrOutput {
	return o
}

func (o SettingSemanticTypeAlgorithmRangeMaskPtrOutput) Elem() SettingSemanticTypeAlgorithmRangeMaskOutput {
	return o.ApplyT(func(v *SettingSemanticTypeAlgorithmRangeMask) SettingSemanticTypeAlgorithmRangeMask {
		if v != nil {
			return *v
		}
		var ret SettingSemanticTypeAlgorithmRangeMask
		return ret
	}).(SettingSemanticTypeAlgorithmRangeMaskOutput)
}

func (o SettingSemanticTypeAlgorithmRangeMaskPtrOutput) Slices() SettingSemanticTypeAlgorithmRangeMaskSliceArrayOutput {
	return o.ApplyT(func(v *SettingSemanticTypeAlgorithmRangeMask) []SettingSemanticTypeAlgorithmRangeMaskSlice {
		if v == nil {
			return nil
		}
		return v.Slices
	}).(SettingSemanticTypeAlgorithmRangeMaskSliceArrayOutput)
}

type SettingSemanticTypeAlgorithmRangeMaskSlice struct {
	// End is the stop index of the original value, should be less than the length of the original value.
	End int `pulumi:"end"`
	// Start is the start index of the original value, start from 0 and should be less than stop.
	Start int `pulumi:"start"`
	// Substitution is the string used to replace the OriginalValue[start:end).
	Substitution string `pulumi:"substitution"`
}

// SettingSemanticTypeAlgorithmRangeMaskSliceInput is an input type that accepts SettingSemanticTypeAlgorithmRangeMaskSliceArgs and SettingSemanticTypeAlgorithmRangeMaskSliceOutput values.
// You can construct a concrete instance of `SettingSemanticTypeAlgorithmRangeMaskSliceInput` via:
//
//	SettingSemanticTypeAlgorithmRangeMaskSliceArgs{...}
type SettingSemanticTypeAlgorithmRangeMaskSliceInput interface {
	pulumi.Input

	ToSettingSemanticTypeAlgorithmRangeMaskSliceOutput() SettingSemanticTypeAlgorithmRangeMaskSliceOutput
	ToSettingSemanticTypeAlgorithmRangeMaskSliceOutputWithContext(context.Context) SettingSemanticTypeAlgorithmRangeMaskSliceOutput
}

type SettingSemanticTypeAlgorithmRangeMaskSliceArgs struct {
	// End is the stop index of the original value, should be less than the length of the original value.
	End pulumi.IntInput `pulumi:"end"`
	// Start is the start index of the original value, start from 0 and should be less than stop.
	Start pulumi.IntInput `pulumi:"start"`
	// Substitution is the string used to replace the OriginalValue[start:end).
	Substitution pulumi.StringInput `pulumi:"substitution"`
}

func (SettingSemanticTypeAlgorithmRangeMaskSliceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SettingSemanticTypeAlgorithmRangeMaskSlice)(nil)).Elem()
}

func (i SettingSemanticTypeAlgorithmRangeMaskSliceArgs) ToSettingSemanticTypeAlgorithmRangeMaskSliceOutput() SettingSemanticTypeAlgorithmRangeMaskSliceOutput {
	return i.ToSettingSemanticTypeAlgorithmRangeMaskSliceOutputWithContext(context.Background())
}

func (i SettingSemanticTypeAlgorithmRangeMaskSliceArgs) ToSettingSemanticTypeAlgorithmRangeMaskSliceOutputWithContext(ctx context.Context) SettingSemanticTypeAlgorithmRangeMaskSliceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SettingSemanticTypeAlgorithmRangeMaskSliceOutput)
}

// SettingSemanticTypeAlgorithmRangeMaskSliceArrayInput is an input type that accepts SettingSemanticTypeAlgorithmRangeMaskSliceArray and SettingSemanticTypeAlgorithmRangeMaskSliceArrayOutput values.
// You can construct a concrete instance of `SettingSemanticTypeAlgorithmRangeMaskSliceArrayInput` via:
//
//	SettingSemanticTypeAlgorithmRangeMaskSliceArray{ SettingSemanticTypeAlgorithmRangeMaskSliceArgs{...} }
type SettingSemanticTypeAlgorithmRangeMaskSliceArrayInput interface {
	pulumi.Input

	ToSettingSemanticTypeAlgorithmRangeMaskSliceArrayOutput() SettingSemanticTypeAlgorithmRangeMaskSliceArrayOutput
	ToSettingSemanticTypeAlgorithmRangeMaskSliceArrayOutputWithContext(context.Context) SettingSemanticTypeAlgorithmRangeMaskSliceArrayOutput
}

type SettingSemanticTypeAlgorithmRangeMaskSliceArray []SettingSemanticTypeAlgorithmRangeMaskSliceInput

func (SettingSemanticTypeAlgorithmRangeMaskSliceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SettingSemanticTypeAlgorithmRangeMaskSlice)(nil)).Elem()
}

func (i SettingSemanticTypeAlgorithmRangeMaskSliceArray) ToSettingSemanticTypeAlgorithmRangeMaskSliceArrayOutput() SettingSemanticTypeAlgorithmRangeMaskSliceArrayOutput {
	return i.ToSettingSemanticTypeAlgorithmRangeMaskSliceArrayOutputWithContext(context.Background())
}

func (i SettingSemanticTypeAlgorithmRangeMaskSliceArray) ToSettingSemanticTypeAlgorithmRangeMaskSliceArrayOutputWithContext(ctx context.Context) SettingSemanticTypeAlgorithmRangeMaskSliceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SettingSemanticTypeAlgorithmRangeMaskSliceArrayOutput)
}

type SettingSemanticTypeAlgorithmRangeMaskSliceOutput struct{ *pulumi.OutputState }

func (SettingSemanticTypeAlgorithmRangeMaskSliceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SettingSemanticTypeAlgorithmRangeMaskSlice)(nil)).Elem()
}

func (o SettingSemanticTypeAlgorithmRangeMaskSliceOutput) ToSettingSemanticTypeAlgorithmRangeMaskSliceOutput() SettingSemanticTypeAlgorithmRangeMaskSliceOutput {
	return o
}

func (o SettingSemanticTypeAlgorithmRangeMaskSliceOutput) ToSettingSemanticTypeAlgorithmRangeMaskSliceOutputWithContext(ctx context.Context) SettingSemanticTypeAlgorithmRangeMaskSliceOutput {
	return o
}

// End is the stop index of the original value, should be less than the length of the original value.
func (o SettingSemanticTypeAlgorithmRangeMaskSliceOutput) End() pulumi.IntOutput {
	return o.ApplyT(func(v SettingSemanticTypeAlgorithmRangeMaskSlice) int { return v.End }).(pulumi.IntOutput)
}

// Start is the start index of the original value, start from 0 and should be less than stop.
func (o SettingSemanticTypeAlgorithmRangeMaskSliceOutput) Start() pulumi.IntOutput {
	return o.ApplyT(func(v SettingSemanticTypeAlgorithmRangeMaskSlice) int { return v.Start }).(pulumi.IntOutput)
}

// Substitution is the string used to replace the OriginalValue[start:end).
func (o SettingSemanticTypeAlgorithmRangeMaskSliceOutput) Substitution() pulumi.StringOutput {
	return o.ApplyT(func(v SettingSemanticTypeAlgorithmRangeMaskSlice) string { return v.Substitution }).(pulumi.StringOutput)
}

type SettingSemanticTypeAlgorithmRangeMaskSliceArrayOutput struct{ *pulumi.OutputState }

func (SettingSemanticTypeAlgorithmRangeMaskSliceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SettingSemanticTypeAlgorithmRangeMaskSlice)(nil)).Elem()
}

func (o SettingSemanticTypeAlgorithmRangeMaskSliceArrayOutput) ToSettingSemanticTypeAlgorithmRangeMaskSliceArrayOutput() SettingSemanticTypeAlgorithmRangeMaskSliceArrayOutput {
	return o
}

func (o SettingSemanticTypeAlgorithmRangeMaskSliceArrayOutput) ToSettingSemanticTypeAlgorithmRangeMaskSliceArrayOutputWithContext(ctx context.Context) SettingSemanticTypeAlgorithmRangeMaskSliceArrayOutput {
	return o
}

func (o SettingSemanticTypeAlgorithmRangeMaskSliceArrayOutput) Index(i pulumi.IntInput) SettingSemanticTypeAlgorithmRangeMaskSliceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SettingSemanticTypeAlgorithmRangeMaskSlice {
		return vs[0].([]SettingSemanticTypeAlgorithmRangeMaskSlice)[vs[1].(int)]
	}).(SettingSemanticTypeAlgorithmRangeMaskSliceOutput)
}

type SettingSqlQueryRestriction struct {
	// The return rows limit. If the value <= 0, will be treated as no limit. The default value is -1.
	MaximumResultRows *int `pulumi:"maximumResultRows"`
	// The size limit in bytes. The default value is 100MB, we will use the default value if the setting not exists, or the limit <= 0.
	MaximumResultSize *int `pulumi:"maximumResultSize"`
}

// SettingSqlQueryRestrictionInput is an input type that accepts SettingSqlQueryRestrictionArgs and SettingSqlQueryRestrictionOutput values.
// You can construct a concrete instance of `SettingSqlQueryRestrictionInput` via:
//
//	SettingSqlQueryRestrictionArgs{...}
type SettingSqlQueryRestrictionInput interface {
	pulumi.Input

	ToSettingSqlQueryRestrictionOutput() SettingSqlQueryRestrictionOutput
	ToSettingSqlQueryRestrictionOutputWithContext(context.Context) SettingSqlQueryRestrictionOutput
}

type SettingSqlQueryRestrictionArgs struct {
	// The return rows limit. If the value <= 0, will be treated as no limit. The default value is -1.
	MaximumResultRows pulumi.IntPtrInput `pulumi:"maximumResultRows"`
	// The size limit in bytes. The default value is 100MB, we will use the default value if the setting not exists, or the limit <= 0.
	MaximumResultSize pulumi.IntPtrInput `pulumi:"maximumResultSize"`
}

func (SettingSqlQueryRestrictionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SettingSqlQueryRestriction)(nil)).Elem()
}

func (i SettingSqlQueryRestrictionArgs) ToSettingSqlQueryRestrictionOutput() SettingSqlQueryRestrictionOutput {
	return i.ToSettingSqlQueryRestrictionOutputWithContext(context.Background())
}

func (i SettingSqlQueryRestrictionArgs) ToSettingSqlQueryRestrictionOutputWithContext(ctx context.Context) SettingSqlQueryRestrictionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SettingSqlQueryRestrictionOutput)
}

func (i SettingSqlQueryRestrictionArgs) ToSettingSqlQueryRestrictionPtrOutput() SettingSqlQueryRestrictionPtrOutput {
	return i.ToSettingSqlQueryRestrictionPtrOutputWithContext(context.Background())
}

func (i SettingSqlQueryRestrictionArgs) ToSettingSqlQueryRestrictionPtrOutputWithContext(ctx context.Context) SettingSqlQueryRestrictionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SettingSqlQueryRestrictionOutput).ToSettingSqlQueryRestrictionPtrOutputWithContext(ctx)
}

// SettingSqlQueryRestrictionPtrInput is an input type that accepts SettingSqlQueryRestrictionArgs, SettingSqlQueryRestrictionPtr and SettingSqlQueryRestrictionPtrOutput values.
// You can construct a concrete instance of `SettingSqlQueryRestrictionPtrInput` via:
//
//	        SettingSqlQueryRestrictionArgs{...}
//
//	or:
//
//	        nil
type SettingSqlQueryRestrictionPtrInput interface {
	pulumi.Input

	ToSettingSqlQueryRestrictionPtrOutput() SettingSqlQueryRestrictionPtrOutput
	ToSettingSqlQueryRestrictionPtrOutputWithContext(context.Context) SettingSqlQueryRestrictionPtrOutput
}

type settingSqlQueryRestrictionPtrType SettingSqlQueryRestrictionArgs

func SettingSqlQueryRestrictionPtr(v *SettingSqlQueryRestrictionArgs) SettingSqlQueryRestrictionPtrInput {
	return (*settingSqlQueryRestrictionPtrType)(v)
}

func (*settingSqlQueryRestrictionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SettingSqlQueryRestriction)(nil)).Elem()
}

func (i *settingSqlQueryRestrictionPtrType) ToSettingSqlQueryRestrictionPtrOutput() SettingSqlQueryRestrictionPtrOutput {
	return i.ToSettingSqlQueryRestrictionPtrOutputWithContext(context.Background())
}

func (i *settingSqlQueryRestrictionPtrType) ToSettingSqlQueryRestrictionPtrOutputWithContext(ctx context.Context) SettingSqlQueryRestrictionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SettingSqlQueryRestrictionPtrOutput)
}

type SettingSqlQueryRestrictionOutput struct{ *pulumi.OutputState }

func (SettingSqlQueryRestrictionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SettingSqlQueryRestriction)(nil)).Elem()
}

func (o SettingSqlQueryRestrictionOutput) ToSettingSqlQueryRestrictionOutput() SettingSqlQueryRestrictionOutput {
	return o
}

func (o SettingSqlQueryRestrictionOutput) ToSettingSqlQueryRestrictionOutputWithContext(ctx context.Context) SettingSqlQueryRestrictionOutput {
	return o
}

func (o SettingSqlQueryRestrictionOutput) ToSettingSqlQueryRestrictionPtrOutput() SettingSqlQueryRestrictionPtrOutput {
	return o.ToSettingSqlQueryRestrictionPtrOutputWithContext(context.Background())
}

func (o SettingSqlQueryRestrictionOutput) ToSettingSqlQueryRestrictionPtrOutputWithContext(ctx context.Context) SettingSqlQueryRestrictionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SettingSqlQueryRestriction) *SettingSqlQueryRestriction {
		return &v
	}).(SettingSqlQueryRestrictionPtrOutput)
}

// The return rows limit. If the value <= 0, will be treated as no limit. The default value is -1.
func (o SettingSqlQueryRestrictionOutput) MaximumResultRows() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SettingSqlQueryRestriction) *int { return v.MaximumResultRows }).(pulumi.IntPtrOutput)
}

// The size limit in bytes. The default value is 100MB, we will use the default value if the setting not exists, or the limit <= 0.
func (o SettingSqlQueryRestrictionOutput) MaximumResultSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SettingSqlQueryRestriction) *int { return v.MaximumResultSize }).(pulumi.IntPtrOutput)
}

type SettingSqlQueryRestrictionPtrOutput struct{ *pulumi.OutputState }

func (SettingSqlQueryRestrictionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SettingSqlQueryRestriction)(nil)).Elem()
}

func (o SettingSqlQueryRestrictionPtrOutput) ToSettingSqlQueryRestrictionPtrOutput() SettingSqlQueryRestrictionPtrOutput {
	return o
}

func (o SettingSqlQueryRestrictionPtrOutput) ToSettingSqlQueryRestrictionPtrOutputWithContext(ctx context.Context) SettingSqlQueryRestrictionPtrOutput {
	return o
}

func (o SettingSqlQueryRestrictionPtrOutput) Elem() SettingSqlQueryRestrictionOutput {
	return o.ApplyT(func(v *SettingSqlQueryRestriction) SettingSqlQueryRestriction {
		if v != nil {
			return *v
		}
		var ret SettingSqlQueryRestriction
		return ret
	}).(SettingSqlQueryRestrictionOutput)
}

// The return rows limit. If the value <= 0, will be treated as no limit. The default value is -1.
func (o SettingSqlQueryRestrictionPtrOutput) MaximumResultRows() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SettingSqlQueryRestriction) *int {
		if v == nil {
			return nil
		}
		return v.MaximumResultRows
	}).(pulumi.IntPtrOutput)
}

// The size limit in bytes. The default value is 100MB, we will use the default value if the setting not exists, or the limit <= 0.
func (o SettingSqlQueryRestrictionPtrOutput) MaximumResultSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SettingSqlQueryRestriction) *int {
		if v == nil {
			return nil
		}
		return v.MaximumResultSize
	}).(pulumi.IntPtrOutput)
}

type SettingWorkspaceProfile struct {
	// Custom announcement. Will show as a banner in the Bytebase UI. Require ENTERPRISE subscription.
	Announcement *SettingWorkspaceProfileAnnouncement `pulumi:"announcement"`
	// The workspace database change mode, support EDITOR or PIPELINE. Default PIPELINE
	DatabaseChangeMode *string `pulumi:"databaseChangeMode"`
	// Whether to disallow password signin (except workspace admins). Require ENTERPRISE subscription
	DisallowPasswordSignin *bool `pulumi:"disallowPasswordSignin"`
	// Disallow self-service signup, users can only be invited by the owner. Require PRO subscription.
	DisallowSignup *bool `pulumi:"disallowSignup"`
	// The workspace domain, e.g. bytebase.com. Required for the group
	Domains []string `pulumi:"domains"`
	// Only user and group from the domains can be created and login.
	EnforceIdentityDomain *bool `pulumi:"enforceIdentityDomain"`
	// The URL user visits Bytebase. The external URL is used for: 1. Constructing the correct callback URL when configuring the VCS provider. The callback URL points to the frontend; 2. Creating the correct webhook endpoint when configuring the project GitOps workflow. The webhook endpoint points to the backend.
	ExternalUrl *string `pulumi:"externalUrl"`
	// The max duration in seconds for role expired. If the value is less than or equal to 0, we will remove the setting. AKA no limit.
	MaximumRoleExpirationInSeconds *int `pulumi:"maximumRoleExpirationInSeconds"`
	// The duration for login token in seconds. The duration should be at least 3600 (one hour).
	TokenDurationInSeconds *int `pulumi:"tokenDurationInSeconds"`
}

// SettingWorkspaceProfileInput is an input type that accepts SettingWorkspaceProfileArgs and SettingWorkspaceProfileOutput values.
// You can construct a concrete instance of `SettingWorkspaceProfileInput` via:
//
//	SettingWorkspaceProfileArgs{...}
type SettingWorkspaceProfileInput interface {
	pulumi.Input

	ToSettingWorkspaceProfileOutput() SettingWorkspaceProfileOutput
	ToSettingWorkspaceProfileOutputWithContext(context.Context) SettingWorkspaceProfileOutput
}

type SettingWorkspaceProfileArgs struct {
	// Custom announcement. Will show as a banner in the Bytebase UI. Require ENTERPRISE subscription.
	Announcement SettingWorkspaceProfileAnnouncementPtrInput `pulumi:"announcement"`
	// The workspace database change mode, support EDITOR or PIPELINE. Default PIPELINE
	DatabaseChangeMode pulumi.StringPtrInput `pulumi:"databaseChangeMode"`
	// Whether to disallow password signin (except workspace admins). Require ENTERPRISE subscription
	DisallowPasswordSignin pulumi.BoolPtrInput `pulumi:"disallowPasswordSignin"`
	// Disallow self-service signup, users can only be invited by the owner. Require PRO subscription.
	DisallowSignup pulumi.BoolPtrInput `pulumi:"disallowSignup"`
	// The workspace domain, e.g. bytebase.com. Required for the group
	Domains pulumi.StringArrayInput `pulumi:"domains"`
	// Only user and group from the domains can be created and login.
	EnforceIdentityDomain pulumi.BoolPtrInput `pulumi:"enforceIdentityDomain"`
	// The URL user visits Bytebase. The external URL is used for: 1. Constructing the correct callback URL when configuring the VCS provider. The callback URL points to the frontend; 2. Creating the correct webhook endpoint when configuring the project GitOps workflow. The webhook endpoint points to the backend.
	ExternalUrl pulumi.StringPtrInput `pulumi:"externalUrl"`
	// The max duration in seconds for role expired. If the value is less than or equal to 0, we will remove the setting. AKA no limit.
	MaximumRoleExpirationInSeconds pulumi.IntPtrInput `pulumi:"maximumRoleExpirationInSeconds"`
	// The duration for login token in seconds. The duration should be at least 3600 (one hour).
	TokenDurationInSeconds pulumi.IntPtrInput `pulumi:"tokenDurationInSeconds"`
}

func (SettingWorkspaceProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SettingWorkspaceProfile)(nil)).Elem()
}

func (i SettingWorkspaceProfileArgs) ToSettingWorkspaceProfileOutput() SettingWorkspaceProfileOutput {
	return i.ToSettingWorkspaceProfileOutputWithContext(context.Background())
}

func (i SettingWorkspaceProfileArgs) ToSettingWorkspaceProfileOutputWithContext(ctx context.Context) SettingWorkspaceProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SettingWorkspaceProfileOutput)
}

func (i SettingWorkspaceProfileArgs) ToSettingWorkspaceProfilePtrOutput() SettingWorkspaceProfilePtrOutput {
	return i.ToSettingWorkspaceProfilePtrOutputWithContext(context.Background())
}

func (i SettingWorkspaceProfileArgs) ToSettingWorkspaceProfilePtrOutputWithContext(ctx context.Context) SettingWorkspaceProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SettingWorkspaceProfileOutput).ToSettingWorkspaceProfilePtrOutputWithContext(ctx)
}

// SettingWorkspaceProfilePtrInput is an input type that accepts SettingWorkspaceProfileArgs, SettingWorkspaceProfilePtr and SettingWorkspaceProfilePtrOutput values.
// You can construct a concrete instance of `SettingWorkspaceProfilePtrInput` via:
//
//	        SettingWorkspaceProfileArgs{...}
//
//	or:
//
//	        nil
type SettingWorkspaceProfilePtrInput interface {
	pulumi.Input

	ToSettingWorkspaceProfilePtrOutput() SettingWorkspaceProfilePtrOutput
	ToSettingWorkspaceProfilePtrOutputWithContext(context.Context) SettingWorkspaceProfilePtrOutput
}

type settingWorkspaceProfilePtrType SettingWorkspaceProfileArgs

func SettingWorkspaceProfilePtr(v *SettingWorkspaceProfileArgs) SettingWorkspaceProfilePtrInput {
	return (*settingWorkspaceProfilePtrType)(v)
}

func (*settingWorkspaceProfilePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SettingWorkspaceProfile)(nil)).Elem()
}

func (i *settingWorkspaceProfilePtrType) ToSettingWorkspaceProfilePtrOutput() SettingWorkspaceProfilePtrOutput {
	return i.ToSettingWorkspaceProfilePtrOutputWithContext(context.Background())
}

func (i *settingWorkspaceProfilePtrType) ToSettingWorkspaceProfilePtrOutputWithContext(ctx context.Context) SettingWorkspaceProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SettingWorkspaceProfilePtrOutput)
}

type SettingWorkspaceProfileOutput struct{ *pulumi.OutputState }

func (SettingWorkspaceProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SettingWorkspaceProfile)(nil)).Elem()
}

func (o SettingWorkspaceProfileOutput) ToSettingWorkspaceProfileOutput() SettingWorkspaceProfileOutput {
	return o
}

func (o SettingWorkspaceProfileOutput) ToSettingWorkspaceProfileOutputWithContext(ctx context.Context) SettingWorkspaceProfileOutput {
	return o
}

func (o SettingWorkspaceProfileOutput) ToSettingWorkspaceProfilePtrOutput() SettingWorkspaceProfilePtrOutput {
	return o.ToSettingWorkspaceProfilePtrOutputWithContext(context.Background())
}

func (o SettingWorkspaceProfileOutput) ToSettingWorkspaceProfilePtrOutputWithContext(ctx context.Context) SettingWorkspaceProfilePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SettingWorkspaceProfile) *SettingWorkspaceProfile {
		return &v
	}).(SettingWorkspaceProfilePtrOutput)
}

// Custom announcement. Will show as a banner in the Bytebase UI. Require ENTERPRISE subscription.
func (o SettingWorkspaceProfileOutput) Announcement() SettingWorkspaceProfileAnnouncementPtrOutput {
	return o.ApplyT(func(v SettingWorkspaceProfile) *SettingWorkspaceProfileAnnouncement { return v.Announcement }).(SettingWorkspaceProfileAnnouncementPtrOutput)
}

// The workspace database change mode, support EDITOR or PIPELINE. Default PIPELINE
func (o SettingWorkspaceProfileOutput) DatabaseChangeMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SettingWorkspaceProfile) *string { return v.DatabaseChangeMode }).(pulumi.StringPtrOutput)
}

// Whether to disallow password signin (except workspace admins). Require ENTERPRISE subscription
func (o SettingWorkspaceProfileOutput) DisallowPasswordSignin() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SettingWorkspaceProfile) *bool { return v.DisallowPasswordSignin }).(pulumi.BoolPtrOutput)
}

// Disallow self-service signup, users can only be invited by the owner. Require PRO subscription.
func (o SettingWorkspaceProfileOutput) DisallowSignup() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SettingWorkspaceProfile) *bool { return v.DisallowSignup }).(pulumi.BoolPtrOutput)
}

// The workspace domain, e.g. bytebase.com. Required for the group
func (o SettingWorkspaceProfileOutput) Domains() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SettingWorkspaceProfile) []string { return v.Domains }).(pulumi.StringArrayOutput)
}

// Only user and group from the domains can be created and login.
func (o SettingWorkspaceProfileOutput) EnforceIdentityDomain() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SettingWorkspaceProfile) *bool { return v.EnforceIdentityDomain }).(pulumi.BoolPtrOutput)
}

// The URL user visits Bytebase. The external URL is used for: 1. Constructing the correct callback URL when configuring the VCS provider. The callback URL points to the frontend; 2. Creating the correct webhook endpoint when configuring the project GitOps workflow. The webhook endpoint points to the backend.
func (o SettingWorkspaceProfileOutput) ExternalUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SettingWorkspaceProfile) *string { return v.ExternalUrl }).(pulumi.StringPtrOutput)
}

// The max duration in seconds for role expired. If the value is less than or equal to 0, we will remove the setting. AKA no limit.
func (o SettingWorkspaceProfileOutput) MaximumRoleExpirationInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SettingWorkspaceProfile) *int { return v.MaximumRoleExpirationInSeconds }).(pulumi.IntPtrOutput)
}

// The duration for login token in seconds. The duration should be at least 3600 (one hour).
func (o SettingWorkspaceProfileOutput) TokenDurationInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SettingWorkspaceProfile) *int { return v.TokenDurationInSeconds }).(pulumi.IntPtrOutput)
}

type SettingWorkspaceProfilePtrOutput struct{ *pulumi.OutputState }

func (SettingWorkspaceProfilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SettingWorkspaceProfile)(nil)).Elem()
}

func (o SettingWorkspaceProfilePtrOutput) ToSettingWorkspaceProfilePtrOutput() SettingWorkspaceProfilePtrOutput {
	return o
}

func (o SettingWorkspaceProfilePtrOutput) ToSettingWorkspaceProfilePtrOutputWithContext(ctx context.Context) SettingWorkspaceProfilePtrOutput {
	return o
}

func (o SettingWorkspaceProfilePtrOutput) Elem() SettingWorkspaceProfileOutput {
	return o.ApplyT(func(v *SettingWorkspaceProfile) SettingWorkspaceProfile {
		if v != nil {
			return *v
		}
		var ret SettingWorkspaceProfile
		return ret
	}).(SettingWorkspaceProfileOutput)
}

// Custom announcement. Will show as a banner in the Bytebase UI. Require ENTERPRISE subscription.
func (o SettingWorkspaceProfilePtrOutput) Announcement() SettingWorkspaceProfileAnnouncementPtrOutput {
	return o.ApplyT(func(v *SettingWorkspaceProfile) *SettingWorkspaceProfileAnnouncement {
		if v == nil {
			return nil
		}
		return v.Announcement
	}).(SettingWorkspaceProfileAnnouncementPtrOutput)
}

// The workspace database change mode, support EDITOR or PIPELINE. Default PIPELINE
func (o SettingWorkspaceProfilePtrOutput) DatabaseChangeMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SettingWorkspaceProfile) *string {
		if v == nil {
			return nil
		}
		return v.DatabaseChangeMode
	}).(pulumi.StringPtrOutput)
}

// Whether to disallow password signin (except workspace admins). Require ENTERPRISE subscription
func (o SettingWorkspaceProfilePtrOutput) DisallowPasswordSignin() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SettingWorkspaceProfile) *bool {
		if v == nil {
			return nil
		}
		return v.DisallowPasswordSignin
	}).(pulumi.BoolPtrOutput)
}

// Disallow self-service signup, users can only be invited by the owner. Require PRO subscription.
func (o SettingWorkspaceProfilePtrOutput) DisallowSignup() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SettingWorkspaceProfile) *bool {
		if v == nil {
			return nil
		}
		return v.DisallowSignup
	}).(pulumi.BoolPtrOutput)
}

// The workspace domain, e.g. bytebase.com. Required for the group
func (o SettingWorkspaceProfilePtrOutput) Domains() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SettingWorkspaceProfile) []string {
		if v == nil {
			return nil
		}
		return v.Domains
	}).(pulumi.StringArrayOutput)
}

// Only user and group from the domains can be created and login.
func (o SettingWorkspaceProfilePtrOutput) EnforceIdentityDomain() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SettingWorkspaceProfile) *bool {
		if v == nil {
			return nil
		}
		return v.EnforceIdentityDomain
	}).(pulumi.BoolPtrOutput)
}

// The URL user visits Bytebase. The external URL is used for: 1. Constructing the correct callback URL when configuring the VCS provider. The callback URL points to the frontend; 2. Creating the correct webhook endpoint when configuring the project GitOps workflow. The webhook endpoint points to the backend.
func (o SettingWorkspaceProfilePtrOutput) ExternalUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SettingWorkspaceProfile) *string {
		if v == nil {
			return nil
		}
		return v.ExternalUrl
	}).(pulumi.StringPtrOutput)
}

// The max duration in seconds for role expired. If the value is less than or equal to 0, we will remove the setting. AKA no limit.
func (o SettingWorkspaceProfilePtrOutput) MaximumRoleExpirationInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SettingWorkspaceProfile) *int {
		if v == nil {
			return nil
		}
		return v.MaximumRoleExpirationInSeconds
	}).(pulumi.IntPtrOutput)
}

// The duration for login token in seconds. The duration should be at least 3600 (one hour).
func (o SettingWorkspaceProfilePtrOutput) TokenDurationInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SettingWorkspaceProfile) *int {
		if v == nil {
			return nil
		}
		return v.TokenDurationInSeconds
	}).(pulumi.IntPtrOutput)
}

type SettingWorkspaceProfileAnnouncement struct {
	// The alert level of announcement
	Level string `pulumi:"level"`
	// The optional link, user can follow the link to check extra details
	Link *string `pulumi:"link"`
	// The text of announcement. Leave it as empty string can clear the announcement
	Text string `pulumi:"text"`
}

// SettingWorkspaceProfileAnnouncementInput is an input type that accepts SettingWorkspaceProfileAnnouncementArgs and SettingWorkspaceProfileAnnouncementOutput values.
// You can construct a concrete instance of `SettingWorkspaceProfileAnnouncementInput` via:
//
//	SettingWorkspaceProfileAnnouncementArgs{...}
type SettingWorkspaceProfileAnnouncementInput interface {
	pulumi.Input

	ToSettingWorkspaceProfileAnnouncementOutput() SettingWorkspaceProfileAnnouncementOutput
	ToSettingWorkspaceProfileAnnouncementOutputWithContext(context.Context) SettingWorkspaceProfileAnnouncementOutput
}

type SettingWorkspaceProfileAnnouncementArgs struct {
	// The alert level of announcement
	Level pulumi.StringInput `pulumi:"level"`
	// The optional link, user can follow the link to check extra details
	Link pulumi.StringPtrInput `pulumi:"link"`
	// The text of announcement. Leave it as empty string can clear the announcement
	Text pulumi.StringInput `pulumi:"text"`
}

func (SettingWorkspaceProfileAnnouncementArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SettingWorkspaceProfileAnnouncement)(nil)).Elem()
}

func (i SettingWorkspaceProfileAnnouncementArgs) ToSettingWorkspaceProfileAnnouncementOutput() SettingWorkspaceProfileAnnouncementOutput {
	return i.ToSettingWorkspaceProfileAnnouncementOutputWithContext(context.Background())
}

func (i SettingWorkspaceProfileAnnouncementArgs) ToSettingWorkspaceProfileAnnouncementOutputWithContext(ctx context.Context) SettingWorkspaceProfileAnnouncementOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SettingWorkspaceProfileAnnouncementOutput)
}

func (i SettingWorkspaceProfileAnnouncementArgs) ToSettingWorkspaceProfileAnnouncementPtrOutput() SettingWorkspaceProfileAnnouncementPtrOutput {
	return i.ToSettingWorkspaceProfileAnnouncementPtrOutputWithContext(context.Background())
}

func (i SettingWorkspaceProfileAnnouncementArgs) ToSettingWorkspaceProfileAnnouncementPtrOutputWithContext(ctx context.Context) SettingWorkspaceProfileAnnouncementPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SettingWorkspaceProfileAnnouncementOutput).ToSettingWorkspaceProfileAnnouncementPtrOutputWithContext(ctx)
}

// SettingWorkspaceProfileAnnouncementPtrInput is an input type that accepts SettingWorkspaceProfileAnnouncementArgs, SettingWorkspaceProfileAnnouncementPtr and SettingWorkspaceProfileAnnouncementPtrOutput values.
// You can construct a concrete instance of `SettingWorkspaceProfileAnnouncementPtrInput` via:
//
//	        SettingWorkspaceProfileAnnouncementArgs{...}
//
//	or:
//
//	        nil
type SettingWorkspaceProfileAnnouncementPtrInput interface {
	pulumi.Input

	ToSettingWorkspaceProfileAnnouncementPtrOutput() SettingWorkspaceProfileAnnouncementPtrOutput
	ToSettingWorkspaceProfileAnnouncementPtrOutputWithContext(context.Context) SettingWorkspaceProfileAnnouncementPtrOutput
}

type settingWorkspaceProfileAnnouncementPtrType SettingWorkspaceProfileAnnouncementArgs

func SettingWorkspaceProfileAnnouncementPtr(v *SettingWorkspaceProfileAnnouncementArgs) SettingWorkspaceProfileAnnouncementPtrInput {
	return (*settingWorkspaceProfileAnnouncementPtrType)(v)
}

func (*settingWorkspaceProfileAnnouncementPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SettingWorkspaceProfileAnnouncement)(nil)).Elem()
}

func (i *settingWorkspaceProfileAnnouncementPtrType) ToSettingWorkspaceProfileAnnouncementPtrOutput() SettingWorkspaceProfileAnnouncementPtrOutput {
	return i.ToSettingWorkspaceProfileAnnouncementPtrOutputWithContext(context.Background())
}

func (i *settingWorkspaceProfileAnnouncementPtrType) ToSettingWorkspaceProfileAnnouncementPtrOutputWithContext(ctx context.Context) SettingWorkspaceProfileAnnouncementPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SettingWorkspaceProfileAnnouncementPtrOutput)
}

type SettingWorkspaceProfileAnnouncementOutput struct{ *pulumi.OutputState }

func (SettingWorkspaceProfileAnnouncementOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SettingWorkspaceProfileAnnouncement)(nil)).Elem()
}

func (o SettingWorkspaceProfileAnnouncementOutput) ToSettingWorkspaceProfileAnnouncementOutput() SettingWorkspaceProfileAnnouncementOutput {
	return o
}

func (o SettingWorkspaceProfileAnnouncementOutput) ToSettingWorkspaceProfileAnnouncementOutputWithContext(ctx context.Context) SettingWorkspaceProfileAnnouncementOutput {
	return o
}

func (o SettingWorkspaceProfileAnnouncementOutput) ToSettingWorkspaceProfileAnnouncementPtrOutput() SettingWorkspaceProfileAnnouncementPtrOutput {
	return o.ToSettingWorkspaceProfileAnnouncementPtrOutputWithContext(context.Background())
}

func (o SettingWorkspaceProfileAnnouncementOutput) ToSettingWorkspaceProfileAnnouncementPtrOutputWithContext(ctx context.Context) SettingWorkspaceProfileAnnouncementPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SettingWorkspaceProfileAnnouncement) *SettingWorkspaceProfileAnnouncement {
		return &v
	}).(SettingWorkspaceProfileAnnouncementPtrOutput)
}

// The alert level of announcement
func (o SettingWorkspaceProfileAnnouncementOutput) Level() pulumi.StringOutput {
	return o.ApplyT(func(v SettingWorkspaceProfileAnnouncement) string { return v.Level }).(pulumi.StringOutput)
}

// The optional link, user can follow the link to check extra details
func (o SettingWorkspaceProfileAnnouncementOutput) Link() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SettingWorkspaceProfileAnnouncement) *string { return v.Link }).(pulumi.StringPtrOutput)
}

// The text of announcement. Leave it as empty string can clear the announcement
func (o SettingWorkspaceProfileAnnouncementOutput) Text() pulumi.StringOutput {
	return o.ApplyT(func(v SettingWorkspaceProfileAnnouncement) string { return v.Text }).(pulumi.StringOutput)
}

type SettingWorkspaceProfileAnnouncementPtrOutput struct{ *pulumi.OutputState }

func (SettingWorkspaceProfileAnnouncementPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SettingWorkspaceProfileAnnouncement)(nil)).Elem()
}

func (o SettingWorkspaceProfileAnnouncementPtrOutput) ToSettingWorkspaceProfileAnnouncementPtrOutput() SettingWorkspaceProfileAnnouncementPtrOutput {
	return o
}

func (o SettingWorkspaceProfileAnnouncementPtrOutput) ToSettingWorkspaceProfileAnnouncementPtrOutputWithContext(ctx context.Context) SettingWorkspaceProfileAnnouncementPtrOutput {
	return o
}

func (o SettingWorkspaceProfileAnnouncementPtrOutput) Elem() SettingWorkspaceProfileAnnouncementOutput {
	return o.ApplyT(func(v *SettingWorkspaceProfileAnnouncement) SettingWorkspaceProfileAnnouncement {
		if v != nil {
			return *v
		}
		var ret SettingWorkspaceProfileAnnouncement
		return ret
	}).(SettingWorkspaceProfileAnnouncementOutput)
}

// The alert level of announcement
func (o SettingWorkspaceProfileAnnouncementPtrOutput) Level() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SettingWorkspaceProfileAnnouncement) *string {
		if v == nil {
			return nil
		}
		return &v.Level
	}).(pulumi.StringPtrOutput)
}

// The optional link, user can follow the link to check extra details
func (o SettingWorkspaceProfileAnnouncementPtrOutput) Link() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SettingWorkspaceProfileAnnouncement) *string {
		if v == nil {
			return nil
		}
		return v.Link
	}).(pulumi.StringPtrOutput)
}

// The text of announcement. Leave it as empty string can clear the announcement
func (o SettingWorkspaceProfileAnnouncementPtrOutput) Text() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SettingWorkspaceProfileAnnouncement) *string {
		if v == nil {
			return nil
		}
		return &v.Text
	}).(pulumi.StringPtrOutput)
}

type GetDatabaseCatalog struct {
	Schemas []GetDatabaseCatalogSchema `pulumi:"schemas"`
}

// GetDatabaseCatalogInput is an input type that accepts GetDatabaseCatalogArgs and GetDatabaseCatalogOutput values.
// You can construct a concrete instance of `GetDatabaseCatalogInput` via:
//
//	GetDatabaseCatalogArgs{...}
type GetDatabaseCatalogInput interface {
	pulumi.Input

	ToGetDatabaseCatalogOutput() GetDatabaseCatalogOutput
	ToGetDatabaseCatalogOutputWithContext(context.Context) GetDatabaseCatalogOutput
}

type GetDatabaseCatalogArgs struct {
	Schemas GetDatabaseCatalogSchemaArrayInput `pulumi:"schemas"`
}

func (GetDatabaseCatalogArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatabaseCatalog)(nil)).Elem()
}

func (i GetDatabaseCatalogArgs) ToGetDatabaseCatalogOutput() GetDatabaseCatalogOutput {
	return i.ToGetDatabaseCatalogOutputWithContext(context.Background())
}

func (i GetDatabaseCatalogArgs) ToGetDatabaseCatalogOutputWithContext(ctx context.Context) GetDatabaseCatalogOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatabaseCatalogOutput)
}

// GetDatabaseCatalogArrayInput is an input type that accepts GetDatabaseCatalogArray and GetDatabaseCatalogArrayOutput values.
// You can construct a concrete instance of `GetDatabaseCatalogArrayInput` via:
//
//	GetDatabaseCatalogArray{ GetDatabaseCatalogArgs{...} }
type GetDatabaseCatalogArrayInput interface {
	pulumi.Input

	ToGetDatabaseCatalogArrayOutput() GetDatabaseCatalogArrayOutput
	ToGetDatabaseCatalogArrayOutputWithContext(context.Context) GetDatabaseCatalogArrayOutput
}

type GetDatabaseCatalogArray []GetDatabaseCatalogInput

func (GetDatabaseCatalogArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatabaseCatalog)(nil)).Elem()
}

func (i GetDatabaseCatalogArray) ToGetDatabaseCatalogArrayOutput() GetDatabaseCatalogArrayOutput {
	return i.ToGetDatabaseCatalogArrayOutputWithContext(context.Background())
}

func (i GetDatabaseCatalogArray) ToGetDatabaseCatalogArrayOutputWithContext(ctx context.Context) GetDatabaseCatalogArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatabaseCatalogArrayOutput)
}

type GetDatabaseCatalogOutput struct{ *pulumi.OutputState }

func (GetDatabaseCatalogOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatabaseCatalog)(nil)).Elem()
}

func (o GetDatabaseCatalogOutput) ToGetDatabaseCatalogOutput() GetDatabaseCatalogOutput {
	return o
}

func (o GetDatabaseCatalogOutput) ToGetDatabaseCatalogOutputWithContext(ctx context.Context) GetDatabaseCatalogOutput {
	return o
}

func (o GetDatabaseCatalogOutput) Schemas() GetDatabaseCatalogSchemaArrayOutput {
	return o.ApplyT(func(v GetDatabaseCatalog) []GetDatabaseCatalogSchema { return v.Schemas }).(GetDatabaseCatalogSchemaArrayOutput)
}

type GetDatabaseCatalogArrayOutput struct{ *pulumi.OutputState }

func (GetDatabaseCatalogArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatabaseCatalog)(nil)).Elem()
}

func (o GetDatabaseCatalogArrayOutput) ToGetDatabaseCatalogArrayOutput() GetDatabaseCatalogArrayOutput {
	return o
}

func (o GetDatabaseCatalogArrayOutput) ToGetDatabaseCatalogArrayOutputWithContext(ctx context.Context) GetDatabaseCatalogArrayOutput {
	return o
}

func (o GetDatabaseCatalogArrayOutput) Index(i pulumi.IntInput) GetDatabaseCatalogOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDatabaseCatalog {
		return vs[0].([]GetDatabaseCatalog)[vs[1].(int)]
	}).(GetDatabaseCatalogOutput)
}

type GetDatabaseCatalogSchema struct {
	Name   string                          `pulumi:"name"`
	Tables []GetDatabaseCatalogSchemaTable `pulumi:"tables"`
}

// GetDatabaseCatalogSchemaInput is an input type that accepts GetDatabaseCatalogSchemaArgs and GetDatabaseCatalogSchemaOutput values.
// You can construct a concrete instance of `GetDatabaseCatalogSchemaInput` via:
//
//	GetDatabaseCatalogSchemaArgs{...}
type GetDatabaseCatalogSchemaInput interface {
	pulumi.Input

	ToGetDatabaseCatalogSchemaOutput() GetDatabaseCatalogSchemaOutput
	ToGetDatabaseCatalogSchemaOutputWithContext(context.Context) GetDatabaseCatalogSchemaOutput
}

type GetDatabaseCatalogSchemaArgs struct {
	Name   pulumi.StringInput                      `pulumi:"name"`
	Tables GetDatabaseCatalogSchemaTableArrayInput `pulumi:"tables"`
}

func (GetDatabaseCatalogSchemaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatabaseCatalogSchema)(nil)).Elem()
}

func (i GetDatabaseCatalogSchemaArgs) ToGetDatabaseCatalogSchemaOutput() GetDatabaseCatalogSchemaOutput {
	return i.ToGetDatabaseCatalogSchemaOutputWithContext(context.Background())
}

func (i GetDatabaseCatalogSchemaArgs) ToGetDatabaseCatalogSchemaOutputWithContext(ctx context.Context) GetDatabaseCatalogSchemaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatabaseCatalogSchemaOutput)
}

// GetDatabaseCatalogSchemaArrayInput is an input type that accepts GetDatabaseCatalogSchemaArray and GetDatabaseCatalogSchemaArrayOutput values.
// You can construct a concrete instance of `GetDatabaseCatalogSchemaArrayInput` via:
//
//	GetDatabaseCatalogSchemaArray{ GetDatabaseCatalogSchemaArgs{...} }
type GetDatabaseCatalogSchemaArrayInput interface {
	pulumi.Input

	ToGetDatabaseCatalogSchemaArrayOutput() GetDatabaseCatalogSchemaArrayOutput
	ToGetDatabaseCatalogSchemaArrayOutputWithContext(context.Context) GetDatabaseCatalogSchemaArrayOutput
}

type GetDatabaseCatalogSchemaArray []GetDatabaseCatalogSchemaInput

func (GetDatabaseCatalogSchemaArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatabaseCatalogSchema)(nil)).Elem()
}

func (i GetDatabaseCatalogSchemaArray) ToGetDatabaseCatalogSchemaArrayOutput() GetDatabaseCatalogSchemaArrayOutput {
	return i.ToGetDatabaseCatalogSchemaArrayOutputWithContext(context.Background())
}

func (i GetDatabaseCatalogSchemaArray) ToGetDatabaseCatalogSchemaArrayOutputWithContext(ctx context.Context) GetDatabaseCatalogSchemaArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatabaseCatalogSchemaArrayOutput)
}

type GetDatabaseCatalogSchemaOutput struct{ *pulumi.OutputState }

func (GetDatabaseCatalogSchemaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatabaseCatalogSchema)(nil)).Elem()
}

func (o GetDatabaseCatalogSchemaOutput) ToGetDatabaseCatalogSchemaOutput() GetDatabaseCatalogSchemaOutput {
	return o
}

func (o GetDatabaseCatalogSchemaOutput) ToGetDatabaseCatalogSchemaOutputWithContext(ctx context.Context) GetDatabaseCatalogSchemaOutput {
	return o
}

func (o GetDatabaseCatalogSchemaOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabaseCatalogSchema) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetDatabaseCatalogSchemaOutput) Tables() GetDatabaseCatalogSchemaTableArrayOutput {
	return o.ApplyT(func(v GetDatabaseCatalogSchema) []GetDatabaseCatalogSchemaTable { return v.Tables }).(GetDatabaseCatalogSchemaTableArrayOutput)
}

type GetDatabaseCatalogSchemaArrayOutput struct{ *pulumi.OutputState }

func (GetDatabaseCatalogSchemaArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatabaseCatalogSchema)(nil)).Elem()
}

func (o GetDatabaseCatalogSchemaArrayOutput) ToGetDatabaseCatalogSchemaArrayOutput() GetDatabaseCatalogSchemaArrayOutput {
	return o
}

func (o GetDatabaseCatalogSchemaArrayOutput) ToGetDatabaseCatalogSchemaArrayOutputWithContext(ctx context.Context) GetDatabaseCatalogSchemaArrayOutput {
	return o
}

func (o GetDatabaseCatalogSchemaArrayOutput) Index(i pulumi.IntInput) GetDatabaseCatalogSchemaOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDatabaseCatalogSchema {
		return vs[0].([]GetDatabaseCatalogSchema)[vs[1].(int)]
	}).(GetDatabaseCatalogSchemaOutput)
}

type GetDatabaseCatalogSchemaTable struct {
	// The classification id
	Classification string                                `pulumi:"classification"`
	Columns        []GetDatabaseCatalogSchemaTableColumn `pulumi:"columns"`
	Name           string                                `pulumi:"name"`
}

// GetDatabaseCatalogSchemaTableInput is an input type that accepts GetDatabaseCatalogSchemaTableArgs and GetDatabaseCatalogSchemaTableOutput values.
// You can construct a concrete instance of `GetDatabaseCatalogSchemaTableInput` via:
//
//	GetDatabaseCatalogSchemaTableArgs{...}
type GetDatabaseCatalogSchemaTableInput interface {
	pulumi.Input

	ToGetDatabaseCatalogSchemaTableOutput() GetDatabaseCatalogSchemaTableOutput
	ToGetDatabaseCatalogSchemaTableOutputWithContext(context.Context) GetDatabaseCatalogSchemaTableOutput
}

type GetDatabaseCatalogSchemaTableArgs struct {
	// The classification id
	Classification pulumi.StringInput                            `pulumi:"classification"`
	Columns        GetDatabaseCatalogSchemaTableColumnArrayInput `pulumi:"columns"`
	Name           pulumi.StringInput                            `pulumi:"name"`
}

func (GetDatabaseCatalogSchemaTableArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatabaseCatalogSchemaTable)(nil)).Elem()
}

func (i GetDatabaseCatalogSchemaTableArgs) ToGetDatabaseCatalogSchemaTableOutput() GetDatabaseCatalogSchemaTableOutput {
	return i.ToGetDatabaseCatalogSchemaTableOutputWithContext(context.Background())
}

func (i GetDatabaseCatalogSchemaTableArgs) ToGetDatabaseCatalogSchemaTableOutputWithContext(ctx context.Context) GetDatabaseCatalogSchemaTableOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatabaseCatalogSchemaTableOutput)
}

// GetDatabaseCatalogSchemaTableArrayInput is an input type that accepts GetDatabaseCatalogSchemaTableArray and GetDatabaseCatalogSchemaTableArrayOutput values.
// You can construct a concrete instance of `GetDatabaseCatalogSchemaTableArrayInput` via:
//
//	GetDatabaseCatalogSchemaTableArray{ GetDatabaseCatalogSchemaTableArgs{...} }
type GetDatabaseCatalogSchemaTableArrayInput interface {
	pulumi.Input

	ToGetDatabaseCatalogSchemaTableArrayOutput() GetDatabaseCatalogSchemaTableArrayOutput
	ToGetDatabaseCatalogSchemaTableArrayOutputWithContext(context.Context) GetDatabaseCatalogSchemaTableArrayOutput
}

type GetDatabaseCatalogSchemaTableArray []GetDatabaseCatalogSchemaTableInput

func (GetDatabaseCatalogSchemaTableArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatabaseCatalogSchemaTable)(nil)).Elem()
}

func (i GetDatabaseCatalogSchemaTableArray) ToGetDatabaseCatalogSchemaTableArrayOutput() GetDatabaseCatalogSchemaTableArrayOutput {
	return i.ToGetDatabaseCatalogSchemaTableArrayOutputWithContext(context.Background())
}

func (i GetDatabaseCatalogSchemaTableArray) ToGetDatabaseCatalogSchemaTableArrayOutputWithContext(ctx context.Context) GetDatabaseCatalogSchemaTableArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatabaseCatalogSchemaTableArrayOutput)
}

type GetDatabaseCatalogSchemaTableOutput struct{ *pulumi.OutputState }

func (GetDatabaseCatalogSchemaTableOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatabaseCatalogSchemaTable)(nil)).Elem()
}

func (o GetDatabaseCatalogSchemaTableOutput) ToGetDatabaseCatalogSchemaTableOutput() GetDatabaseCatalogSchemaTableOutput {
	return o
}

func (o GetDatabaseCatalogSchemaTableOutput) ToGetDatabaseCatalogSchemaTableOutputWithContext(ctx context.Context) GetDatabaseCatalogSchemaTableOutput {
	return o
}

// The classification id
func (o GetDatabaseCatalogSchemaTableOutput) Classification() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabaseCatalogSchemaTable) string { return v.Classification }).(pulumi.StringOutput)
}

func (o GetDatabaseCatalogSchemaTableOutput) Columns() GetDatabaseCatalogSchemaTableColumnArrayOutput {
	return o.ApplyT(func(v GetDatabaseCatalogSchemaTable) []GetDatabaseCatalogSchemaTableColumn { return v.Columns }).(GetDatabaseCatalogSchemaTableColumnArrayOutput)
}

func (o GetDatabaseCatalogSchemaTableOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabaseCatalogSchemaTable) string { return v.Name }).(pulumi.StringOutput)
}

type GetDatabaseCatalogSchemaTableArrayOutput struct{ *pulumi.OutputState }

func (GetDatabaseCatalogSchemaTableArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatabaseCatalogSchemaTable)(nil)).Elem()
}

func (o GetDatabaseCatalogSchemaTableArrayOutput) ToGetDatabaseCatalogSchemaTableArrayOutput() GetDatabaseCatalogSchemaTableArrayOutput {
	return o
}

func (o GetDatabaseCatalogSchemaTableArrayOutput) ToGetDatabaseCatalogSchemaTableArrayOutputWithContext(ctx context.Context) GetDatabaseCatalogSchemaTableArrayOutput {
	return o
}

func (o GetDatabaseCatalogSchemaTableArrayOutput) Index(i pulumi.IntInput) GetDatabaseCatalogSchemaTableOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDatabaseCatalogSchemaTable {
		return vs[0].([]GetDatabaseCatalogSchemaTable)[vs[1].(int)]
	}).(GetDatabaseCatalogSchemaTableOutput)
}

type GetDatabaseCatalogSchemaTableColumn struct {
	// The classification id
	Classification string `pulumi:"classification"`
	// The deployment and policy control labels.
	Labels map[string]string `pulumi:"labels"`
	// The database full name in instances/{instance}/databases/{database} format
	Name string `pulumi:"name"`
	// The semantic type id
	SemanticType string `pulumi:"semanticType"`
}

// GetDatabaseCatalogSchemaTableColumnInput is an input type that accepts GetDatabaseCatalogSchemaTableColumnArgs and GetDatabaseCatalogSchemaTableColumnOutput values.
// You can construct a concrete instance of `GetDatabaseCatalogSchemaTableColumnInput` via:
//
//	GetDatabaseCatalogSchemaTableColumnArgs{...}
type GetDatabaseCatalogSchemaTableColumnInput interface {
	pulumi.Input

	ToGetDatabaseCatalogSchemaTableColumnOutput() GetDatabaseCatalogSchemaTableColumnOutput
	ToGetDatabaseCatalogSchemaTableColumnOutputWithContext(context.Context) GetDatabaseCatalogSchemaTableColumnOutput
}

type GetDatabaseCatalogSchemaTableColumnArgs struct {
	// The classification id
	Classification pulumi.StringInput `pulumi:"classification"`
	// The deployment and policy control labels.
	Labels pulumi.StringMapInput `pulumi:"labels"`
	// The database full name in instances/{instance}/databases/{database} format
	Name pulumi.StringInput `pulumi:"name"`
	// The semantic type id
	SemanticType pulumi.StringInput `pulumi:"semanticType"`
}

func (GetDatabaseCatalogSchemaTableColumnArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatabaseCatalogSchemaTableColumn)(nil)).Elem()
}

func (i GetDatabaseCatalogSchemaTableColumnArgs) ToGetDatabaseCatalogSchemaTableColumnOutput() GetDatabaseCatalogSchemaTableColumnOutput {
	return i.ToGetDatabaseCatalogSchemaTableColumnOutputWithContext(context.Background())
}

func (i GetDatabaseCatalogSchemaTableColumnArgs) ToGetDatabaseCatalogSchemaTableColumnOutputWithContext(ctx context.Context) GetDatabaseCatalogSchemaTableColumnOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatabaseCatalogSchemaTableColumnOutput)
}

// GetDatabaseCatalogSchemaTableColumnArrayInput is an input type that accepts GetDatabaseCatalogSchemaTableColumnArray and GetDatabaseCatalogSchemaTableColumnArrayOutput values.
// You can construct a concrete instance of `GetDatabaseCatalogSchemaTableColumnArrayInput` via:
//
//	GetDatabaseCatalogSchemaTableColumnArray{ GetDatabaseCatalogSchemaTableColumnArgs{...} }
type GetDatabaseCatalogSchemaTableColumnArrayInput interface {
	pulumi.Input

	ToGetDatabaseCatalogSchemaTableColumnArrayOutput() GetDatabaseCatalogSchemaTableColumnArrayOutput
	ToGetDatabaseCatalogSchemaTableColumnArrayOutputWithContext(context.Context) GetDatabaseCatalogSchemaTableColumnArrayOutput
}

type GetDatabaseCatalogSchemaTableColumnArray []GetDatabaseCatalogSchemaTableColumnInput

func (GetDatabaseCatalogSchemaTableColumnArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatabaseCatalogSchemaTableColumn)(nil)).Elem()
}

func (i GetDatabaseCatalogSchemaTableColumnArray) ToGetDatabaseCatalogSchemaTableColumnArrayOutput() GetDatabaseCatalogSchemaTableColumnArrayOutput {
	return i.ToGetDatabaseCatalogSchemaTableColumnArrayOutputWithContext(context.Background())
}

func (i GetDatabaseCatalogSchemaTableColumnArray) ToGetDatabaseCatalogSchemaTableColumnArrayOutputWithContext(ctx context.Context) GetDatabaseCatalogSchemaTableColumnArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatabaseCatalogSchemaTableColumnArrayOutput)
}

type GetDatabaseCatalogSchemaTableColumnOutput struct{ *pulumi.OutputState }

func (GetDatabaseCatalogSchemaTableColumnOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatabaseCatalogSchemaTableColumn)(nil)).Elem()
}

func (o GetDatabaseCatalogSchemaTableColumnOutput) ToGetDatabaseCatalogSchemaTableColumnOutput() GetDatabaseCatalogSchemaTableColumnOutput {
	return o
}

func (o GetDatabaseCatalogSchemaTableColumnOutput) ToGetDatabaseCatalogSchemaTableColumnOutputWithContext(ctx context.Context) GetDatabaseCatalogSchemaTableColumnOutput {
	return o
}

// The classification id
func (o GetDatabaseCatalogSchemaTableColumnOutput) Classification() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabaseCatalogSchemaTableColumn) string { return v.Classification }).(pulumi.StringOutput)
}

// The deployment and policy control labels.
func (o GetDatabaseCatalogSchemaTableColumnOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetDatabaseCatalogSchemaTableColumn) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

// The database full name in instances/{instance}/databases/{database} format
func (o GetDatabaseCatalogSchemaTableColumnOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabaseCatalogSchemaTableColumn) string { return v.Name }).(pulumi.StringOutput)
}

// The semantic type id
func (o GetDatabaseCatalogSchemaTableColumnOutput) SemanticType() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabaseCatalogSchemaTableColumn) string { return v.SemanticType }).(pulumi.StringOutput)
}

type GetDatabaseCatalogSchemaTableColumnArrayOutput struct{ *pulumi.OutputState }

func (GetDatabaseCatalogSchemaTableColumnArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatabaseCatalogSchemaTableColumn)(nil)).Elem()
}

func (o GetDatabaseCatalogSchemaTableColumnArrayOutput) ToGetDatabaseCatalogSchemaTableColumnArrayOutput() GetDatabaseCatalogSchemaTableColumnArrayOutput {
	return o
}

func (o GetDatabaseCatalogSchemaTableColumnArrayOutput) ToGetDatabaseCatalogSchemaTableColumnArrayOutputWithContext(ctx context.Context) GetDatabaseCatalogSchemaTableColumnArrayOutput {
	return o
}

func (o GetDatabaseCatalogSchemaTableColumnArrayOutput) Index(i pulumi.IntInput) GetDatabaseCatalogSchemaTableColumnOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDatabaseCatalogSchemaTableColumn {
		return vs[0].([]GetDatabaseCatalogSchemaTableColumn)[vs[1].(int)]
	}).(GetDatabaseCatalogSchemaTableColumnOutput)
}

type GetGroupMember struct {
	// The member in users/{email} format.
	Member string `pulumi:"member"`
	// The member's role in the group.
	Role string `pulumi:"role"`
}

// GetGroupMemberInput is an input type that accepts GetGroupMemberArgs and GetGroupMemberOutput values.
// You can construct a concrete instance of `GetGroupMemberInput` via:
//
//	GetGroupMemberArgs{...}
type GetGroupMemberInput interface {
	pulumi.Input

	ToGetGroupMemberOutput() GetGroupMemberOutput
	ToGetGroupMemberOutputWithContext(context.Context) GetGroupMemberOutput
}

type GetGroupMemberArgs struct {
	// The member in users/{email} format.
	Member pulumi.StringInput `pulumi:"member"`
	// The member's role in the group.
	Role pulumi.StringInput `pulumi:"role"`
}

func (GetGroupMemberArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGroupMember)(nil)).Elem()
}

func (i GetGroupMemberArgs) ToGetGroupMemberOutput() GetGroupMemberOutput {
	return i.ToGetGroupMemberOutputWithContext(context.Background())
}

func (i GetGroupMemberArgs) ToGetGroupMemberOutputWithContext(ctx context.Context) GetGroupMemberOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGroupMemberOutput)
}

// GetGroupMemberArrayInput is an input type that accepts GetGroupMemberArray and GetGroupMemberArrayOutput values.
// You can construct a concrete instance of `GetGroupMemberArrayInput` via:
//
//	GetGroupMemberArray{ GetGroupMemberArgs{...} }
type GetGroupMemberArrayInput interface {
	pulumi.Input

	ToGetGroupMemberArrayOutput() GetGroupMemberArrayOutput
	ToGetGroupMemberArrayOutputWithContext(context.Context) GetGroupMemberArrayOutput
}

type GetGroupMemberArray []GetGroupMemberInput

func (GetGroupMemberArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGroupMember)(nil)).Elem()
}

func (i GetGroupMemberArray) ToGetGroupMemberArrayOutput() GetGroupMemberArrayOutput {
	return i.ToGetGroupMemberArrayOutputWithContext(context.Background())
}

func (i GetGroupMemberArray) ToGetGroupMemberArrayOutputWithContext(ctx context.Context) GetGroupMemberArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGroupMemberArrayOutput)
}

type GetGroupMemberOutput struct{ *pulumi.OutputState }

func (GetGroupMemberOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGroupMember)(nil)).Elem()
}

func (o GetGroupMemberOutput) ToGetGroupMemberOutput() GetGroupMemberOutput {
	return o
}

func (o GetGroupMemberOutput) ToGetGroupMemberOutputWithContext(ctx context.Context) GetGroupMemberOutput {
	return o
}

// The member in users/{email} format.
func (o GetGroupMemberOutput) Member() pulumi.StringOutput {
	return o.ApplyT(func(v GetGroupMember) string { return v.Member }).(pulumi.StringOutput)
}

// The member's role in the group.
func (o GetGroupMemberOutput) Role() pulumi.StringOutput {
	return o.ApplyT(func(v GetGroupMember) string { return v.Role }).(pulumi.StringOutput)
}

type GetGroupMemberArrayOutput struct{ *pulumi.OutputState }

func (GetGroupMemberArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGroupMember)(nil)).Elem()
}

func (o GetGroupMemberArrayOutput) ToGetGroupMemberArrayOutput() GetGroupMemberArrayOutput {
	return o
}

func (o GetGroupMemberArrayOutput) ToGetGroupMemberArrayOutputWithContext(ctx context.Context) GetGroupMemberArrayOutput {
	return o
}

func (o GetGroupMemberArrayOutput) Index(i pulumi.IntInput) GetGroupMemberOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGroupMember {
		return vs[0].([]GetGroupMember)[vs[1].(int)]
	}).(GetGroupMemberOutput)
}

type GetInstanceDataSource struct {
	// The database for the instance, you can set this if the engine type is POSTGRES.
	Database string `pulumi:"database"`
	// The external secret to get the database password. Learn more: https://www.bytebase.com/docs/get-started/instance/#use-external-secret-manager
	ExternalSecrets []GetInstanceDataSourceExternalSecret `pulumi:"externalSecrets"`
	// Host or socket for your instance, or the account name if the instance type is Snowflake.
	Host string `pulumi:"host"`
	// The unique data source id in this instance.
	Id string `pulumi:"id"`
	// The connection user password used by Bytebase to perform DDL and DML operations.
	Password string `pulumi:"password"`
	// The port for your instance.
	Port string `pulumi:"port"`
	// The CA certificate. Optional, you can set this if the engine type is MYSQL, POSTGRES, TIDB, CLICKHOUSE or COCKROACHDB.
	SslCa string `pulumi:"sslCa"`
	// The client certificate. Optional, you can set this if the engine type is MYSQL, POSTGRES, TIDB, CLICKHOUSE or COCKROACHDB.
	SslCert string `pulumi:"sslCert"`
	// The client key. Optional, you can set this if the engine type is MYSQL, POSTGRES, TIDB, CLICKHOUSE or COCKROACHDB.
	SslKey string `pulumi:"sslKey"`
	// The data source type. Should be ADMIN or READ_ONLY.
	Type string `pulumi:"type"`
	// Enable SSL connection. Required to use SSL certificates.
	UseSsl bool `pulumi:"useSsl"`
	// The connection user name used by Bytebase to perform DDL and DML operations.
	Username string `pulumi:"username"`
}

// GetInstanceDataSourceInput is an input type that accepts GetInstanceDataSourceArgs and GetInstanceDataSourceOutput values.
// You can construct a concrete instance of `GetInstanceDataSourceInput` via:
//
//	GetInstanceDataSourceArgs{...}
type GetInstanceDataSourceInput interface {
	pulumi.Input

	ToGetInstanceDataSourceOutput() GetInstanceDataSourceOutput
	ToGetInstanceDataSourceOutputWithContext(context.Context) GetInstanceDataSourceOutput
}

type GetInstanceDataSourceArgs struct {
	// The database for the instance, you can set this if the engine type is POSTGRES.
	Database pulumi.StringInput `pulumi:"database"`
	// The external secret to get the database password. Learn more: https://www.bytebase.com/docs/get-started/instance/#use-external-secret-manager
	ExternalSecrets GetInstanceDataSourceExternalSecretArrayInput `pulumi:"externalSecrets"`
	// Host or socket for your instance, or the account name if the instance type is Snowflake.
	Host pulumi.StringInput `pulumi:"host"`
	// The unique data source id in this instance.
	Id pulumi.StringInput `pulumi:"id"`
	// The connection user password used by Bytebase to perform DDL and DML operations.
	Password pulumi.StringInput `pulumi:"password"`
	// The port for your instance.
	Port pulumi.StringInput `pulumi:"port"`
	// The CA certificate. Optional, you can set this if the engine type is MYSQL, POSTGRES, TIDB, CLICKHOUSE or COCKROACHDB.
	SslCa pulumi.StringInput `pulumi:"sslCa"`
	// The client certificate. Optional, you can set this if the engine type is MYSQL, POSTGRES, TIDB, CLICKHOUSE or COCKROACHDB.
	SslCert pulumi.StringInput `pulumi:"sslCert"`
	// The client key. Optional, you can set this if the engine type is MYSQL, POSTGRES, TIDB, CLICKHOUSE or COCKROACHDB.
	SslKey pulumi.StringInput `pulumi:"sslKey"`
	// The data source type. Should be ADMIN or READ_ONLY.
	Type pulumi.StringInput `pulumi:"type"`
	// Enable SSL connection. Required to use SSL certificates.
	UseSsl pulumi.BoolInput `pulumi:"useSsl"`
	// The connection user name used by Bytebase to perform DDL and DML operations.
	Username pulumi.StringInput `pulumi:"username"`
}

func (GetInstanceDataSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceDataSource)(nil)).Elem()
}

func (i GetInstanceDataSourceArgs) ToGetInstanceDataSourceOutput() GetInstanceDataSourceOutput {
	return i.ToGetInstanceDataSourceOutputWithContext(context.Background())
}

func (i GetInstanceDataSourceArgs) ToGetInstanceDataSourceOutputWithContext(ctx context.Context) GetInstanceDataSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceDataSourceOutput)
}

// GetInstanceDataSourceArrayInput is an input type that accepts GetInstanceDataSourceArray and GetInstanceDataSourceArrayOutput values.
// You can construct a concrete instance of `GetInstanceDataSourceArrayInput` via:
//
//	GetInstanceDataSourceArray{ GetInstanceDataSourceArgs{...} }
type GetInstanceDataSourceArrayInput interface {
	pulumi.Input

	ToGetInstanceDataSourceArrayOutput() GetInstanceDataSourceArrayOutput
	ToGetInstanceDataSourceArrayOutputWithContext(context.Context) GetInstanceDataSourceArrayOutput
}

type GetInstanceDataSourceArray []GetInstanceDataSourceInput

func (GetInstanceDataSourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceDataSource)(nil)).Elem()
}

func (i GetInstanceDataSourceArray) ToGetInstanceDataSourceArrayOutput() GetInstanceDataSourceArrayOutput {
	return i.ToGetInstanceDataSourceArrayOutputWithContext(context.Background())
}

func (i GetInstanceDataSourceArray) ToGetInstanceDataSourceArrayOutputWithContext(ctx context.Context) GetInstanceDataSourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceDataSourceArrayOutput)
}

type GetInstanceDataSourceOutput struct{ *pulumi.OutputState }

func (GetInstanceDataSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceDataSource)(nil)).Elem()
}

func (o GetInstanceDataSourceOutput) ToGetInstanceDataSourceOutput() GetInstanceDataSourceOutput {
	return o
}

func (o GetInstanceDataSourceOutput) ToGetInstanceDataSourceOutputWithContext(ctx context.Context) GetInstanceDataSourceOutput {
	return o
}

// The database for the instance, you can set this if the engine type is POSTGRES.
func (o GetInstanceDataSourceOutput) Database() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceDataSource) string { return v.Database }).(pulumi.StringOutput)
}

// The external secret to get the database password. Learn more: https://www.bytebase.com/docs/get-started/instance/#use-external-secret-manager
func (o GetInstanceDataSourceOutput) ExternalSecrets() GetInstanceDataSourceExternalSecretArrayOutput {
	return o.ApplyT(func(v GetInstanceDataSource) []GetInstanceDataSourceExternalSecret { return v.ExternalSecrets }).(GetInstanceDataSourceExternalSecretArrayOutput)
}

// Host or socket for your instance, or the account name if the instance type is Snowflake.
func (o GetInstanceDataSourceOutput) Host() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceDataSource) string { return v.Host }).(pulumi.StringOutput)
}

// The unique data source id in this instance.
func (o GetInstanceDataSourceOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceDataSource) string { return v.Id }).(pulumi.StringOutput)
}

// The connection user password used by Bytebase to perform DDL and DML operations.
func (o GetInstanceDataSourceOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceDataSource) string { return v.Password }).(pulumi.StringOutput)
}

// The port for your instance.
func (o GetInstanceDataSourceOutput) Port() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceDataSource) string { return v.Port }).(pulumi.StringOutput)
}

// The CA certificate. Optional, you can set this if the engine type is MYSQL, POSTGRES, TIDB, CLICKHOUSE or COCKROACHDB.
func (o GetInstanceDataSourceOutput) SslCa() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceDataSource) string { return v.SslCa }).(pulumi.StringOutput)
}

// The client certificate. Optional, you can set this if the engine type is MYSQL, POSTGRES, TIDB, CLICKHOUSE or COCKROACHDB.
func (o GetInstanceDataSourceOutput) SslCert() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceDataSource) string { return v.SslCert }).(pulumi.StringOutput)
}

// The client key. Optional, you can set this if the engine type is MYSQL, POSTGRES, TIDB, CLICKHOUSE or COCKROACHDB.
func (o GetInstanceDataSourceOutput) SslKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceDataSource) string { return v.SslKey }).(pulumi.StringOutput)
}

// The data source type. Should be ADMIN or READ_ONLY.
func (o GetInstanceDataSourceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceDataSource) string { return v.Type }).(pulumi.StringOutput)
}

// Enable SSL connection. Required to use SSL certificates.
func (o GetInstanceDataSourceOutput) UseSsl() pulumi.BoolOutput {
	return o.ApplyT(func(v GetInstanceDataSource) bool { return v.UseSsl }).(pulumi.BoolOutput)
}

// The connection user name used by Bytebase to perform DDL and DML operations.
func (o GetInstanceDataSourceOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceDataSource) string { return v.Username }).(pulumi.StringOutput)
}

type GetInstanceDataSourceArrayOutput struct{ *pulumi.OutputState }

func (GetInstanceDataSourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceDataSource)(nil)).Elem()
}

func (o GetInstanceDataSourceArrayOutput) ToGetInstanceDataSourceArrayOutput() GetInstanceDataSourceArrayOutput {
	return o
}

func (o GetInstanceDataSourceArrayOutput) ToGetInstanceDataSourceArrayOutputWithContext(ctx context.Context) GetInstanceDataSourceArrayOutput {
	return o
}

func (o GetInstanceDataSourceArrayOutput) Index(i pulumi.IntInput) GetInstanceDataSourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstanceDataSource {
		return vs[0].([]GetInstanceDataSource)[vs[1].(int)]
	}).(GetInstanceDataSourceOutput)
}

type GetInstanceDataSourceExternalSecret struct {
	// The AWS Secrets Manager to get the database password. Reference doc https://docs.aws.amazon.com/secretsmanager/latest/userguide/intro.html
	AwsSecretsManagers []GetInstanceDataSourceExternalSecretAwsSecretsManager `pulumi:"awsSecretsManagers"`
	// The GCP Secret Manager to get the database password. Reference doc https://cloud.google.com/secret-manager/docs
	GcpSecretManagers []GetInstanceDataSourceExternalSecretGcpSecretManager `pulumi:"gcpSecretManagers"`
	Vaults            []GetInstanceDataSourceExternalSecretVault            `pulumi:"vaults"`
}

// GetInstanceDataSourceExternalSecretInput is an input type that accepts GetInstanceDataSourceExternalSecretArgs and GetInstanceDataSourceExternalSecretOutput values.
// You can construct a concrete instance of `GetInstanceDataSourceExternalSecretInput` via:
//
//	GetInstanceDataSourceExternalSecretArgs{...}
type GetInstanceDataSourceExternalSecretInput interface {
	pulumi.Input

	ToGetInstanceDataSourceExternalSecretOutput() GetInstanceDataSourceExternalSecretOutput
	ToGetInstanceDataSourceExternalSecretOutputWithContext(context.Context) GetInstanceDataSourceExternalSecretOutput
}

type GetInstanceDataSourceExternalSecretArgs struct {
	// The AWS Secrets Manager to get the database password. Reference doc https://docs.aws.amazon.com/secretsmanager/latest/userguide/intro.html
	AwsSecretsManagers GetInstanceDataSourceExternalSecretAwsSecretsManagerArrayInput `pulumi:"awsSecretsManagers"`
	// The GCP Secret Manager to get the database password. Reference doc https://cloud.google.com/secret-manager/docs
	GcpSecretManagers GetInstanceDataSourceExternalSecretGcpSecretManagerArrayInput `pulumi:"gcpSecretManagers"`
	Vaults            GetInstanceDataSourceExternalSecretVaultArrayInput            `pulumi:"vaults"`
}

func (GetInstanceDataSourceExternalSecretArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceDataSourceExternalSecret)(nil)).Elem()
}

func (i GetInstanceDataSourceExternalSecretArgs) ToGetInstanceDataSourceExternalSecretOutput() GetInstanceDataSourceExternalSecretOutput {
	return i.ToGetInstanceDataSourceExternalSecretOutputWithContext(context.Background())
}

func (i GetInstanceDataSourceExternalSecretArgs) ToGetInstanceDataSourceExternalSecretOutputWithContext(ctx context.Context) GetInstanceDataSourceExternalSecretOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceDataSourceExternalSecretOutput)
}

// GetInstanceDataSourceExternalSecretArrayInput is an input type that accepts GetInstanceDataSourceExternalSecretArray and GetInstanceDataSourceExternalSecretArrayOutput values.
// You can construct a concrete instance of `GetInstanceDataSourceExternalSecretArrayInput` via:
//
//	GetInstanceDataSourceExternalSecretArray{ GetInstanceDataSourceExternalSecretArgs{...} }
type GetInstanceDataSourceExternalSecretArrayInput interface {
	pulumi.Input

	ToGetInstanceDataSourceExternalSecretArrayOutput() GetInstanceDataSourceExternalSecretArrayOutput
	ToGetInstanceDataSourceExternalSecretArrayOutputWithContext(context.Context) GetInstanceDataSourceExternalSecretArrayOutput
}

type GetInstanceDataSourceExternalSecretArray []GetInstanceDataSourceExternalSecretInput

func (GetInstanceDataSourceExternalSecretArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceDataSourceExternalSecret)(nil)).Elem()
}

func (i GetInstanceDataSourceExternalSecretArray) ToGetInstanceDataSourceExternalSecretArrayOutput() GetInstanceDataSourceExternalSecretArrayOutput {
	return i.ToGetInstanceDataSourceExternalSecretArrayOutputWithContext(context.Background())
}

func (i GetInstanceDataSourceExternalSecretArray) ToGetInstanceDataSourceExternalSecretArrayOutputWithContext(ctx context.Context) GetInstanceDataSourceExternalSecretArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceDataSourceExternalSecretArrayOutput)
}

type GetInstanceDataSourceExternalSecretOutput struct{ *pulumi.OutputState }

func (GetInstanceDataSourceExternalSecretOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceDataSourceExternalSecret)(nil)).Elem()
}

func (o GetInstanceDataSourceExternalSecretOutput) ToGetInstanceDataSourceExternalSecretOutput() GetInstanceDataSourceExternalSecretOutput {
	return o
}

func (o GetInstanceDataSourceExternalSecretOutput) ToGetInstanceDataSourceExternalSecretOutputWithContext(ctx context.Context) GetInstanceDataSourceExternalSecretOutput {
	return o
}

// The AWS Secrets Manager to get the database password. Reference doc https://docs.aws.amazon.com/secretsmanager/latest/userguide/intro.html
func (o GetInstanceDataSourceExternalSecretOutput) AwsSecretsManagers() GetInstanceDataSourceExternalSecretAwsSecretsManagerArrayOutput {
	return o.ApplyT(func(v GetInstanceDataSourceExternalSecret) []GetInstanceDataSourceExternalSecretAwsSecretsManager {
		return v.AwsSecretsManagers
	}).(GetInstanceDataSourceExternalSecretAwsSecretsManagerArrayOutput)
}

// The GCP Secret Manager to get the database password. Reference doc https://cloud.google.com/secret-manager/docs
func (o GetInstanceDataSourceExternalSecretOutput) GcpSecretManagers() GetInstanceDataSourceExternalSecretGcpSecretManagerArrayOutput {
	return o.ApplyT(func(v GetInstanceDataSourceExternalSecret) []GetInstanceDataSourceExternalSecretGcpSecretManager {
		return v.GcpSecretManagers
	}).(GetInstanceDataSourceExternalSecretGcpSecretManagerArrayOutput)
}

func (o GetInstanceDataSourceExternalSecretOutput) Vaults() GetInstanceDataSourceExternalSecretVaultArrayOutput {
	return o.ApplyT(func(v GetInstanceDataSourceExternalSecret) []GetInstanceDataSourceExternalSecretVault {
		return v.Vaults
	}).(GetInstanceDataSourceExternalSecretVaultArrayOutput)
}

type GetInstanceDataSourceExternalSecretArrayOutput struct{ *pulumi.OutputState }

func (GetInstanceDataSourceExternalSecretArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceDataSourceExternalSecret)(nil)).Elem()
}

func (o GetInstanceDataSourceExternalSecretArrayOutput) ToGetInstanceDataSourceExternalSecretArrayOutput() GetInstanceDataSourceExternalSecretArrayOutput {
	return o
}

func (o GetInstanceDataSourceExternalSecretArrayOutput) ToGetInstanceDataSourceExternalSecretArrayOutputWithContext(ctx context.Context) GetInstanceDataSourceExternalSecretArrayOutput {
	return o
}

func (o GetInstanceDataSourceExternalSecretArrayOutput) Index(i pulumi.IntInput) GetInstanceDataSourceExternalSecretOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstanceDataSourceExternalSecret {
		return vs[0].([]GetInstanceDataSourceExternalSecret)[vs[1].(int)]
	}).(GetInstanceDataSourceExternalSecretOutput)
}

type GetInstanceDataSourceExternalSecretAwsSecretsManager struct {
	// The key name for the password.
	PasswordKeyName string `pulumi:"passwordKeyName"`
	// The secret name to store the password.
	SecretName string `pulumi:"secretName"`
}

// GetInstanceDataSourceExternalSecretAwsSecretsManagerInput is an input type that accepts GetInstanceDataSourceExternalSecretAwsSecretsManagerArgs and GetInstanceDataSourceExternalSecretAwsSecretsManagerOutput values.
// You can construct a concrete instance of `GetInstanceDataSourceExternalSecretAwsSecretsManagerInput` via:
//
//	GetInstanceDataSourceExternalSecretAwsSecretsManagerArgs{...}
type GetInstanceDataSourceExternalSecretAwsSecretsManagerInput interface {
	pulumi.Input

	ToGetInstanceDataSourceExternalSecretAwsSecretsManagerOutput() GetInstanceDataSourceExternalSecretAwsSecretsManagerOutput
	ToGetInstanceDataSourceExternalSecretAwsSecretsManagerOutputWithContext(context.Context) GetInstanceDataSourceExternalSecretAwsSecretsManagerOutput
}

type GetInstanceDataSourceExternalSecretAwsSecretsManagerArgs struct {
	// The key name for the password.
	PasswordKeyName pulumi.StringInput `pulumi:"passwordKeyName"`
	// The secret name to store the password.
	SecretName pulumi.StringInput `pulumi:"secretName"`
}

func (GetInstanceDataSourceExternalSecretAwsSecretsManagerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceDataSourceExternalSecretAwsSecretsManager)(nil)).Elem()
}

func (i GetInstanceDataSourceExternalSecretAwsSecretsManagerArgs) ToGetInstanceDataSourceExternalSecretAwsSecretsManagerOutput() GetInstanceDataSourceExternalSecretAwsSecretsManagerOutput {
	return i.ToGetInstanceDataSourceExternalSecretAwsSecretsManagerOutputWithContext(context.Background())
}

func (i GetInstanceDataSourceExternalSecretAwsSecretsManagerArgs) ToGetInstanceDataSourceExternalSecretAwsSecretsManagerOutputWithContext(ctx context.Context) GetInstanceDataSourceExternalSecretAwsSecretsManagerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceDataSourceExternalSecretAwsSecretsManagerOutput)
}

// GetInstanceDataSourceExternalSecretAwsSecretsManagerArrayInput is an input type that accepts GetInstanceDataSourceExternalSecretAwsSecretsManagerArray and GetInstanceDataSourceExternalSecretAwsSecretsManagerArrayOutput values.
// You can construct a concrete instance of `GetInstanceDataSourceExternalSecretAwsSecretsManagerArrayInput` via:
//
//	GetInstanceDataSourceExternalSecretAwsSecretsManagerArray{ GetInstanceDataSourceExternalSecretAwsSecretsManagerArgs{...} }
type GetInstanceDataSourceExternalSecretAwsSecretsManagerArrayInput interface {
	pulumi.Input

	ToGetInstanceDataSourceExternalSecretAwsSecretsManagerArrayOutput() GetInstanceDataSourceExternalSecretAwsSecretsManagerArrayOutput
	ToGetInstanceDataSourceExternalSecretAwsSecretsManagerArrayOutputWithContext(context.Context) GetInstanceDataSourceExternalSecretAwsSecretsManagerArrayOutput
}

type GetInstanceDataSourceExternalSecretAwsSecretsManagerArray []GetInstanceDataSourceExternalSecretAwsSecretsManagerInput

func (GetInstanceDataSourceExternalSecretAwsSecretsManagerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceDataSourceExternalSecretAwsSecretsManager)(nil)).Elem()
}

func (i GetInstanceDataSourceExternalSecretAwsSecretsManagerArray) ToGetInstanceDataSourceExternalSecretAwsSecretsManagerArrayOutput() GetInstanceDataSourceExternalSecretAwsSecretsManagerArrayOutput {
	return i.ToGetInstanceDataSourceExternalSecretAwsSecretsManagerArrayOutputWithContext(context.Background())
}

func (i GetInstanceDataSourceExternalSecretAwsSecretsManagerArray) ToGetInstanceDataSourceExternalSecretAwsSecretsManagerArrayOutputWithContext(ctx context.Context) GetInstanceDataSourceExternalSecretAwsSecretsManagerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceDataSourceExternalSecretAwsSecretsManagerArrayOutput)
}

type GetInstanceDataSourceExternalSecretAwsSecretsManagerOutput struct{ *pulumi.OutputState }

func (GetInstanceDataSourceExternalSecretAwsSecretsManagerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceDataSourceExternalSecretAwsSecretsManager)(nil)).Elem()
}

func (o GetInstanceDataSourceExternalSecretAwsSecretsManagerOutput) ToGetInstanceDataSourceExternalSecretAwsSecretsManagerOutput() GetInstanceDataSourceExternalSecretAwsSecretsManagerOutput {
	return o
}

func (o GetInstanceDataSourceExternalSecretAwsSecretsManagerOutput) ToGetInstanceDataSourceExternalSecretAwsSecretsManagerOutputWithContext(ctx context.Context) GetInstanceDataSourceExternalSecretAwsSecretsManagerOutput {
	return o
}

// The key name for the password.
func (o GetInstanceDataSourceExternalSecretAwsSecretsManagerOutput) PasswordKeyName() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceDataSourceExternalSecretAwsSecretsManager) string { return v.PasswordKeyName }).(pulumi.StringOutput)
}

// The secret name to store the password.
func (o GetInstanceDataSourceExternalSecretAwsSecretsManagerOutput) SecretName() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceDataSourceExternalSecretAwsSecretsManager) string { return v.SecretName }).(pulumi.StringOutput)
}

type GetInstanceDataSourceExternalSecretAwsSecretsManagerArrayOutput struct{ *pulumi.OutputState }

func (GetInstanceDataSourceExternalSecretAwsSecretsManagerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceDataSourceExternalSecretAwsSecretsManager)(nil)).Elem()
}

func (o GetInstanceDataSourceExternalSecretAwsSecretsManagerArrayOutput) ToGetInstanceDataSourceExternalSecretAwsSecretsManagerArrayOutput() GetInstanceDataSourceExternalSecretAwsSecretsManagerArrayOutput {
	return o
}

func (o GetInstanceDataSourceExternalSecretAwsSecretsManagerArrayOutput) ToGetInstanceDataSourceExternalSecretAwsSecretsManagerArrayOutputWithContext(ctx context.Context) GetInstanceDataSourceExternalSecretAwsSecretsManagerArrayOutput {
	return o
}

func (o GetInstanceDataSourceExternalSecretAwsSecretsManagerArrayOutput) Index(i pulumi.IntInput) GetInstanceDataSourceExternalSecretAwsSecretsManagerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstanceDataSourceExternalSecretAwsSecretsManager {
		return vs[0].([]GetInstanceDataSourceExternalSecretAwsSecretsManager)[vs[1].(int)]
	}).(GetInstanceDataSourceExternalSecretAwsSecretsManagerOutput)
}

type GetInstanceDataSourceExternalSecretGcpSecretManager struct {
	// The secret name should be like "projects/{project-id}/secrets/{secret-id}".
	SecretName string `pulumi:"secretName"`
}

// GetInstanceDataSourceExternalSecretGcpSecretManagerInput is an input type that accepts GetInstanceDataSourceExternalSecretGcpSecretManagerArgs and GetInstanceDataSourceExternalSecretGcpSecretManagerOutput values.
// You can construct a concrete instance of `GetInstanceDataSourceExternalSecretGcpSecretManagerInput` via:
//
//	GetInstanceDataSourceExternalSecretGcpSecretManagerArgs{...}
type GetInstanceDataSourceExternalSecretGcpSecretManagerInput interface {
	pulumi.Input

	ToGetInstanceDataSourceExternalSecretGcpSecretManagerOutput() GetInstanceDataSourceExternalSecretGcpSecretManagerOutput
	ToGetInstanceDataSourceExternalSecretGcpSecretManagerOutputWithContext(context.Context) GetInstanceDataSourceExternalSecretGcpSecretManagerOutput
}

type GetInstanceDataSourceExternalSecretGcpSecretManagerArgs struct {
	// The secret name should be like "projects/{project-id}/secrets/{secret-id}".
	SecretName pulumi.StringInput `pulumi:"secretName"`
}

func (GetInstanceDataSourceExternalSecretGcpSecretManagerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceDataSourceExternalSecretGcpSecretManager)(nil)).Elem()
}

func (i GetInstanceDataSourceExternalSecretGcpSecretManagerArgs) ToGetInstanceDataSourceExternalSecretGcpSecretManagerOutput() GetInstanceDataSourceExternalSecretGcpSecretManagerOutput {
	return i.ToGetInstanceDataSourceExternalSecretGcpSecretManagerOutputWithContext(context.Background())
}

func (i GetInstanceDataSourceExternalSecretGcpSecretManagerArgs) ToGetInstanceDataSourceExternalSecretGcpSecretManagerOutputWithContext(ctx context.Context) GetInstanceDataSourceExternalSecretGcpSecretManagerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceDataSourceExternalSecretGcpSecretManagerOutput)
}

// GetInstanceDataSourceExternalSecretGcpSecretManagerArrayInput is an input type that accepts GetInstanceDataSourceExternalSecretGcpSecretManagerArray and GetInstanceDataSourceExternalSecretGcpSecretManagerArrayOutput values.
// You can construct a concrete instance of `GetInstanceDataSourceExternalSecretGcpSecretManagerArrayInput` via:
//
//	GetInstanceDataSourceExternalSecretGcpSecretManagerArray{ GetInstanceDataSourceExternalSecretGcpSecretManagerArgs{...} }
type GetInstanceDataSourceExternalSecretGcpSecretManagerArrayInput interface {
	pulumi.Input

	ToGetInstanceDataSourceExternalSecretGcpSecretManagerArrayOutput() GetInstanceDataSourceExternalSecretGcpSecretManagerArrayOutput
	ToGetInstanceDataSourceExternalSecretGcpSecretManagerArrayOutputWithContext(context.Context) GetInstanceDataSourceExternalSecretGcpSecretManagerArrayOutput
}

type GetInstanceDataSourceExternalSecretGcpSecretManagerArray []GetInstanceDataSourceExternalSecretGcpSecretManagerInput

func (GetInstanceDataSourceExternalSecretGcpSecretManagerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceDataSourceExternalSecretGcpSecretManager)(nil)).Elem()
}

func (i GetInstanceDataSourceExternalSecretGcpSecretManagerArray) ToGetInstanceDataSourceExternalSecretGcpSecretManagerArrayOutput() GetInstanceDataSourceExternalSecretGcpSecretManagerArrayOutput {
	return i.ToGetInstanceDataSourceExternalSecretGcpSecretManagerArrayOutputWithContext(context.Background())
}

func (i GetInstanceDataSourceExternalSecretGcpSecretManagerArray) ToGetInstanceDataSourceExternalSecretGcpSecretManagerArrayOutputWithContext(ctx context.Context) GetInstanceDataSourceExternalSecretGcpSecretManagerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceDataSourceExternalSecretGcpSecretManagerArrayOutput)
}

type GetInstanceDataSourceExternalSecretGcpSecretManagerOutput struct{ *pulumi.OutputState }

func (GetInstanceDataSourceExternalSecretGcpSecretManagerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceDataSourceExternalSecretGcpSecretManager)(nil)).Elem()
}

func (o GetInstanceDataSourceExternalSecretGcpSecretManagerOutput) ToGetInstanceDataSourceExternalSecretGcpSecretManagerOutput() GetInstanceDataSourceExternalSecretGcpSecretManagerOutput {
	return o
}

func (o GetInstanceDataSourceExternalSecretGcpSecretManagerOutput) ToGetInstanceDataSourceExternalSecretGcpSecretManagerOutputWithContext(ctx context.Context) GetInstanceDataSourceExternalSecretGcpSecretManagerOutput {
	return o
}

// The secret name should be like "projects/{project-id}/secrets/{secret-id}".
func (o GetInstanceDataSourceExternalSecretGcpSecretManagerOutput) SecretName() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceDataSourceExternalSecretGcpSecretManager) string { return v.SecretName }).(pulumi.StringOutput)
}

type GetInstanceDataSourceExternalSecretGcpSecretManagerArrayOutput struct{ *pulumi.OutputState }

func (GetInstanceDataSourceExternalSecretGcpSecretManagerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceDataSourceExternalSecretGcpSecretManager)(nil)).Elem()
}

func (o GetInstanceDataSourceExternalSecretGcpSecretManagerArrayOutput) ToGetInstanceDataSourceExternalSecretGcpSecretManagerArrayOutput() GetInstanceDataSourceExternalSecretGcpSecretManagerArrayOutput {
	return o
}

func (o GetInstanceDataSourceExternalSecretGcpSecretManagerArrayOutput) ToGetInstanceDataSourceExternalSecretGcpSecretManagerArrayOutputWithContext(ctx context.Context) GetInstanceDataSourceExternalSecretGcpSecretManagerArrayOutput {
	return o
}

func (o GetInstanceDataSourceExternalSecretGcpSecretManagerArrayOutput) Index(i pulumi.IntInput) GetInstanceDataSourceExternalSecretGcpSecretManagerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstanceDataSourceExternalSecretGcpSecretManager {
		return vs[0].([]GetInstanceDataSourceExternalSecretGcpSecretManager)[vs[1].(int)]
	}).(GetInstanceDataSourceExternalSecretGcpSecretManagerOutput)
}

type GetInstanceDataSourceExternalSecretVault struct {
	// The Vault app role to get the password.
	AppRoles []GetInstanceDataSourceExternalSecretVaultAppRole `pulumi:"appRoles"`
	// The name for secret engine.
	EngineName string `pulumi:"engineName"`
	// The key name for the password.
	PasswordKeyName string `pulumi:"passwordKeyName"`
	// The secret name in the engine to store the password.
	SecretName string `pulumi:"secretName"`
	Token      string `pulumi:"token"`
	// The Vault URL.
	Url string `pulumi:"url"`
}

// GetInstanceDataSourceExternalSecretVaultInput is an input type that accepts GetInstanceDataSourceExternalSecretVaultArgs and GetInstanceDataSourceExternalSecretVaultOutput values.
// You can construct a concrete instance of `GetInstanceDataSourceExternalSecretVaultInput` via:
//
//	GetInstanceDataSourceExternalSecretVaultArgs{...}
type GetInstanceDataSourceExternalSecretVaultInput interface {
	pulumi.Input

	ToGetInstanceDataSourceExternalSecretVaultOutput() GetInstanceDataSourceExternalSecretVaultOutput
	ToGetInstanceDataSourceExternalSecretVaultOutputWithContext(context.Context) GetInstanceDataSourceExternalSecretVaultOutput
}

type GetInstanceDataSourceExternalSecretVaultArgs struct {
	// The Vault app role to get the password.
	AppRoles GetInstanceDataSourceExternalSecretVaultAppRoleArrayInput `pulumi:"appRoles"`
	// The name for secret engine.
	EngineName pulumi.StringInput `pulumi:"engineName"`
	// The key name for the password.
	PasswordKeyName pulumi.StringInput `pulumi:"passwordKeyName"`
	// The secret name in the engine to store the password.
	SecretName pulumi.StringInput `pulumi:"secretName"`
	Token      pulumi.StringInput `pulumi:"token"`
	// The Vault URL.
	Url pulumi.StringInput `pulumi:"url"`
}

func (GetInstanceDataSourceExternalSecretVaultArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceDataSourceExternalSecretVault)(nil)).Elem()
}

func (i GetInstanceDataSourceExternalSecretVaultArgs) ToGetInstanceDataSourceExternalSecretVaultOutput() GetInstanceDataSourceExternalSecretVaultOutput {
	return i.ToGetInstanceDataSourceExternalSecretVaultOutputWithContext(context.Background())
}

func (i GetInstanceDataSourceExternalSecretVaultArgs) ToGetInstanceDataSourceExternalSecretVaultOutputWithContext(ctx context.Context) GetInstanceDataSourceExternalSecretVaultOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceDataSourceExternalSecretVaultOutput)
}

// GetInstanceDataSourceExternalSecretVaultArrayInput is an input type that accepts GetInstanceDataSourceExternalSecretVaultArray and GetInstanceDataSourceExternalSecretVaultArrayOutput values.
// You can construct a concrete instance of `GetInstanceDataSourceExternalSecretVaultArrayInput` via:
//
//	GetInstanceDataSourceExternalSecretVaultArray{ GetInstanceDataSourceExternalSecretVaultArgs{...} }
type GetInstanceDataSourceExternalSecretVaultArrayInput interface {
	pulumi.Input

	ToGetInstanceDataSourceExternalSecretVaultArrayOutput() GetInstanceDataSourceExternalSecretVaultArrayOutput
	ToGetInstanceDataSourceExternalSecretVaultArrayOutputWithContext(context.Context) GetInstanceDataSourceExternalSecretVaultArrayOutput
}

type GetInstanceDataSourceExternalSecretVaultArray []GetInstanceDataSourceExternalSecretVaultInput

func (GetInstanceDataSourceExternalSecretVaultArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceDataSourceExternalSecretVault)(nil)).Elem()
}

func (i GetInstanceDataSourceExternalSecretVaultArray) ToGetInstanceDataSourceExternalSecretVaultArrayOutput() GetInstanceDataSourceExternalSecretVaultArrayOutput {
	return i.ToGetInstanceDataSourceExternalSecretVaultArrayOutputWithContext(context.Background())
}

func (i GetInstanceDataSourceExternalSecretVaultArray) ToGetInstanceDataSourceExternalSecretVaultArrayOutputWithContext(ctx context.Context) GetInstanceDataSourceExternalSecretVaultArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceDataSourceExternalSecretVaultArrayOutput)
}

type GetInstanceDataSourceExternalSecretVaultOutput struct{ *pulumi.OutputState }

func (GetInstanceDataSourceExternalSecretVaultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceDataSourceExternalSecretVault)(nil)).Elem()
}

func (o GetInstanceDataSourceExternalSecretVaultOutput) ToGetInstanceDataSourceExternalSecretVaultOutput() GetInstanceDataSourceExternalSecretVaultOutput {
	return o
}

func (o GetInstanceDataSourceExternalSecretVaultOutput) ToGetInstanceDataSourceExternalSecretVaultOutputWithContext(ctx context.Context) GetInstanceDataSourceExternalSecretVaultOutput {
	return o
}

// The Vault app role to get the password.
func (o GetInstanceDataSourceExternalSecretVaultOutput) AppRoles() GetInstanceDataSourceExternalSecretVaultAppRoleArrayOutput {
	return o.ApplyT(func(v GetInstanceDataSourceExternalSecretVault) []GetInstanceDataSourceExternalSecretVaultAppRole {
		return v.AppRoles
	}).(GetInstanceDataSourceExternalSecretVaultAppRoleArrayOutput)
}

// The name for secret engine.
func (o GetInstanceDataSourceExternalSecretVaultOutput) EngineName() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceDataSourceExternalSecretVault) string { return v.EngineName }).(pulumi.StringOutput)
}

// The key name for the password.
func (o GetInstanceDataSourceExternalSecretVaultOutput) PasswordKeyName() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceDataSourceExternalSecretVault) string { return v.PasswordKeyName }).(pulumi.StringOutput)
}

// The secret name in the engine to store the password.
func (o GetInstanceDataSourceExternalSecretVaultOutput) SecretName() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceDataSourceExternalSecretVault) string { return v.SecretName }).(pulumi.StringOutput)
}

func (o GetInstanceDataSourceExternalSecretVaultOutput) Token() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceDataSourceExternalSecretVault) string { return v.Token }).(pulumi.StringOutput)
}

// The Vault URL.
func (o GetInstanceDataSourceExternalSecretVaultOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceDataSourceExternalSecretVault) string { return v.Url }).(pulumi.StringOutput)
}

type GetInstanceDataSourceExternalSecretVaultArrayOutput struct{ *pulumi.OutputState }

func (GetInstanceDataSourceExternalSecretVaultArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceDataSourceExternalSecretVault)(nil)).Elem()
}

func (o GetInstanceDataSourceExternalSecretVaultArrayOutput) ToGetInstanceDataSourceExternalSecretVaultArrayOutput() GetInstanceDataSourceExternalSecretVaultArrayOutput {
	return o
}

func (o GetInstanceDataSourceExternalSecretVaultArrayOutput) ToGetInstanceDataSourceExternalSecretVaultArrayOutputWithContext(ctx context.Context) GetInstanceDataSourceExternalSecretVaultArrayOutput {
	return o
}

func (o GetInstanceDataSourceExternalSecretVaultArrayOutput) Index(i pulumi.IntInput) GetInstanceDataSourceExternalSecretVaultOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstanceDataSourceExternalSecretVault {
		return vs[0].([]GetInstanceDataSourceExternalSecretVault)[vs[1].(int)]
	}).(GetInstanceDataSourceExternalSecretVaultOutput)
}

type GetInstanceDataSourceExternalSecretVaultAppRole struct {
	// The app role id.
	RoleId string `pulumi:"roleId"`
	// The secret id for the role without ttl.
	Secret string `pulumi:"secret"`
	// The secret id type, can be PLAIN (plain text for the secret) or ENVIRONMENT (envirionment name for the secret).
	SecretType string `pulumi:"secretType"`
}

// GetInstanceDataSourceExternalSecretVaultAppRoleInput is an input type that accepts GetInstanceDataSourceExternalSecretVaultAppRoleArgs and GetInstanceDataSourceExternalSecretVaultAppRoleOutput values.
// You can construct a concrete instance of `GetInstanceDataSourceExternalSecretVaultAppRoleInput` via:
//
//	GetInstanceDataSourceExternalSecretVaultAppRoleArgs{...}
type GetInstanceDataSourceExternalSecretVaultAppRoleInput interface {
	pulumi.Input

	ToGetInstanceDataSourceExternalSecretVaultAppRoleOutput() GetInstanceDataSourceExternalSecretVaultAppRoleOutput
	ToGetInstanceDataSourceExternalSecretVaultAppRoleOutputWithContext(context.Context) GetInstanceDataSourceExternalSecretVaultAppRoleOutput
}

type GetInstanceDataSourceExternalSecretVaultAppRoleArgs struct {
	// The app role id.
	RoleId pulumi.StringInput `pulumi:"roleId"`
	// The secret id for the role without ttl.
	Secret pulumi.StringInput `pulumi:"secret"`
	// The secret id type, can be PLAIN (plain text for the secret) or ENVIRONMENT (envirionment name for the secret).
	SecretType pulumi.StringInput `pulumi:"secretType"`
}

func (GetInstanceDataSourceExternalSecretVaultAppRoleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceDataSourceExternalSecretVaultAppRole)(nil)).Elem()
}

func (i GetInstanceDataSourceExternalSecretVaultAppRoleArgs) ToGetInstanceDataSourceExternalSecretVaultAppRoleOutput() GetInstanceDataSourceExternalSecretVaultAppRoleOutput {
	return i.ToGetInstanceDataSourceExternalSecretVaultAppRoleOutputWithContext(context.Background())
}

func (i GetInstanceDataSourceExternalSecretVaultAppRoleArgs) ToGetInstanceDataSourceExternalSecretVaultAppRoleOutputWithContext(ctx context.Context) GetInstanceDataSourceExternalSecretVaultAppRoleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceDataSourceExternalSecretVaultAppRoleOutput)
}

// GetInstanceDataSourceExternalSecretVaultAppRoleArrayInput is an input type that accepts GetInstanceDataSourceExternalSecretVaultAppRoleArray and GetInstanceDataSourceExternalSecretVaultAppRoleArrayOutput values.
// You can construct a concrete instance of `GetInstanceDataSourceExternalSecretVaultAppRoleArrayInput` via:
//
//	GetInstanceDataSourceExternalSecretVaultAppRoleArray{ GetInstanceDataSourceExternalSecretVaultAppRoleArgs{...} }
type GetInstanceDataSourceExternalSecretVaultAppRoleArrayInput interface {
	pulumi.Input

	ToGetInstanceDataSourceExternalSecretVaultAppRoleArrayOutput() GetInstanceDataSourceExternalSecretVaultAppRoleArrayOutput
	ToGetInstanceDataSourceExternalSecretVaultAppRoleArrayOutputWithContext(context.Context) GetInstanceDataSourceExternalSecretVaultAppRoleArrayOutput
}

type GetInstanceDataSourceExternalSecretVaultAppRoleArray []GetInstanceDataSourceExternalSecretVaultAppRoleInput

func (GetInstanceDataSourceExternalSecretVaultAppRoleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceDataSourceExternalSecretVaultAppRole)(nil)).Elem()
}

func (i GetInstanceDataSourceExternalSecretVaultAppRoleArray) ToGetInstanceDataSourceExternalSecretVaultAppRoleArrayOutput() GetInstanceDataSourceExternalSecretVaultAppRoleArrayOutput {
	return i.ToGetInstanceDataSourceExternalSecretVaultAppRoleArrayOutputWithContext(context.Background())
}

func (i GetInstanceDataSourceExternalSecretVaultAppRoleArray) ToGetInstanceDataSourceExternalSecretVaultAppRoleArrayOutputWithContext(ctx context.Context) GetInstanceDataSourceExternalSecretVaultAppRoleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceDataSourceExternalSecretVaultAppRoleArrayOutput)
}

type GetInstanceDataSourceExternalSecretVaultAppRoleOutput struct{ *pulumi.OutputState }

func (GetInstanceDataSourceExternalSecretVaultAppRoleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceDataSourceExternalSecretVaultAppRole)(nil)).Elem()
}

func (o GetInstanceDataSourceExternalSecretVaultAppRoleOutput) ToGetInstanceDataSourceExternalSecretVaultAppRoleOutput() GetInstanceDataSourceExternalSecretVaultAppRoleOutput {
	return o
}

func (o GetInstanceDataSourceExternalSecretVaultAppRoleOutput) ToGetInstanceDataSourceExternalSecretVaultAppRoleOutputWithContext(ctx context.Context) GetInstanceDataSourceExternalSecretVaultAppRoleOutput {
	return o
}

// The app role id.
func (o GetInstanceDataSourceExternalSecretVaultAppRoleOutput) RoleId() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceDataSourceExternalSecretVaultAppRole) string { return v.RoleId }).(pulumi.StringOutput)
}

// The secret id for the role without ttl.
func (o GetInstanceDataSourceExternalSecretVaultAppRoleOutput) Secret() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceDataSourceExternalSecretVaultAppRole) string { return v.Secret }).(pulumi.StringOutput)
}

// The secret id type, can be PLAIN (plain text for the secret) or ENVIRONMENT (envirionment name for the secret).
func (o GetInstanceDataSourceExternalSecretVaultAppRoleOutput) SecretType() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceDataSourceExternalSecretVaultAppRole) string { return v.SecretType }).(pulumi.StringOutput)
}

type GetInstanceDataSourceExternalSecretVaultAppRoleArrayOutput struct{ *pulumi.OutputState }

func (GetInstanceDataSourceExternalSecretVaultAppRoleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceDataSourceExternalSecretVaultAppRole)(nil)).Elem()
}

func (o GetInstanceDataSourceExternalSecretVaultAppRoleArrayOutput) ToGetInstanceDataSourceExternalSecretVaultAppRoleArrayOutput() GetInstanceDataSourceExternalSecretVaultAppRoleArrayOutput {
	return o
}

func (o GetInstanceDataSourceExternalSecretVaultAppRoleArrayOutput) ToGetInstanceDataSourceExternalSecretVaultAppRoleArrayOutputWithContext(ctx context.Context) GetInstanceDataSourceExternalSecretVaultAppRoleArrayOutput {
	return o
}

func (o GetInstanceDataSourceExternalSecretVaultAppRoleArrayOutput) Index(i pulumi.IntInput) GetInstanceDataSourceExternalSecretVaultAppRoleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstanceDataSourceExternalSecretVaultAppRole {
		return vs[0].([]GetInstanceDataSourceExternalSecretVaultAppRole)[vs[1].(int)]
	}).(GetInstanceDataSourceExternalSecretVaultAppRoleOutput)
}

type GetPolicyDataSourceQueryPolicy struct {
	// Disallow running DDL statements in the SQL editor.
	DisallowDdl *bool `pulumi:"disallowDdl"`
	// Disallow running DML statements in the SQL editor.
	DisallowDml *bool `pulumi:"disallowDml"`
	// RESTRICTION_UNSPECIFIED means no restriction; FALLBACK will allows to query admin data sources when there is no read-only data source; DISALLOW will always disallow to query admin data sources.
	Restriction *string `pulumi:"restriction"`
}

// GetPolicyDataSourceQueryPolicyInput is an input type that accepts GetPolicyDataSourceQueryPolicyArgs and GetPolicyDataSourceQueryPolicyOutput values.
// You can construct a concrete instance of `GetPolicyDataSourceQueryPolicyInput` via:
//
//	GetPolicyDataSourceQueryPolicyArgs{...}
type GetPolicyDataSourceQueryPolicyInput interface {
	pulumi.Input

	ToGetPolicyDataSourceQueryPolicyOutput() GetPolicyDataSourceQueryPolicyOutput
	ToGetPolicyDataSourceQueryPolicyOutputWithContext(context.Context) GetPolicyDataSourceQueryPolicyOutput
}

type GetPolicyDataSourceQueryPolicyArgs struct {
	// Disallow running DDL statements in the SQL editor.
	DisallowDdl pulumi.BoolPtrInput `pulumi:"disallowDdl"`
	// Disallow running DML statements in the SQL editor.
	DisallowDml pulumi.BoolPtrInput `pulumi:"disallowDml"`
	// RESTRICTION_UNSPECIFIED means no restriction; FALLBACK will allows to query admin data sources when there is no read-only data source; DISALLOW will always disallow to query admin data sources.
	Restriction pulumi.StringPtrInput `pulumi:"restriction"`
}

func (GetPolicyDataSourceQueryPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicyDataSourceQueryPolicy)(nil)).Elem()
}

func (i GetPolicyDataSourceQueryPolicyArgs) ToGetPolicyDataSourceQueryPolicyOutput() GetPolicyDataSourceQueryPolicyOutput {
	return i.ToGetPolicyDataSourceQueryPolicyOutputWithContext(context.Background())
}

func (i GetPolicyDataSourceQueryPolicyArgs) ToGetPolicyDataSourceQueryPolicyOutputWithContext(ctx context.Context) GetPolicyDataSourceQueryPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicyDataSourceQueryPolicyOutput)
}

func (i GetPolicyDataSourceQueryPolicyArgs) ToGetPolicyDataSourceQueryPolicyPtrOutput() GetPolicyDataSourceQueryPolicyPtrOutput {
	return i.ToGetPolicyDataSourceQueryPolicyPtrOutputWithContext(context.Background())
}

func (i GetPolicyDataSourceQueryPolicyArgs) ToGetPolicyDataSourceQueryPolicyPtrOutputWithContext(ctx context.Context) GetPolicyDataSourceQueryPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicyDataSourceQueryPolicyOutput).ToGetPolicyDataSourceQueryPolicyPtrOutputWithContext(ctx)
}

// GetPolicyDataSourceQueryPolicyPtrInput is an input type that accepts GetPolicyDataSourceQueryPolicyArgs, GetPolicyDataSourceQueryPolicyPtr and GetPolicyDataSourceQueryPolicyPtrOutput values.
// You can construct a concrete instance of `GetPolicyDataSourceQueryPolicyPtrInput` via:
//
//	        GetPolicyDataSourceQueryPolicyArgs{...}
//
//	or:
//
//	        nil
type GetPolicyDataSourceQueryPolicyPtrInput interface {
	pulumi.Input

	ToGetPolicyDataSourceQueryPolicyPtrOutput() GetPolicyDataSourceQueryPolicyPtrOutput
	ToGetPolicyDataSourceQueryPolicyPtrOutputWithContext(context.Context) GetPolicyDataSourceQueryPolicyPtrOutput
}

type getPolicyDataSourceQueryPolicyPtrType GetPolicyDataSourceQueryPolicyArgs

func GetPolicyDataSourceQueryPolicyPtr(v *GetPolicyDataSourceQueryPolicyArgs) GetPolicyDataSourceQueryPolicyPtrInput {
	return (*getPolicyDataSourceQueryPolicyPtrType)(v)
}

func (*getPolicyDataSourceQueryPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetPolicyDataSourceQueryPolicy)(nil)).Elem()
}

func (i *getPolicyDataSourceQueryPolicyPtrType) ToGetPolicyDataSourceQueryPolicyPtrOutput() GetPolicyDataSourceQueryPolicyPtrOutput {
	return i.ToGetPolicyDataSourceQueryPolicyPtrOutputWithContext(context.Background())
}

func (i *getPolicyDataSourceQueryPolicyPtrType) ToGetPolicyDataSourceQueryPolicyPtrOutputWithContext(ctx context.Context) GetPolicyDataSourceQueryPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicyDataSourceQueryPolicyPtrOutput)
}

type GetPolicyDataSourceQueryPolicyOutput struct{ *pulumi.OutputState }

func (GetPolicyDataSourceQueryPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicyDataSourceQueryPolicy)(nil)).Elem()
}

func (o GetPolicyDataSourceQueryPolicyOutput) ToGetPolicyDataSourceQueryPolicyOutput() GetPolicyDataSourceQueryPolicyOutput {
	return o
}

func (o GetPolicyDataSourceQueryPolicyOutput) ToGetPolicyDataSourceQueryPolicyOutputWithContext(ctx context.Context) GetPolicyDataSourceQueryPolicyOutput {
	return o
}

func (o GetPolicyDataSourceQueryPolicyOutput) ToGetPolicyDataSourceQueryPolicyPtrOutput() GetPolicyDataSourceQueryPolicyPtrOutput {
	return o.ToGetPolicyDataSourceQueryPolicyPtrOutputWithContext(context.Background())
}

func (o GetPolicyDataSourceQueryPolicyOutput) ToGetPolicyDataSourceQueryPolicyPtrOutputWithContext(ctx context.Context) GetPolicyDataSourceQueryPolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetPolicyDataSourceQueryPolicy) *GetPolicyDataSourceQueryPolicy {
		return &v
	}).(GetPolicyDataSourceQueryPolicyPtrOutput)
}

// Disallow running DDL statements in the SQL editor.
func (o GetPolicyDataSourceQueryPolicyOutput) DisallowDdl() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetPolicyDataSourceQueryPolicy) *bool { return v.DisallowDdl }).(pulumi.BoolPtrOutput)
}

// Disallow running DML statements in the SQL editor.
func (o GetPolicyDataSourceQueryPolicyOutput) DisallowDml() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetPolicyDataSourceQueryPolicy) *bool { return v.DisallowDml }).(pulumi.BoolPtrOutput)
}

// RESTRICTION_UNSPECIFIED means no restriction; FALLBACK will allows to query admin data sources when there is no read-only data source; DISALLOW will always disallow to query admin data sources.
func (o GetPolicyDataSourceQueryPolicyOutput) Restriction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPolicyDataSourceQueryPolicy) *string { return v.Restriction }).(pulumi.StringPtrOutput)
}

type GetPolicyDataSourceQueryPolicyPtrOutput struct{ *pulumi.OutputState }

func (GetPolicyDataSourceQueryPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetPolicyDataSourceQueryPolicy)(nil)).Elem()
}

func (o GetPolicyDataSourceQueryPolicyPtrOutput) ToGetPolicyDataSourceQueryPolicyPtrOutput() GetPolicyDataSourceQueryPolicyPtrOutput {
	return o
}

func (o GetPolicyDataSourceQueryPolicyPtrOutput) ToGetPolicyDataSourceQueryPolicyPtrOutputWithContext(ctx context.Context) GetPolicyDataSourceQueryPolicyPtrOutput {
	return o
}

func (o GetPolicyDataSourceQueryPolicyPtrOutput) Elem() GetPolicyDataSourceQueryPolicyOutput {
	return o.ApplyT(func(v *GetPolicyDataSourceQueryPolicy) GetPolicyDataSourceQueryPolicy {
		if v != nil {
			return *v
		}
		var ret GetPolicyDataSourceQueryPolicy
		return ret
	}).(GetPolicyDataSourceQueryPolicyOutput)
}

// Disallow running DDL statements in the SQL editor.
func (o GetPolicyDataSourceQueryPolicyPtrOutput) DisallowDdl() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GetPolicyDataSourceQueryPolicy) *bool {
		if v == nil {
			return nil
		}
		return v.DisallowDdl
	}).(pulumi.BoolPtrOutput)
}

// Disallow running DML statements in the SQL editor.
func (o GetPolicyDataSourceQueryPolicyPtrOutput) DisallowDml() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GetPolicyDataSourceQueryPolicy) *bool {
		if v == nil {
			return nil
		}
		return v.DisallowDml
	}).(pulumi.BoolPtrOutput)
}

// RESTRICTION_UNSPECIFIED means no restriction; FALLBACK will allows to query admin data sources when there is no read-only data source; DISALLOW will always disallow to query admin data sources.
func (o GetPolicyDataSourceQueryPolicyPtrOutput) Restriction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetPolicyDataSourceQueryPolicy) *string {
		if v == nil {
			return nil
		}
		return v.Restriction
	}).(pulumi.StringPtrOutput)
}

type GetPolicyDisableCopyDataPolicy struct {
	// Restrict data copying
	Enable bool `pulumi:"enable"`
}

// GetPolicyDisableCopyDataPolicyInput is an input type that accepts GetPolicyDisableCopyDataPolicyArgs and GetPolicyDisableCopyDataPolicyOutput values.
// You can construct a concrete instance of `GetPolicyDisableCopyDataPolicyInput` via:
//
//	GetPolicyDisableCopyDataPolicyArgs{...}
type GetPolicyDisableCopyDataPolicyInput interface {
	pulumi.Input

	ToGetPolicyDisableCopyDataPolicyOutput() GetPolicyDisableCopyDataPolicyOutput
	ToGetPolicyDisableCopyDataPolicyOutputWithContext(context.Context) GetPolicyDisableCopyDataPolicyOutput
}

type GetPolicyDisableCopyDataPolicyArgs struct {
	// Restrict data copying
	Enable pulumi.BoolInput `pulumi:"enable"`
}

func (GetPolicyDisableCopyDataPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicyDisableCopyDataPolicy)(nil)).Elem()
}

func (i GetPolicyDisableCopyDataPolicyArgs) ToGetPolicyDisableCopyDataPolicyOutput() GetPolicyDisableCopyDataPolicyOutput {
	return i.ToGetPolicyDisableCopyDataPolicyOutputWithContext(context.Background())
}

func (i GetPolicyDisableCopyDataPolicyArgs) ToGetPolicyDisableCopyDataPolicyOutputWithContext(ctx context.Context) GetPolicyDisableCopyDataPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicyDisableCopyDataPolicyOutput)
}

func (i GetPolicyDisableCopyDataPolicyArgs) ToGetPolicyDisableCopyDataPolicyPtrOutput() GetPolicyDisableCopyDataPolicyPtrOutput {
	return i.ToGetPolicyDisableCopyDataPolicyPtrOutputWithContext(context.Background())
}

func (i GetPolicyDisableCopyDataPolicyArgs) ToGetPolicyDisableCopyDataPolicyPtrOutputWithContext(ctx context.Context) GetPolicyDisableCopyDataPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicyDisableCopyDataPolicyOutput).ToGetPolicyDisableCopyDataPolicyPtrOutputWithContext(ctx)
}

// GetPolicyDisableCopyDataPolicyPtrInput is an input type that accepts GetPolicyDisableCopyDataPolicyArgs, GetPolicyDisableCopyDataPolicyPtr and GetPolicyDisableCopyDataPolicyPtrOutput values.
// You can construct a concrete instance of `GetPolicyDisableCopyDataPolicyPtrInput` via:
//
//	        GetPolicyDisableCopyDataPolicyArgs{...}
//
//	or:
//
//	        nil
type GetPolicyDisableCopyDataPolicyPtrInput interface {
	pulumi.Input

	ToGetPolicyDisableCopyDataPolicyPtrOutput() GetPolicyDisableCopyDataPolicyPtrOutput
	ToGetPolicyDisableCopyDataPolicyPtrOutputWithContext(context.Context) GetPolicyDisableCopyDataPolicyPtrOutput
}

type getPolicyDisableCopyDataPolicyPtrType GetPolicyDisableCopyDataPolicyArgs

func GetPolicyDisableCopyDataPolicyPtr(v *GetPolicyDisableCopyDataPolicyArgs) GetPolicyDisableCopyDataPolicyPtrInput {
	return (*getPolicyDisableCopyDataPolicyPtrType)(v)
}

func (*getPolicyDisableCopyDataPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetPolicyDisableCopyDataPolicy)(nil)).Elem()
}

func (i *getPolicyDisableCopyDataPolicyPtrType) ToGetPolicyDisableCopyDataPolicyPtrOutput() GetPolicyDisableCopyDataPolicyPtrOutput {
	return i.ToGetPolicyDisableCopyDataPolicyPtrOutputWithContext(context.Background())
}

func (i *getPolicyDisableCopyDataPolicyPtrType) ToGetPolicyDisableCopyDataPolicyPtrOutputWithContext(ctx context.Context) GetPolicyDisableCopyDataPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicyDisableCopyDataPolicyPtrOutput)
}

type GetPolicyDisableCopyDataPolicyOutput struct{ *pulumi.OutputState }

func (GetPolicyDisableCopyDataPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicyDisableCopyDataPolicy)(nil)).Elem()
}

func (o GetPolicyDisableCopyDataPolicyOutput) ToGetPolicyDisableCopyDataPolicyOutput() GetPolicyDisableCopyDataPolicyOutput {
	return o
}

func (o GetPolicyDisableCopyDataPolicyOutput) ToGetPolicyDisableCopyDataPolicyOutputWithContext(ctx context.Context) GetPolicyDisableCopyDataPolicyOutput {
	return o
}

func (o GetPolicyDisableCopyDataPolicyOutput) ToGetPolicyDisableCopyDataPolicyPtrOutput() GetPolicyDisableCopyDataPolicyPtrOutput {
	return o.ToGetPolicyDisableCopyDataPolicyPtrOutputWithContext(context.Background())
}

func (o GetPolicyDisableCopyDataPolicyOutput) ToGetPolicyDisableCopyDataPolicyPtrOutputWithContext(ctx context.Context) GetPolicyDisableCopyDataPolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetPolicyDisableCopyDataPolicy) *GetPolicyDisableCopyDataPolicy {
		return &v
	}).(GetPolicyDisableCopyDataPolicyPtrOutput)
}

// Restrict data copying
func (o GetPolicyDisableCopyDataPolicyOutput) Enable() pulumi.BoolOutput {
	return o.ApplyT(func(v GetPolicyDisableCopyDataPolicy) bool { return v.Enable }).(pulumi.BoolOutput)
}

type GetPolicyDisableCopyDataPolicyPtrOutput struct{ *pulumi.OutputState }

func (GetPolicyDisableCopyDataPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetPolicyDisableCopyDataPolicy)(nil)).Elem()
}

func (o GetPolicyDisableCopyDataPolicyPtrOutput) ToGetPolicyDisableCopyDataPolicyPtrOutput() GetPolicyDisableCopyDataPolicyPtrOutput {
	return o
}

func (o GetPolicyDisableCopyDataPolicyPtrOutput) ToGetPolicyDisableCopyDataPolicyPtrOutputWithContext(ctx context.Context) GetPolicyDisableCopyDataPolicyPtrOutput {
	return o
}

func (o GetPolicyDisableCopyDataPolicyPtrOutput) Elem() GetPolicyDisableCopyDataPolicyOutput {
	return o.ApplyT(func(v *GetPolicyDisableCopyDataPolicy) GetPolicyDisableCopyDataPolicy {
		if v != nil {
			return *v
		}
		var ret GetPolicyDisableCopyDataPolicy
		return ret
	}).(GetPolicyDisableCopyDataPolicyOutput)
}

// Restrict data copying
func (o GetPolicyDisableCopyDataPolicyPtrOutput) Enable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GetPolicyDisableCopyDataPolicy) *bool {
		if v == nil {
			return nil
		}
		return &v.Enable
	}).(pulumi.BoolPtrOutput)
}

type GetPolicyGlobalMaskingPolicy struct {
	Rules []GetPolicyGlobalMaskingPolicyRule `pulumi:"rules"`
}

// GetPolicyGlobalMaskingPolicyInput is an input type that accepts GetPolicyGlobalMaskingPolicyArgs and GetPolicyGlobalMaskingPolicyOutput values.
// You can construct a concrete instance of `GetPolicyGlobalMaskingPolicyInput` via:
//
//	GetPolicyGlobalMaskingPolicyArgs{...}
type GetPolicyGlobalMaskingPolicyInput interface {
	pulumi.Input

	ToGetPolicyGlobalMaskingPolicyOutput() GetPolicyGlobalMaskingPolicyOutput
	ToGetPolicyGlobalMaskingPolicyOutputWithContext(context.Context) GetPolicyGlobalMaskingPolicyOutput
}

type GetPolicyGlobalMaskingPolicyArgs struct {
	Rules GetPolicyGlobalMaskingPolicyRuleArrayInput `pulumi:"rules"`
}

func (GetPolicyGlobalMaskingPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicyGlobalMaskingPolicy)(nil)).Elem()
}

func (i GetPolicyGlobalMaskingPolicyArgs) ToGetPolicyGlobalMaskingPolicyOutput() GetPolicyGlobalMaskingPolicyOutput {
	return i.ToGetPolicyGlobalMaskingPolicyOutputWithContext(context.Background())
}

func (i GetPolicyGlobalMaskingPolicyArgs) ToGetPolicyGlobalMaskingPolicyOutputWithContext(ctx context.Context) GetPolicyGlobalMaskingPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicyGlobalMaskingPolicyOutput)
}

func (i GetPolicyGlobalMaskingPolicyArgs) ToGetPolicyGlobalMaskingPolicyPtrOutput() GetPolicyGlobalMaskingPolicyPtrOutput {
	return i.ToGetPolicyGlobalMaskingPolicyPtrOutputWithContext(context.Background())
}

func (i GetPolicyGlobalMaskingPolicyArgs) ToGetPolicyGlobalMaskingPolicyPtrOutputWithContext(ctx context.Context) GetPolicyGlobalMaskingPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicyGlobalMaskingPolicyOutput).ToGetPolicyGlobalMaskingPolicyPtrOutputWithContext(ctx)
}

// GetPolicyGlobalMaskingPolicyPtrInput is an input type that accepts GetPolicyGlobalMaskingPolicyArgs, GetPolicyGlobalMaskingPolicyPtr and GetPolicyGlobalMaskingPolicyPtrOutput values.
// You can construct a concrete instance of `GetPolicyGlobalMaskingPolicyPtrInput` via:
//
//	        GetPolicyGlobalMaskingPolicyArgs{...}
//
//	or:
//
//	        nil
type GetPolicyGlobalMaskingPolicyPtrInput interface {
	pulumi.Input

	ToGetPolicyGlobalMaskingPolicyPtrOutput() GetPolicyGlobalMaskingPolicyPtrOutput
	ToGetPolicyGlobalMaskingPolicyPtrOutputWithContext(context.Context) GetPolicyGlobalMaskingPolicyPtrOutput
}

type getPolicyGlobalMaskingPolicyPtrType GetPolicyGlobalMaskingPolicyArgs

func GetPolicyGlobalMaskingPolicyPtr(v *GetPolicyGlobalMaskingPolicyArgs) GetPolicyGlobalMaskingPolicyPtrInput {
	return (*getPolicyGlobalMaskingPolicyPtrType)(v)
}

func (*getPolicyGlobalMaskingPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetPolicyGlobalMaskingPolicy)(nil)).Elem()
}

func (i *getPolicyGlobalMaskingPolicyPtrType) ToGetPolicyGlobalMaskingPolicyPtrOutput() GetPolicyGlobalMaskingPolicyPtrOutput {
	return i.ToGetPolicyGlobalMaskingPolicyPtrOutputWithContext(context.Background())
}

func (i *getPolicyGlobalMaskingPolicyPtrType) ToGetPolicyGlobalMaskingPolicyPtrOutputWithContext(ctx context.Context) GetPolicyGlobalMaskingPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicyGlobalMaskingPolicyPtrOutput)
}

type GetPolicyGlobalMaskingPolicyOutput struct{ *pulumi.OutputState }

func (GetPolicyGlobalMaskingPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicyGlobalMaskingPolicy)(nil)).Elem()
}

func (o GetPolicyGlobalMaskingPolicyOutput) ToGetPolicyGlobalMaskingPolicyOutput() GetPolicyGlobalMaskingPolicyOutput {
	return o
}

func (o GetPolicyGlobalMaskingPolicyOutput) ToGetPolicyGlobalMaskingPolicyOutputWithContext(ctx context.Context) GetPolicyGlobalMaskingPolicyOutput {
	return o
}

func (o GetPolicyGlobalMaskingPolicyOutput) ToGetPolicyGlobalMaskingPolicyPtrOutput() GetPolicyGlobalMaskingPolicyPtrOutput {
	return o.ToGetPolicyGlobalMaskingPolicyPtrOutputWithContext(context.Background())
}

func (o GetPolicyGlobalMaskingPolicyOutput) ToGetPolicyGlobalMaskingPolicyPtrOutputWithContext(ctx context.Context) GetPolicyGlobalMaskingPolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetPolicyGlobalMaskingPolicy) *GetPolicyGlobalMaskingPolicy {
		return &v
	}).(GetPolicyGlobalMaskingPolicyPtrOutput)
}

func (o GetPolicyGlobalMaskingPolicyOutput) Rules() GetPolicyGlobalMaskingPolicyRuleArrayOutput {
	return o.ApplyT(func(v GetPolicyGlobalMaskingPolicy) []GetPolicyGlobalMaskingPolicyRule { return v.Rules }).(GetPolicyGlobalMaskingPolicyRuleArrayOutput)
}

type GetPolicyGlobalMaskingPolicyPtrOutput struct{ *pulumi.OutputState }

func (GetPolicyGlobalMaskingPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetPolicyGlobalMaskingPolicy)(nil)).Elem()
}

func (o GetPolicyGlobalMaskingPolicyPtrOutput) ToGetPolicyGlobalMaskingPolicyPtrOutput() GetPolicyGlobalMaskingPolicyPtrOutput {
	return o
}

func (o GetPolicyGlobalMaskingPolicyPtrOutput) ToGetPolicyGlobalMaskingPolicyPtrOutputWithContext(ctx context.Context) GetPolicyGlobalMaskingPolicyPtrOutput {
	return o
}

func (o GetPolicyGlobalMaskingPolicyPtrOutput) Elem() GetPolicyGlobalMaskingPolicyOutput {
	return o.ApplyT(func(v *GetPolicyGlobalMaskingPolicy) GetPolicyGlobalMaskingPolicy {
		if v != nil {
			return *v
		}
		var ret GetPolicyGlobalMaskingPolicy
		return ret
	}).(GetPolicyGlobalMaskingPolicyOutput)
}

func (o GetPolicyGlobalMaskingPolicyPtrOutput) Rules() GetPolicyGlobalMaskingPolicyRuleArrayOutput {
	return o.ApplyT(func(v *GetPolicyGlobalMaskingPolicy) []GetPolicyGlobalMaskingPolicyRule {
		if v == nil {
			return nil
		}
		return v.Rules
	}).(GetPolicyGlobalMaskingPolicyRuleArrayOutput)
}

type GetPolicyGlobalMaskingPolicyRule struct {
	// The condition expression
	Condition string `pulumi:"condition"`
	// The unique rule id
	Id string `pulumi:"id"`
	// The semantic type id
	SemanticType string `pulumi:"semanticType"`
	// The title for the rule
	Title *string `pulumi:"title"`
}

// GetPolicyGlobalMaskingPolicyRuleInput is an input type that accepts GetPolicyGlobalMaskingPolicyRuleArgs and GetPolicyGlobalMaskingPolicyRuleOutput values.
// You can construct a concrete instance of `GetPolicyGlobalMaskingPolicyRuleInput` via:
//
//	GetPolicyGlobalMaskingPolicyRuleArgs{...}
type GetPolicyGlobalMaskingPolicyRuleInput interface {
	pulumi.Input

	ToGetPolicyGlobalMaskingPolicyRuleOutput() GetPolicyGlobalMaskingPolicyRuleOutput
	ToGetPolicyGlobalMaskingPolicyRuleOutputWithContext(context.Context) GetPolicyGlobalMaskingPolicyRuleOutput
}

type GetPolicyGlobalMaskingPolicyRuleArgs struct {
	// The condition expression
	Condition pulumi.StringInput `pulumi:"condition"`
	// The unique rule id
	Id pulumi.StringInput `pulumi:"id"`
	// The semantic type id
	SemanticType pulumi.StringInput `pulumi:"semanticType"`
	// The title for the rule
	Title pulumi.StringPtrInput `pulumi:"title"`
}

func (GetPolicyGlobalMaskingPolicyRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicyGlobalMaskingPolicyRule)(nil)).Elem()
}

func (i GetPolicyGlobalMaskingPolicyRuleArgs) ToGetPolicyGlobalMaskingPolicyRuleOutput() GetPolicyGlobalMaskingPolicyRuleOutput {
	return i.ToGetPolicyGlobalMaskingPolicyRuleOutputWithContext(context.Background())
}

func (i GetPolicyGlobalMaskingPolicyRuleArgs) ToGetPolicyGlobalMaskingPolicyRuleOutputWithContext(ctx context.Context) GetPolicyGlobalMaskingPolicyRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicyGlobalMaskingPolicyRuleOutput)
}

// GetPolicyGlobalMaskingPolicyRuleArrayInput is an input type that accepts GetPolicyGlobalMaskingPolicyRuleArray and GetPolicyGlobalMaskingPolicyRuleArrayOutput values.
// You can construct a concrete instance of `GetPolicyGlobalMaskingPolicyRuleArrayInput` via:
//
//	GetPolicyGlobalMaskingPolicyRuleArray{ GetPolicyGlobalMaskingPolicyRuleArgs{...} }
type GetPolicyGlobalMaskingPolicyRuleArrayInput interface {
	pulumi.Input

	ToGetPolicyGlobalMaskingPolicyRuleArrayOutput() GetPolicyGlobalMaskingPolicyRuleArrayOutput
	ToGetPolicyGlobalMaskingPolicyRuleArrayOutputWithContext(context.Context) GetPolicyGlobalMaskingPolicyRuleArrayOutput
}

type GetPolicyGlobalMaskingPolicyRuleArray []GetPolicyGlobalMaskingPolicyRuleInput

func (GetPolicyGlobalMaskingPolicyRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicyGlobalMaskingPolicyRule)(nil)).Elem()
}

func (i GetPolicyGlobalMaskingPolicyRuleArray) ToGetPolicyGlobalMaskingPolicyRuleArrayOutput() GetPolicyGlobalMaskingPolicyRuleArrayOutput {
	return i.ToGetPolicyGlobalMaskingPolicyRuleArrayOutputWithContext(context.Background())
}

func (i GetPolicyGlobalMaskingPolicyRuleArray) ToGetPolicyGlobalMaskingPolicyRuleArrayOutputWithContext(ctx context.Context) GetPolicyGlobalMaskingPolicyRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicyGlobalMaskingPolicyRuleArrayOutput)
}

type GetPolicyGlobalMaskingPolicyRuleOutput struct{ *pulumi.OutputState }

func (GetPolicyGlobalMaskingPolicyRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicyGlobalMaskingPolicyRule)(nil)).Elem()
}

func (o GetPolicyGlobalMaskingPolicyRuleOutput) ToGetPolicyGlobalMaskingPolicyRuleOutput() GetPolicyGlobalMaskingPolicyRuleOutput {
	return o
}

func (o GetPolicyGlobalMaskingPolicyRuleOutput) ToGetPolicyGlobalMaskingPolicyRuleOutputWithContext(ctx context.Context) GetPolicyGlobalMaskingPolicyRuleOutput {
	return o
}

// The condition expression
func (o GetPolicyGlobalMaskingPolicyRuleOutput) Condition() pulumi.StringOutput {
	return o.ApplyT(func(v GetPolicyGlobalMaskingPolicyRule) string { return v.Condition }).(pulumi.StringOutput)
}

// The unique rule id
func (o GetPolicyGlobalMaskingPolicyRuleOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetPolicyGlobalMaskingPolicyRule) string { return v.Id }).(pulumi.StringOutput)
}

// The semantic type id
func (o GetPolicyGlobalMaskingPolicyRuleOutput) SemanticType() pulumi.StringOutput {
	return o.ApplyT(func(v GetPolicyGlobalMaskingPolicyRule) string { return v.SemanticType }).(pulumi.StringOutput)
}

// The title for the rule
func (o GetPolicyGlobalMaskingPolicyRuleOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPolicyGlobalMaskingPolicyRule) *string { return v.Title }).(pulumi.StringPtrOutput)
}

type GetPolicyGlobalMaskingPolicyRuleArrayOutput struct{ *pulumi.OutputState }

func (GetPolicyGlobalMaskingPolicyRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicyGlobalMaskingPolicyRule)(nil)).Elem()
}

func (o GetPolicyGlobalMaskingPolicyRuleArrayOutput) ToGetPolicyGlobalMaskingPolicyRuleArrayOutput() GetPolicyGlobalMaskingPolicyRuleArrayOutput {
	return o
}

func (o GetPolicyGlobalMaskingPolicyRuleArrayOutput) ToGetPolicyGlobalMaskingPolicyRuleArrayOutputWithContext(ctx context.Context) GetPolicyGlobalMaskingPolicyRuleArrayOutput {
	return o
}

func (o GetPolicyGlobalMaskingPolicyRuleArrayOutput) Index(i pulumi.IntInput) GetPolicyGlobalMaskingPolicyRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPolicyGlobalMaskingPolicyRule {
		return vs[0].([]GetPolicyGlobalMaskingPolicyRule)[vs[1].(int)]
	}).(GetPolicyGlobalMaskingPolicyRuleOutput)
}

type GetPolicyMaskingExceptionPolicy struct {
	Exceptions []GetPolicyMaskingExceptionPolicyException `pulumi:"exceptions"`
}

// GetPolicyMaskingExceptionPolicyInput is an input type that accepts GetPolicyMaskingExceptionPolicyArgs and GetPolicyMaskingExceptionPolicyOutput values.
// You can construct a concrete instance of `GetPolicyMaskingExceptionPolicyInput` via:
//
//	GetPolicyMaskingExceptionPolicyArgs{...}
type GetPolicyMaskingExceptionPolicyInput interface {
	pulumi.Input

	ToGetPolicyMaskingExceptionPolicyOutput() GetPolicyMaskingExceptionPolicyOutput
	ToGetPolicyMaskingExceptionPolicyOutputWithContext(context.Context) GetPolicyMaskingExceptionPolicyOutput
}

type GetPolicyMaskingExceptionPolicyArgs struct {
	Exceptions GetPolicyMaskingExceptionPolicyExceptionArrayInput `pulumi:"exceptions"`
}

func (GetPolicyMaskingExceptionPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicyMaskingExceptionPolicy)(nil)).Elem()
}

func (i GetPolicyMaskingExceptionPolicyArgs) ToGetPolicyMaskingExceptionPolicyOutput() GetPolicyMaskingExceptionPolicyOutput {
	return i.ToGetPolicyMaskingExceptionPolicyOutputWithContext(context.Background())
}

func (i GetPolicyMaskingExceptionPolicyArgs) ToGetPolicyMaskingExceptionPolicyOutputWithContext(ctx context.Context) GetPolicyMaskingExceptionPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicyMaskingExceptionPolicyOutput)
}

func (i GetPolicyMaskingExceptionPolicyArgs) ToGetPolicyMaskingExceptionPolicyPtrOutput() GetPolicyMaskingExceptionPolicyPtrOutput {
	return i.ToGetPolicyMaskingExceptionPolicyPtrOutputWithContext(context.Background())
}

func (i GetPolicyMaskingExceptionPolicyArgs) ToGetPolicyMaskingExceptionPolicyPtrOutputWithContext(ctx context.Context) GetPolicyMaskingExceptionPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicyMaskingExceptionPolicyOutput).ToGetPolicyMaskingExceptionPolicyPtrOutputWithContext(ctx)
}

// GetPolicyMaskingExceptionPolicyPtrInput is an input type that accepts GetPolicyMaskingExceptionPolicyArgs, GetPolicyMaskingExceptionPolicyPtr and GetPolicyMaskingExceptionPolicyPtrOutput values.
// You can construct a concrete instance of `GetPolicyMaskingExceptionPolicyPtrInput` via:
//
//	        GetPolicyMaskingExceptionPolicyArgs{...}
//
//	or:
//
//	        nil
type GetPolicyMaskingExceptionPolicyPtrInput interface {
	pulumi.Input

	ToGetPolicyMaskingExceptionPolicyPtrOutput() GetPolicyMaskingExceptionPolicyPtrOutput
	ToGetPolicyMaskingExceptionPolicyPtrOutputWithContext(context.Context) GetPolicyMaskingExceptionPolicyPtrOutput
}

type getPolicyMaskingExceptionPolicyPtrType GetPolicyMaskingExceptionPolicyArgs

func GetPolicyMaskingExceptionPolicyPtr(v *GetPolicyMaskingExceptionPolicyArgs) GetPolicyMaskingExceptionPolicyPtrInput {
	return (*getPolicyMaskingExceptionPolicyPtrType)(v)
}

func (*getPolicyMaskingExceptionPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetPolicyMaskingExceptionPolicy)(nil)).Elem()
}

func (i *getPolicyMaskingExceptionPolicyPtrType) ToGetPolicyMaskingExceptionPolicyPtrOutput() GetPolicyMaskingExceptionPolicyPtrOutput {
	return i.ToGetPolicyMaskingExceptionPolicyPtrOutputWithContext(context.Background())
}

func (i *getPolicyMaskingExceptionPolicyPtrType) ToGetPolicyMaskingExceptionPolicyPtrOutputWithContext(ctx context.Context) GetPolicyMaskingExceptionPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicyMaskingExceptionPolicyPtrOutput)
}

type GetPolicyMaskingExceptionPolicyOutput struct{ *pulumi.OutputState }

func (GetPolicyMaskingExceptionPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicyMaskingExceptionPolicy)(nil)).Elem()
}

func (o GetPolicyMaskingExceptionPolicyOutput) ToGetPolicyMaskingExceptionPolicyOutput() GetPolicyMaskingExceptionPolicyOutput {
	return o
}

func (o GetPolicyMaskingExceptionPolicyOutput) ToGetPolicyMaskingExceptionPolicyOutputWithContext(ctx context.Context) GetPolicyMaskingExceptionPolicyOutput {
	return o
}

func (o GetPolicyMaskingExceptionPolicyOutput) ToGetPolicyMaskingExceptionPolicyPtrOutput() GetPolicyMaskingExceptionPolicyPtrOutput {
	return o.ToGetPolicyMaskingExceptionPolicyPtrOutputWithContext(context.Background())
}

func (o GetPolicyMaskingExceptionPolicyOutput) ToGetPolicyMaskingExceptionPolicyPtrOutputWithContext(ctx context.Context) GetPolicyMaskingExceptionPolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetPolicyMaskingExceptionPolicy) *GetPolicyMaskingExceptionPolicy {
		return &v
	}).(GetPolicyMaskingExceptionPolicyPtrOutput)
}

func (o GetPolicyMaskingExceptionPolicyOutput) Exceptions() GetPolicyMaskingExceptionPolicyExceptionArrayOutput {
	return o.ApplyT(func(v GetPolicyMaskingExceptionPolicy) []GetPolicyMaskingExceptionPolicyException {
		return v.Exceptions
	}).(GetPolicyMaskingExceptionPolicyExceptionArrayOutput)
}

type GetPolicyMaskingExceptionPolicyPtrOutput struct{ *pulumi.OutputState }

func (GetPolicyMaskingExceptionPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetPolicyMaskingExceptionPolicy)(nil)).Elem()
}

func (o GetPolicyMaskingExceptionPolicyPtrOutput) ToGetPolicyMaskingExceptionPolicyPtrOutput() GetPolicyMaskingExceptionPolicyPtrOutput {
	return o
}

func (o GetPolicyMaskingExceptionPolicyPtrOutput) ToGetPolicyMaskingExceptionPolicyPtrOutputWithContext(ctx context.Context) GetPolicyMaskingExceptionPolicyPtrOutput {
	return o
}

func (o GetPolicyMaskingExceptionPolicyPtrOutput) Elem() GetPolicyMaskingExceptionPolicyOutput {
	return o.ApplyT(func(v *GetPolicyMaskingExceptionPolicy) GetPolicyMaskingExceptionPolicy {
		if v != nil {
			return *v
		}
		var ret GetPolicyMaskingExceptionPolicy
		return ret
	}).(GetPolicyMaskingExceptionPolicyOutput)
}

func (o GetPolicyMaskingExceptionPolicyPtrOutput) Exceptions() GetPolicyMaskingExceptionPolicyExceptionArrayOutput {
	return o.ApplyT(func(v *GetPolicyMaskingExceptionPolicy) []GetPolicyMaskingExceptionPolicyException {
		if v == nil {
			return nil
		}
		return v.Exceptions
	}).(GetPolicyMaskingExceptionPolicyExceptionArrayOutput)
}

type GetPolicyMaskingExceptionPolicyException struct {
	Action string `pulumi:"action"`
	Column string `pulumi:"column"`
	// The database full name in instances/{instance resource id}/databases/{database name} format
	Database string `pulumi:"database"`
	// The expiration timestamp in YYYY-MM-DDThh:mm:ss.000Z format
	ExpireTimestamp string `pulumi:"expireTimestamp"`
	// The member in user:{email} or group:{email} format.
	Member string `pulumi:"member"`
	// The reason for the masking exemption
	Reason *string `pulumi:"reason"`
	Schema string  `pulumi:"schema"`
	Table  string  `pulumi:"table"`
}

// GetPolicyMaskingExceptionPolicyExceptionInput is an input type that accepts GetPolicyMaskingExceptionPolicyExceptionArgs and GetPolicyMaskingExceptionPolicyExceptionOutput values.
// You can construct a concrete instance of `GetPolicyMaskingExceptionPolicyExceptionInput` via:
//
//	GetPolicyMaskingExceptionPolicyExceptionArgs{...}
type GetPolicyMaskingExceptionPolicyExceptionInput interface {
	pulumi.Input

	ToGetPolicyMaskingExceptionPolicyExceptionOutput() GetPolicyMaskingExceptionPolicyExceptionOutput
	ToGetPolicyMaskingExceptionPolicyExceptionOutputWithContext(context.Context) GetPolicyMaskingExceptionPolicyExceptionOutput
}

type GetPolicyMaskingExceptionPolicyExceptionArgs struct {
	Action pulumi.StringInput `pulumi:"action"`
	Column pulumi.StringInput `pulumi:"column"`
	// The database full name in instances/{instance resource id}/databases/{database name} format
	Database pulumi.StringInput `pulumi:"database"`
	// The expiration timestamp in YYYY-MM-DDThh:mm:ss.000Z format
	ExpireTimestamp pulumi.StringInput `pulumi:"expireTimestamp"`
	// The member in user:{email} or group:{email} format.
	Member pulumi.StringInput `pulumi:"member"`
	// The reason for the masking exemption
	Reason pulumi.StringPtrInput `pulumi:"reason"`
	Schema pulumi.StringInput    `pulumi:"schema"`
	Table  pulumi.StringInput    `pulumi:"table"`
}

func (GetPolicyMaskingExceptionPolicyExceptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicyMaskingExceptionPolicyException)(nil)).Elem()
}

func (i GetPolicyMaskingExceptionPolicyExceptionArgs) ToGetPolicyMaskingExceptionPolicyExceptionOutput() GetPolicyMaskingExceptionPolicyExceptionOutput {
	return i.ToGetPolicyMaskingExceptionPolicyExceptionOutputWithContext(context.Background())
}

func (i GetPolicyMaskingExceptionPolicyExceptionArgs) ToGetPolicyMaskingExceptionPolicyExceptionOutputWithContext(ctx context.Context) GetPolicyMaskingExceptionPolicyExceptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicyMaskingExceptionPolicyExceptionOutput)
}

// GetPolicyMaskingExceptionPolicyExceptionArrayInput is an input type that accepts GetPolicyMaskingExceptionPolicyExceptionArray and GetPolicyMaskingExceptionPolicyExceptionArrayOutput values.
// You can construct a concrete instance of `GetPolicyMaskingExceptionPolicyExceptionArrayInput` via:
//
//	GetPolicyMaskingExceptionPolicyExceptionArray{ GetPolicyMaskingExceptionPolicyExceptionArgs{...} }
type GetPolicyMaskingExceptionPolicyExceptionArrayInput interface {
	pulumi.Input

	ToGetPolicyMaskingExceptionPolicyExceptionArrayOutput() GetPolicyMaskingExceptionPolicyExceptionArrayOutput
	ToGetPolicyMaskingExceptionPolicyExceptionArrayOutputWithContext(context.Context) GetPolicyMaskingExceptionPolicyExceptionArrayOutput
}

type GetPolicyMaskingExceptionPolicyExceptionArray []GetPolicyMaskingExceptionPolicyExceptionInput

func (GetPolicyMaskingExceptionPolicyExceptionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicyMaskingExceptionPolicyException)(nil)).Elem()
}

func (i GetPolicyMaskingExceptionPolicyExceptionArray) ToGetPolicyMaskingExceptionPolicyExceptionArrayOutput() GetPolicyMaskingExceptionPolicyExceptionArrayOutput {
	return i.ToGetPolicyMaskingExceptionPolicyExceptionArrayOutputWithContext(context.Background())
}

func (i GetPolicyMaskingExceptionPolicyExceptionArray) ToGetPolicyMaskingExceptionPolicyExceptionArrayOutputWithContext(ctx context.Context) GetPolicyMaskingExceptionPolicyExceptionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicyMaskingExceptionPolicyExceptionArrayOutput)
}

type GetPolicyMaskingExceptionPolicyExceptionOutput struct{ *pulumi.OutputState }

func (GetPolicyMaskingExceptionPolicyExceptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicyMaskingExceptionPolicyException)(nil)).Elem()
}

func (o GetPolicyMaskingExceptionPolicyExceptionOutput) ToGetPolicyMaskingExceptionPolicyExceptionOutput() GetPolicyMaskingExceptionPolicyExceptionOutput {
	return o
}

func (o GetPolicyMaskingExceptionPolicyExceptionOutput) ToGetPolicyMaskingExceptionPolicyExceptionOutputWithContext(ctx context.Context) GetPolicyMaskingExceptionPolicyExceptionOutput {
	return o
}

func (o GetPolicyMaskingExceptionPolicyExceptionOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v GetPolicyMaskingExceptionPolicyException) string { return v.Action }).(pulumi.StringOutput)
}

func (o GetPolicyMaskingExceptionPolicyExceptionOutput) Column() pulumi.StringOutput {
	return o.ApplyT(func(v GetPolicyMaskingExceptionPolicyException) string { return v.Column }).(pulumi.StringOutput)
}

// The database full name in instances/{instance resource id}/databases/{database name} format
func (o GetPolicyMaskingExceptionPolicyExceptionOutput) Database() pulumi.StringOutput {
	return o.ApplyT(func(v GetPolicyMaskingExceptionPolicyException) string { return v.Database }).(pulumi.StringOutput)
}

// The expiration timestamp in YYYY-MM-DDThh:mm:ss.000Z format
func (o GetPolicyMaskingExceptionPolicyExceptionOutput) ExpireTimestamp() pulumi.StringOutput {
	return o.ApplyT(func(v GetPolicyMaskingExceptionPolicyException) string { return v.ExpireTimestamp }).(pulumi.StringOutput)
}

// The member in user:{email} or group:{email} format.
func (o GetPolicyMaskingExceptionPolicyExceptionOutput) Member() pulumi.StringOutput {
	return o.ApplyT(func(v GetPolicyMaskingExceptionPolicyException) string { return v.Member }).(pulumi.StringOutput)
}

// The reason for the masking exemption
func (o GetPolicyMaskingExceptionPolicyExceptionOutput) Reason() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPolicyMaskingExceptionPolicyException) *string { return v.Reason }).(pulumi.StringPtrOutput)
}

func (o GetPolicyMaskingExceptionPolicyExceptionOutput) Schema() pulumi.StringOutput {
	return o.ApplyT(func(v GetPolicyMaskingExceptionPolicyException) string { return v.Schema }).(pulumi.StringOutput)
}

func (o GetPolicyMaskingExceptionPolicyExceptionOutput) Table() pulumi.StringOutput {
	return o.ApplyT(func(v GetPolicyMaskingExceptionPolicyException) string { return v.Table }).(pulumi.StringOutput)
}

type GetPolicyMaskingExceptionPolicyExceptionArrayOutput struct{ *pulumi.OutputState }

func (GetPolicyMaskingExceptionPolicyExceptionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicyMaskingExceptionPolicyException)(nil)).Elem()
}

func (o GetPolicyMaskingExceptionPolicyExceptionArrayOutput) ToGetPolicyMaskingExceptionPolicyExceptionArrayOutput() GetPolicyMaskingExceptionPolicyExceptionArrayOutput {
	return o
}

func (o GetPolicyMaskingExceptionPolicyExceptionArrayOutput) ToGetPolicyMaskingExceptionPolicyExceptionArrayOutputWithContext(ctx context.Context) GetPolicyMaskingExceptionPolicyExceptionArrayOutput {
	return o
}

func (o GetPolicyMaskingExceptionPolicyExceptionArrayOutput) Index(i pulumi.IntInput) GetPolicyMaskingExceptionPolicyExceptionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPolicyMaskingExceptionPolicyException {
		return vs[0].([]GetPolicyMaskingExceptionPolicyException)[vs[1].(int)]
	}).(GetPolicyMaskingExceptionPolicyExceptionOutput)
}

type GetPolicyRolloutPolicy struct {
	// If all check pass, the change will be rolled out and executed automatically.
	Automatic *bool `pulumi:"automatic"`
	// If any roles are specified, Bytebase requires users with those roles to manually roll out the change.
	Roles []string `pulumi:"roles"`
}

// GetPolicyRolloutPolicyInput is an input type that accepts GetPolicyRolloutPolicyArgs and GetPolicyRolloutPolicyOutput values.
// You can construct a concrete instance of `GetPolicyRolloutPolicyInput` via:
//
//	GetPolicyRolloutPolicyArgs{...}
type GetPolicyRolloutPolicyInput interface {
	pulumi.Input

	ToGetPolicyRolloutPolicyOutput() GetPolicyRolloutPolicyOutput
	ToGetPolicyRolloutPolicyOutputWithContext(context.Context) GetPolicyRolloutPolicyOutput
}

type GetPolicyRolloutPolicyArgs struct {
	// If all check pass, the change will be rolled out and executed automatically.
	Automatic pulumi.BoolPtrInput `pulumi:"automatic"`
	// If any roles are specified, Bytebase requires users with those roles to manually roll out the change.
	Roles pulumi.StringArrayInput `pulumi:"roles"`
}

func (GetPolicyRolloutPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicyRolloutPolicy)(nil)).Elem()
}

func (i GetPolicyRolloutPolicyArgs) ToGetPolicyRolloutPolicyOutput() GetPolicyRolloutPolicyOutput {
	return i.ToGetPolicyRolloutPolicyOutputWithContext(context.Background())
}

func (i GetPolicyRolloutPolicyArgs) ToGetPolicyRolloutPolicyOutputWithContext(ctx context.Context) GetPolicyRolloutPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicyRolloutPolicyOutput)
}

func (i GetPolicyRolloutPolicyArgs) ToGetPolicyRolloutPolicyPtrOutput() GetPolicyRolloutPolicyPtrOutput {
	return i.ToGetPolicyRolloutPolicyPtrOutputWithContext(context.Background())
}

func (i GetPolicyRolloutPolicyArgs) ToGetPolicyRolloutPolicyPtrOutputWithContext(ctx context.Context) GetPolicyRolloutPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicyRolloutPolicyOutput).ToGetPolicyRolloutPolicyPtrOutputWithContext(ctx)
}

// GetPolicyRolloutPolicyPtrInput is an input type that accepts GetPolicyRolloutPolicyArgs, GetPolicyRolloutPolicyPtr and GetPolicyRolloutPolicyPtrOutput values.
// You can construct a concrete instance of `GetPolicyRolloutPolicyPtrInput` via:
//
//	        GetPolicyRolloutPolicyArgs{...}
//
//	or:
//
//	        nil
type GetPolicyRolloutPolicyPtrInput interface {
	pulumi.Input

	ToGetPolicyRolloutPolicyPtrOutput() GetPolicyRolloutPolicyPtrOutput
	ToGetPolicyRolloutPolicyPtrOutputWithContext(context.Context) GetPolicyRolloutPolicyPtrOutput
}

type getPolicyRolloutPolicyPtrType GetPolicyRolloutPolicyArgs

func GetPolicyRolloutPolicyPtr(v *GetPolicyRolloutPolicyArgs) GetPolicyRolloutPolicyPtrInput {
	return (*getPolicyRolloutPolicyPtrType)(v)
}

func (*getPolicyRolloutPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetPolicyRolloutPolicy)(nil)).Elem()
}

func (i *getPolicyRolloutPolicyPtrType) ToGetPolicyRolloutPolicyPtrOutput() GetPolicyRolloutPolicyPtrOutput {
	return i.ToGetPolicyRolloutPolicyPtrOutputWithContext(context.Background())
}

func (i *getPolicyRolloutPolicyPtrType) ToGetPolicyRolloutPolicyPtrOutputWithContext(ctx context.Context) GetPolicyRolloutPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicyRolloutPolicyPtrOutput)
}

type GetPolicyRolloutPolicyOutput struct{ *pulumi.OutputState }

func (GetPolicyRolloutPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicyRolloutPolicy)(nil)).Elem()
}

func (o GetPolicyRolloutPolicyOutput) ToGetPolicyRolloutPolicyOutput() GetPolicyRolloutPolicyOutput {
	return o
}

func (o GetPolicyRolloutPolicyOutput) ToGetPolicyRolloutPolicyOutputWithContext(ctx context.Context) GetPolicyRolloutPolicyOutput {
	return o
}

func (o GetPolicyRolloutPolicyOutput) ToGetPolicyRolloutPolicyPtrOutput() GetPolicyRolloutPolicyPtrOutput {
	return o.ToGetPolicyRolloutPolicyPtrOutputWithContext(context.Background())
}

func (o GetPolicyRolloutPolicyOutput) ToGetPolicyRolloutPolicyPtrOutputWithContext(ctx context.Context) GetPolicyRolloutPolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetPolicyRolloutPolicy) *GetPolicyRolloutPolicy {
		return &v
	}).(GetPolicyRolloutPolicyPtrOutput)
}

// If all check pass, the change will be rolled out and executed automatically.
func (o GetPolicyRolloutPolicyOutput) Automatic() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetPolicyRolloutPolicy) *bool { return v.Automatic }).(pulumi.BoolPtrOutput)
}

// If any roles are specified, Bytebase requires users with those roles to manually roll out the change.
func (o GetPolicyRolloutPolicyOutput) Roles() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetPolicyRolloutPolicy) []string { return v.Roles }).(pulumi.StringArrayOutput)
}

type GetPolicyRolloutPolicyPtrOutput struct{ *pulumi.OutputState }

func (GetPolicyRolloutPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetPolicyRolloutPolicy)(nil)).Elem()
}

func (o GetPolicyRolloutPolicyPtrOutput) ToGetPolicyRolloutPolicyPtrOutput() GetPolicyRolloutPolicyPtrOutput {
	return o
}

func (o GetPolicyRolloutPolicyPtrOutput) ToGetPolicyRolloutPolicyPtrOutputWithContext(ctx context.Context) GetPolicyRolloutPolicyPtrOutput {
	return o
}

func (o GetPolicyRolloutPolicyPtrOutput) Elem() GetPolicyRolloutPolicyOutput {
	return o.ApplyT(func(v *GetPolicyRolloutPolicy) GetPolicyRolloutPolicy {
		if v != nil {
			return *v
		}
		var ret GetPolicyRolloutPolicy
		return ret
	}).(GetPolicyRolloutPolicyOutput)
}

// If all check pass, the change will be rolled out and executed automatically.
func (o GetPolicyRolloutPolicyPtrOutput) Automatic() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GetPolicyRolloutPolicy) *bool {
		if v == nil {
			return nil
		}
		return v.Automatic
	}).(pulumi.BoolPtrOutput)
}

// If any roles are specified, Bytebase requires users with those roles to manually roll out the change.
func (o GetPolicyRolloutPolicyPtrOutput) Roles() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GetPolicyRolloutPolicy) []string {
		if v == nil {
			return nil
		}
		return v.Roles
	}).(pulumi.StringArrayOutput)
}

type GetProjectWebhook struct {
	// If directMessage is set, the notification is sent directly to the persons and url will be ignored. Require IM integration for this function to work.
	DirectMessage *bool `pulumi:"directMessage"`
	// The webhook full name in projects/{resource id}/webhooks/{id} format.
	Name string `pulumi:"name"`
	// notification_types is the list of activities types that the webhook is interested in. Bytebase will only send notifications to the webhook if the activity type is in the list.
	NotificationTypes []string `pulumi:"notificationTypes"`
	// The webhook title
	Title string `pulumi:"title"`
	// The webhook type. Check https://github.com/bytebase/bytebase/blob/main/proto/v1/v1/project_service.proto#L449 for support types.
	Type string `pulumi:"type"`
	// The webhook URL
	Url string `pulumi:"url"`
}

// GetProjectWebhookInput is an input type that accepts GetProjectWebhookArgs and GetProjectWebhookOutput values.
// You can construct a concrete instance of `GetProjectWebhookInput` via:
//
//	GetProjectWebhookArgs{...}
type GetProjectWebhookInput interface {
	pulumi.Input

	ToGetProjectWebhookOutput() GetProjectWebhookOutput
	ToGetProjectWebhookOutputWithContext(context.Context) GetProjectWebhookOutput
}

type GetProjectWebhookArgs struct {
	// If directMessage is set, the notification is sent directly to the persons and url will be ignored. Require IM integration for this function to work.
	DirectMessage pulumi.BoolPtrInput `pulumi:"directMessage"`
	// The webhook full name in projects/{resource id}/webhooks/{id} format.
	Name pulumi.StringInput `pulumi:"name"`
	// notification_types is the list of activities types that the webhook is interested in. Bytebase will only send notifications to the webhook if the activity type is in the list.
	NotificationTypes pulumi.StringArrayInput `pulumi:"notificationTypes"`
	// The webhook title
	Title pulumi.StringInput `pulumi:"title"`
	// The webhook type. Check https://github.com/bytebase/bytebase/blob/main/proto/v1/v1/project_service.proto#L449 for support types.
	Type pulumi.StringInput `pulumi:"type"`
	// The webhook URL
	Url pulumi.StringInput `pulumi:"url"`
}

func (GetProjectWebhookArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProjectWebhook)(nil)).Elem()
}

func (i GetProjectWebhookArgs) ToGetProjectWebhookOutput() GetProjectWebhookOutput {
	return i.ToGetProjectWebhookOutputWithContext(context.Background())
}

func (i GetProjectWebhookArgs) ToGetProjectWebhookOutputWithContext(ctx context.Context) GetProjectWebhookOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProjectWebhookOutput)
}

// GetProjectWebhookArrayInput is an input type that accepts GetProjectWebhookArray and GetProjectWebhookArrayOutput values.
// You can construct a concrete instance of `GetProjectWebhookArrayInput` via:
//
//	GetProjectWebhookArray{ GetProjectWebhookArgs{...} }
type GetProjectWebhookArrayInput interface {
	pulumi.Input

	ToGetProjectWebhookArrayOutput() GetProjectWebhookArrayOutput
	ToGetProjectWebhookArrayOutputWithContext(context.Context) GetProjectWebhookArrayOutput
}

type GetProjectWebhookArray []GetProjectWebhookInput

func (GetProjectWebhookArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProjectWebhook)(nil)).Elem()
}

func (i GetProjectWebhookArray) ToGetProjectWebhookArrayOutput() GetProjectWebhookArrayOutput {
	return i.ToGetProjectWebhookArrayOutputWithContext(context.Background())
}

func (i GetProjectWebhookArray) ToGetProjectWebhookArrayOutputWithContext(ctx context.Context) GetProjectWebhookArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProjectWebhookArrayOutput)
}

type GetProjectWebhookOutput struct{ *pulumi.OutputState }

func (GetProjectWebhookOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProjectWebhook)(nil)).Elem()
}

func (o GetProjectWebhookOutput) ToGetProjectWebhookOutput() GetProjectWebhookOutput {
	return o
}

func (o GetProjectWebhookOutput) ToGetProjectWebhookOutputWithContext(ctx context.Context) GetProjectWebhookOutput {
	return o
}

// If directMessage is set, the notification is sent directly to the persons and url will be ignored. Require IM integration for this function to work.
func (o GetProjectWebhookOutput) DirectMessage() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetProjectWebhook) *bool { return v.DirectMessage }).(pulumi.BoolPtrOutput)
}

// The webhook full name in projects/{resource id}/webhooks/{id} format.
func (o GetProjectWebhookOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectWebhook) string { return v.Name }).(pulumi.StringOutput)
}

// notification_types is the list of activities types that the webhook is interested in. Bytebase will only send notifications to the webhook if the activity type is in the list.
func (o GetProjectWebhookOutput) NotificationTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetProjectWebhook) []string { return v.NotificationTypes }).(pulumi.StringArrayOutput)
}

// The webhook title
func (o GetProjectWebhookOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectWebhook) string { return v.Title }).(pulumi.StringOutput)
}

// The webhook type. Check https://github.com/bytebase/bytebase/blob/main/proto/v1/v1/project_service.proto#L449 for support types.
func (o GetProjectWebhookOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectWebhook) string { return v.Type }).(pulumi.StringOutput)
}

// The webhook URL
func (o GetProjectWebhookOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectWebhook) string { return v.Url }).(pulumi.StringOutput)
}

type GetProjectWebhookArrayOutput struct{ *pulumi.OutputState }

func (GetProjectWebhookArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProjectWebhook)(nil)).Elem()
}

func (o GetProjectWebhookArrayOutput) ToGetProjectWebhookArrayOutput() GetProjectWebhookArrayOutput {
	return o
}

func (o GetProjectWebhookArrayOutput) ToGetProjectWebhookArrayOutputWithContext(ctx context.Context) GetProjectWebhookArrayOutput {
	return o
}

func (o GetProjectWebhookArrayOutput) Index(i pulumi.IntInput) GetProjectWebhookOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetProjectWebhook {
		return vs[0].([]GetProjectWebhook)[vs[1].(int)]
	}).(GetProjectWebhookOutput)
}

type GetSettingApprovalFlow struct {
	Rules []GetSettingApprovalFlowRule `pulumi:"rules"`
}

// GetSettingApprovalFlowInput is an input type that accepts GetSettingApprovalFlowArgs and GetSettingApprovalFlowOutput values.
// You can construct a concrete instance of `GetSettingApprovalFlowInput` via:
//
//	GetSettingApprovalFlowArgs{...}
type GetSettingApprovalFlowInput interface {
	pulumi.Input

	ToGetSettingApprovalFlowOutput() GetSettingApprovalFlowOutput
	ToGetSettingApprovalFlowOutputWithContext(context.Context) GetSettingApprovalFlowOutput
}

type GetSettingApprovalFlowArgs struct {
	Rules GetSettingApprovalFlowRuleArrayInput `pulumi:"rules"`
}

func (GetSettingApprovalFlowArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSettingApprovalFlow)(nil)).Elem()
}

func (i GetSettingApprovalFlowArgs) ToGetSettingApprovalFlowOutput() GetSettingApprovalFlowOutput {
	return i.ToGetSettingApprovalFlowOutputWithContext(context.Background())
}

func (i GetSettingApprovalFlowArgs) ToGetSettingApprovalFlowOutputWithContext(ctx context.Context) GetSettingApprovalFlowOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSettingApprovalFlowOutput)
}

// GetSettingApprovalFlowArrayInput is an input type that accepts GetSettingApprovalFlowArray and GetSettingApprovalFlowArrayOutput values.
// You can construct a concrete instance of `GetSettingApprovalFlowArrayInput` via:
//
//	GetSettingApprovalFlowArray{ GetSettingApprovalFlowArgs{...} }
type GetSettingApprovalFlowArrayInput interface {
	pulumi.Input

	ToGetSettingApprovalFlowArrayOutput() GetSettingApprovalFlowArrayOutput
	ToGetSettingApprovalFlowArrayOutputWithContext(context.Context) GetSettingApprovalFlowArrayOutput
}

type GetSettingApprovalFlowArray []GetSettingApprovalFlowInput

func (GetSettingApprovalFlowArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSettingApprovalFlow)(nil)).Elem()
}

func (i GetSettingApprovalFlowArray) ToGetSettingApprovalFlowArrayOutput() GetSettingApprovalFlowArrayOutput {
	return i.ToGetSettingApprovalFlowArrayOutputWithContext(context.Background())
}

func (i GetSettingApprovalFlowArray) ToGetSettingApprovalFlowArrayOutputWithContext(ctx context.Context) GetSettingApprovalFlowArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSettingApprovalFlowArrayOutput)
}

type GetSettingApprovalFlowOutput struct{ *pulumi.OutputState }

func (GetSettingApprovalFlowOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSettingApprovalFlow)(nil)).Elem()
}

func (o GetSettingApprovalFlowOutput) ToGetSettingApprovalFlowOutput() GetSettingApprovalFlowOutput {
	return o
}

func (o GetSettingApprovalFlowOutput) ToGetSettingApprovalFlowOutputWithContext(ctx context.Context) GetSettingApprovalFlowOutput {
	return o
}

func (o GetSettingApprovalFlowOutput) Rules() GetSettingApprovalFlowRuleArrayOutput {
	return o.ApplyT(func(v GetSettingApprovalFlow) []GetSettingApprovalFlowRule { return v.Rules }).(GetSettingApprovalFlowRuleArrayOutput)
}

type GetSettingApprovalFlowArrayOutput struct{ *pulumi.OutputState }

func (GetSettingApprovalFlowArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSettingApprovalFlow)(nil)).Elem()
}

func (o GetSettingApprovalFlowArrayOutput) ToGetSettingApprovalFlowArrayOutput() GetSettingApprovalFlowArrayOutput {
	return o
}

func (o GetSettingApprovalFlowArrayOutput) ToGetSettingApprovalFlowArrayOutputWithContext(ctx context.Context) GetSettingApprovalFlowArrayOutput {
	return o
}

func (o GetSettingApprovalFlowArrayOutput) Index(i pulumi.IntInput) GetSettingApprovalFlowOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSettingApprovalFlow {
		return vs[0].([]GetSettingApprovalFlow)[vs[1].(int)]
	}).(GetSettingApprovalFlowOutput)
}

type GetSettingApprovalFlowRule struct {
	// Match any condition will trigger this approval flow.
	Conditions []GetSettingApprovalFlowRuleCondition `pulumi:"conditions"`
	Flows      []GetSettingApprovalFlowRuleFlow      `pulumi:"flows"`
}

// GetSettingApprovalFlowRuleInput is an input type that accepts GetSettingApprovalFlowRuleArgs and GetSettingApprovalFlowRuleOutput values.
// You can construct a concrete instance of `GetSettingApprovalFlowRuleInput` via:
//
//	GetSettingApprovalFlowRuleArgs{...}
type GetSettingApprovalFlowRuleInput interface {
	pulumi.Input

	ToGetSettingApprovalFlowRuleOutput() GetSettingApprovalFlowRuleOutput
	ToGetSettingApprovalFlowRuleOutputWithContext(context.Context) GetSettingApprovalFlowRuleOutput
}

type GetSettingApprovalFlowRuleArgs struct {
	// Match any condition will trigger this approval flow.
	Conditions GetSettingApprovalFlowRuleConditionArrayInput `pulumi:"conditions"`
	Flows      GetSettingApprovalFlowRuleFlowArrayInput      `pulumi:"flows"`
}

func (GetSettingApprovalFlowRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSettingApprovalFlowRule)(nil)).Elem()
}

func (i GetSettingApprovalFlowRuleArgs) ToGetSettingApprovalFlowRuleOutput() GetSettingApprovalFlowRuleOutput {
	return i.ToGetSettingApprovalFlowRuleOutputWithContext(context.Background())
}

func (i GetSettingApprovalFlowRuleArgs) ToGetSettingApprovalFlowRuleOutputWithContext(ctx context.Context) GetSettingApprovalFlowRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSettingApprovalFlowRuleOutput)
}

// GetSettingApprovalFlowRuleArrayInput is an input type that accepts GetSettingApprovalFlowRuleArray and GetSettingApprovalFlowRuleArrayOutput values.
// You can construct a concrete instance of `GetSettingApprovalFlowRuleArrayInput` via:
//
//	GetSettingApprovalFlowRuleArray{ GetSettingApprovalFlowRuleArgs{...} }
type GetSettingApprovalFlowRuleArrayInput interface {
	pulumi.Input

	ToGetSettingApprovalFlowRuleArrayOutput() GetSettingApprovalFlowRuleArrayOutput
	ToGetSettingApprovalFlowRuleArrayOutputWithContext(context.Context) GetSettingApprovalFlowRuleArrayOutput
}

type GetSettingApprovalFlowRuleArray []GetSettingApprovalFlowRuleInput

func (GetSettingApprovalFlowRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSettingApprovalFlowRule)(nil)).Elem()
}

func (i GetSettingApprovalFlowRuleArray) ToGetSettingApprovalFlowRuleArrayOutput() GetSettingApprovalFlowRuleArrayOutput {
	return i.ToGetSettingApprovalFlowRuleArrayOutputWithContext(context.Background())
}

func (i GetSettingApprovalFlowRuleArray) ToGetSettingApprovalFlowRuleArrayOutputWithContext(ctx context.Context) GetSettingApprovalFlowRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSettingApprovalFlowRuleArrayOutput)
}

type GetSettingApprovalFlowRuleOutput struct{ *pulumi.OutputState }

func (GetSettingApprovalFlowRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSettingApprovalFlowRule)(nil)).Elem()
}

func (o GetSettingApprovalFlowRuleOutput) ToGetSettingApprovalFlowRuleOutput() GetSettingApprovalFlowRuleOutput {
	return o
}

func (o GetSettingApprovalFlowRuleOutput) ToGetSettingApprovalFlowRuleOutputWithContext(ctx context.Context) GetSettingApprovalFlowRuleOutput {
	return o
}

// Match any condition will trigger this approval flow.
func (o GetSettingApprovalFlowRuleOutput) Conditions() GetSettingApprovalFlowRuleConditionArrayOutput {
	return o.ApplyT(func(v GetSettingApprovalFlowRule) []GetSettingApprovalFlowRuleCondition { return v.Conditions }).(GetSettingApprovalFlowRuleConditionArrayOutput)
}

func (o GetSettingApprovalFlowRuleOutput) Flows() GetSettingApprovalFlowRuleFlowArrayOutput {
	return o.ApplyT(func(v GetSettingApprovalFlowRule) []GetSettingApprovalFlowRuleFlow { return v.Flows }).(GetSettingApprovalFlowRuleFlowArrayOutput)
}

type GetSettingApprovalFlowRuleArrayOutput struct{ *pulumi.OutputState }

func (GetSettingApprovalFlowRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSettingApprovalFlowRule)(nil)).Elem()
}

func (o GetSettingApprovalFlowRuleArrayOutput) ToGetSettingApprovalFlowRuleArrayOutput() GetSettingApprovalFlowRuleArrayOutput {
	return o
}

func (o GetSettingApprovalFlowRuleArrayOutput) ToGetSettingApprovalFlowRuleArrayOutputWithContext(ctx context.Context) GetSettingApprovalFlowRuleArrayOutput {
	return o
}

func (o GetSettingApprovalFlowRuleArrayOutput) Index(i pulumi.IntInput) GetSettingApprovalFlowRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSettingApprovalFlowRule {
		return vs[0].([]GetSettingApprovalFlowRule)[vs[1].(int)]
	}).(GetSettingApprovalFlowRuleOutput)
}

type GetSettingApprovalFlowRuleCondition struct {
	Level  string `pulumi:"level"`
	Source string `pulumi:"source"`
}

// GetSettingApprovalFlowRuleConditionInput is an input type that accepts GetSettingApprovalFlowRuleConditionArgs and GetSettingApprovalFlowRuleConditionOutput values.
// You can construct a concrete instance of `GetSettingApprovalFlowRuleConditionInput` via:
//
//	GetSettingApprovalFlowRuleConditionArgs{...}
type GetSettingApprovalFlowRuleConditionInput interface {
	pulumi.Input

	ToGetSettingApprovalFlowRuleConditionOutput() GetSettingApprovalFlowRuleConditionOutput
	ToGetSettingApprovalFlowRuleConditionOutputWithContext(context.Context) GetSettingApprovalFlowRuleConditionOutput
}

type GetSettingApprovalFlowRuleConditionArgs struct {
	Level  pulumi.StringInput `pulumi:"level"`
	Source pulumi.StringInput `pulumi:"source"`
}

func (GetSettingApprovalFlowRuleConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSettingApprovalFlowRuleCondition)(nil)).Elem()
}

func (i GetSettingApprovalFlowRuleConditionArgs) ToGetSettingApprovalFlowRuleConditionOutput() GetSettingApprovalFlowRuleConditionOutput {
	return i.ToGetSettingApprovalFlowRuleConditionOutputWithContext(context.Background())
}

func (i GetSettingApprovalFlowRuleConditionArgs) ToGetSettingApprovalFlowRuleConditionOutputWithContext(ctx context.Context) GetSettingApprovalFlowRuleConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSettingApprovalFlowRuleConditionOutput)
}

// GetSettingApprovalFlowRuleConditionArrayInput is an input type that accepts GetSettingApprovalFlowRuleConditionArray and GetSettingApprovalFlowRuleConditionArrayOutput values.
// You can construct a concrete instance of `GetSettingApprovalFlowRuleConditionArrayInput` via:
//
//	GetSettingApprovalFlowRuleConditionArray{ GetSettingApprovalFlowRuleConditionArgs{...} }
type GetSettingApprovalFlowRuleConditionArrayInput interface {
	pulumi.Input

	ToGetSettingApprovalFlowRuleConditionArrayOutput() GetSettingApprovalFlowRuleConditionArrayOutput
	ToGetSettingApprovalFlowRuleConditionArrayOutputWithContext(context.Context) GetSettingApprovalFlowRuleConditionArrayOutput
}

type GetSettingApprovalFlowRuleConditionArray []GetSettingApprovalFlowRuleConditionInput

func (GetSettingApprovalFlowRuleConditionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSettingApprovalFlowRuleCondition)(nil)).Elem()
}

func (i GetSettingApprovalFlowRuleConditionArray) ToGetSettingApprovalFlowRuleConditionArrayOutput() GetSettingApprovalFlowRuleConditionArrayOutput {
	return i.ToGetSettingApprovalFlowRuleConditionArrayOutputWithContext(context.Background())
}

func (i GetSettingApprovalFlowRuleConditionArray) ToGetSettingApprovalFlowRuleConditionArrayOutputWithContext(ctx context.Context) GetSettingApprovalFlowRuleConditionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSettingApprovalFlowRuleConditionArrayOutput)
}

type GetSettingApprovalFlowRuleConditionOutput struct{ *pulumi.OutputState }

func (GetSettingApprovalFlowRuleConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSettingApprovalFlowRuleCondition)(nil)).Elem()
}

func (o GetSettingApprovalFlowRuleConditionOutput) ToGetSettingApprovalFlowRuleConditionOutput() GetSettingApprovalFlowRuleConditionOutput {
	return o
}

func (o GetSettingApprovalFlowRuleConditionOutput) ToGetSettingApprovalFlowRuleConditionOutputWithContext(ctx context.Context) GetSettingApprovalFlowRuleConditionOutput {
	return o
}

func (o GetSettingApprovalFlowRuleConditionOutput) Level() pulumi.StringOutput {
	return o.ApplyT(func(v GetSettingApprovalFlowRuleCondition) string { return v.Level }).(pulumi.StringOutput)
}

func (o GetSettingApprovalFlowRuleConditionOutput) Source() pulumi.StringOutput {
	return o.ApplyT(func(v GetSettingApprovalFlowRuleCondition) string { return v.Source }).(pulumi.StringOutput)
}

type GetSettingApprovalFlowRuleConditionArrayOutput struct{ *pulumi.OutputState }

func (GetSettingApprovalFlowRuleConditionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSettingApprovalFlowRuleCondition)(nil)).Elem()
}

func (o GetSettingApprovalFlowRuleConditionArrayOutput) ToGetSettingApprovalFlowRuleConditionArrayOutput() GetSettingApprovalFlowRuleConditionArrayOutput {
	return o
}

func (o GetSettingApprovalFlowRuleConditionArrayOutput) ToGetSettingApprovalFlowRuleConditionArrayOutputWithContext(ctx context.Context) GetSettingApprovalFlowRuleConditionArrayOutput {
	return o
}

func (o GetSettingApprovalFlowRuleConditionArrayOutput) Index(i pulumi.IntInput) GetSettingApprovalFlowRuleConditionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSettingApprovalFlowRuleCondition {
		return vs[0].([]GetSettingApprovalFlowRuleCondition)[vs[1].(int)]
	}).(GetSettingApprovalFlowRuleConditionOutput)
}

type GetSettingApprovalFlowRuleFlow struct {
	Description string `pulumi:"description"`
	// Approval flow following the step order.
	Steps []GetSettingApprovalFlowRuleFlowStep `pulumi:"steps"`
	Title string                               `pulumi:"title"`
}

// GetSettingApprovalFlowRuleFlowInput is an input type that accepts GetSettingApprovalFlowRuleFlowArgs and GetSettingApprovalFlowRuleFlowOutput values.
// You can construct a concrete instance of `GetSettingApprovalFlowRuleFlowInput` via:
//
//	GetSettingApprovalFlowRuleFlowArgs{...}
type GetSettingApprovalFlowRuleFlowInput interface {
	pulumi.Input

	ToGetSettingApprovalFlowRuleFlowOutput() GetSettingApprovalFlowRuleFlowOutput
	ToGetSettingApprovalFlowRuleFlowOutputWithContext(context.Context) GetSettingApprovalFlowRuleFlowOutput
}

type GetSettingApprovalFlowRuleFlowArgs struct {
	Description pulumi.StringInput `pulumi:"description"`
	// Approval flow following the step order.
	Steps GetSettingApprovalFlowRuleFlowStepArrayInput `pulumi:"steps"`
	Title pulumi.StringInput                           `pulumi:"title"`
}

func (GetSettingApprovalFlowRuleFlowArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSettingApprovalFlowRuleFlow)(nil)).Elem()
}

func (i GetSettingApprovalFlowRuleFlowArgs) ToGetSettingApprovalFlowRuleFlowOutput() GetSettingApprovalFlowRuleFlowOutput {
	return i.ToGetSettingApprovalFlowRuleFlowOutputWithContext(context.Background())
}

func (i GetSettingApprovalFlowRuleFlowArgs) ToGetSettingApprovalFlowRuleFlowOutputWithContext(ctx context.Context) GetSettingApprovalFlowRuleFlowOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSettingApprovalFlowRuleFlowOutput)
}

// GetSettingApprovalFlowRuleFlowArrayInput is an input type that accepts GetSettingApprovalFlowRuleFlowArray and GetSettingApprovalFlowRuleFlowArrayOutput values.
// You can construct a concrete instance of `GetSettingApprovalFlowRuleFlowArrayInput` via:
//
//	GetSettingApprovalFlowRuleFlowArray{ GetSettingApprovalFlowRuleFlowArgs{...} }
type GetSettingApprovalFlowRuleFlowArrayInput interface {
	pulumi.Input

	ToGetSettingApprovalFlowRuleFlowArrayOutput() GetSettingApprovalFlowRuleFlowArrayOutput
	ToGetSettingApprovalFlowRuleFlowArrayOutputWithContext(context.Context) GetSettingApprovalFlowRuleFlowArrayOutput
}

type GetSettingApprovalFlowRuleFlowArray []GetSettingApprovalFlowRuleFlowInput

func (GetSettingApprovalFlowRuleFlowArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSettingApprovalFlowRuleFlow)(nil)).Elem()
}

func (i GetSettingApprovalFlowRuleFlowArray) ToGetSettingApprovalFlowRuleFlowArrayOutput() GetSettingApprovalFlowRuleFlowArrayOutput {
	return i.ToGetSettingApprovalFlowRuleFlowArrayOutputWithContext(context.Background())
}

func (i GetSettingApprovalFlowRuleFlowArray) ToGetSettingApprovalFlowRuleFlowArrayOutputWithContext(ctx context.Context) GetSettingApprovalFlowRuleFlowArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSettingApprovalFlowRuleFlowArrayOutput)
}

type GetSettingApprovalFlowRuleFlowOutput struct{ *pulumi.OutputState }

func (GetSettingApprovalFlowRuleFlowOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSettingApprovalFlowRuleFlow)(nil)).Elem()
}

func (o GetSettingApprovalFlowRuleFlowOutput) ToGetSettingApprovalFlowRuleFlowOutput() GetSettingApprovalFlowRuleFlowOutput {
	return o
}

func (o GetSettingApprovalFlowRuleFlowOutput) ToGetSettingApprovalFlowRuleFlowOutputWithContext(ctx context.Context) GetSettingApprovalFlowRuleFlowOutput {
	return o
}

func (o GetSettingApprovalFlowRuleFlowOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetSettingApprovalFlowRuleFlow) string { return v.Description }).(pulumi.StringOutput)
}

// Approval flow following the step order.
func (o GetSettingApprovalFlowRuleFlowOutput) Steps() GetSettingApprovalFlowRuleFlowStepArrayOutput {
	return o.ApplyT(func(v GetSettingApprovalFlowRuleFlow) []GetSettingApprovalFlowRuleFlowStep { return v.Steps }).(GetSettingApprovalFlowRuleFlowStepArrayOutput)
}

func (o GetSettingApprovalFlowRuleFlowOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v GetSettingApprovalFlowRuleFlow) string { return v.Title }).(pulumi.StringOutput)
}

type GetSettingApprovalFlowRuleFlowArrayOutput struct{ *pulumi.OutputState }

func (GetSettingApprovalFlowRuleFlowArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSettingApprovalFlowRuleFlow)(nil)).Elem()
}

func (o GetSettingApprovalFlowRuleFlowArrayOutput) ToGetSettingApprovalFlowRuleFlowArrayOutput() GetSettingApprovalFlowRuleFlowArrayOutput {
	return o
}

func (o GetSettingApprovalFlowRuleFlowArrayOutput) ToGetSettingApprovalFlowRuleFlowArrayOutputWithContext(ctx context.Context) GetSettingApprovalFlowRuleFlowArrayOutput {
	return o
}

func (o GetSettingApprovalFlowRuleFlowArrayOutput) Index(i pulumi.IntInput) GetSettingApprovalFlowRuleFlowOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSettingApprovalFlowRuleFlow {
		return vs[0].([]GetSettingApprovalFlowRuleFlow)[vs[1].(int)]
	}).(GetSettingApprovalFlowRuleFlowOutput)
}

type GetSettingApprovalFlowRuleFlowStep struct {
	// The role require to review in this step
	Role string `pulumi:"role"`
}

// GetSettingApprovalFlowRuleFlowStepInput is an input type that accepts GetSettingApprovalFlowRuleFlowStepArgs and GetSettingApprovalFlowRuleFlowStepOutput values.
// You can construct a concrete instance of `GetSettingApprovalFlowRuleFlowStepInput` via:
//
//	GetSettingApprovalFlowRuleFlowStepArgs{...}
type GetSettingApprovalFlowRuleFlowStepInput interface {
	pulumi.Input

	ToGetSettingApprovalFlowRuleFlowStepOutput() GetSettingApprovalFlowRuleFlowStepOutput
	ToGetSettingApprovalFlowRuleFlowStepOutputWithContext(context.Context) GetSettingApprovalFlowRuleFlowStepOutput
}

type GetSettingApprovalFlowRuleFlowStepArgs struct {
	// The role require to review in this step
	Role pulumi.StringInput `pulumi:"role"`
}

func (GetSettingApprovalFlowRuleFlowStepArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSettingApprovalFlowRuleFlowStep)(nil)).Elem()
}

func (i GetSettingApprovalFlowRuleFlowStepArgs) ToGetSettingApprovalFlowRuleFlowStepOutput() GetSettingApprovalFlowRuleFlowStepOutput {
	return i.ToGetSettingApprovalFlowRuleFlowStepOutputWithContext(context.Background())
}

func (i GetSettingApprovalFlowRuleFlowStepArgs) ToGetSettingApprovalFlowRuleFlowStepOutputWithContext(ctx context.Context) GetSettingApprovalFlowRuleFlowStepOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSettingApprovalFlowRuleFlowStepOutput)
}

// GetSettingApprovalFlowRuleFlowStepArrayInput is an input type that accepts GetSettingApprovalFlowRuleFlowStepArray and GetSettingApprovalFlowRuleFlowStepArrayOutput values.
// You can construct a concrete instance of `GetSettingApprovalFlowRuleFlowStepArrayInput` via:
//
//	GetSettingApprovalFlowRuleFlowStepArray{ GetSettingApprovalFlowRuleFlowStepArgs{...} }
type GetSettingApprovalFlowRuleFlowStepArrayInput interface {
	pulumi.Input

	ToGetSettingApprovalFlowRuleFlowStepArrayOutput() GetSettingApprovalFlowRuleFlowStepArrayOutput
	ToGetSettingApprovalFlowRuleFlowStepArrayOutputWithContext(context.Context) GetSettingApprovalFlowRuleFlowStepArrayOutput
}

type GetSettingApprovalFlowRuleFlowStepArray []GetSettingApprovalFlowRuleFlowStepInput

func (GetSettingApprovalFlowRuleFlowStepArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSettingApprovalFlowRuleFlowStep)(nil)).Elem()
}

func (i GetSettingApprovalFlowRuleFlowStepArray) ToGetSettingApprovalFlowRuleFlowStepArrayOutput() GetSettingApprovalFlowRuleFlowStepArrayOutput {
	return i.ToGetSettingApprovalFlowRuleFlowStepArrayOutputWithContext(context.Background())
}

func (i GetSettingApprovalFlowRuleFlowStepArray) ToGetSettingApprovalFlowRuleFlowStepArrayOutputWithContext(ctx context.Context) GetSettingApprovalFlowRuleFlowStepArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSettingApprovalFlowRuleFlowStepArrayOutput)
}

type GetSettingApprovalFlowRuleFlowStepOutput struct{ *pulumi.OutputState }

func (GetSettingApprovalFlowRuleFlowStepOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSettingApprovalFlowRuleFlowStep)(nil)).Elem()
}

func (o GetSettingApprovalFlowRuleFlowStepOutput) ToGetSettingApprovalFlowRuleFlowStepOutput() GetSettingApprovalFlowRuleFlowStepOutput {
	return o
}

func (o GetSettingApprovalFlowRuleFlowStepOutput) ToGetSettingApprovalFlowRuleFlowStepOutputWithContext(ctx context.Context) GetSettingApprovalFlowRuleFlowStepOutput {
	return o
}

// The role require to review in this step
func (o GetSettingApprovalFlowRuleFlowStepOutput) Role() pulumi.StringOutput {
	return o.ApplyT(func(v GetSettingApprovalFlowRuleFlowStep) string { return v.Role }).(pulumi.StringOutput)
}

type GetSettingApprovalFlowRuleFlowStepArrayOutput struct{ *pulumi.OutputState }

func (GetSettingApprovalFlowRuleFlowStepArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSettingApprovalFlowRuleFlowStep)(nil)).Elem()
}

func (o GetSettingApprovalFlowRuleFlowStepArrayOutput) ToGetSettingApprovalFlowRuleFlowStepArrayOutput() GetSettingApprovalFlowRuleFlowStepArrayOutput {
	return o
}

func (o GetSettingApprovalFlowRuleFlowStepArrayOutput) ToGetSettingApprovalFlowRuleFlowStepArrayOutputWithContext(ctx context.Context) GetSettingApprovalFlowRuleFlowStepArrayOutput {
	return o
}

func (o GetSettingApprovalFlowRuleFlowStepArrayOutput) Index(i pulumi.IntInput) GetSettingApprovalFlowRuleFlowStepOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSettingApprovalFlowRuleFlowStep {
		return vs[0].([]GetSettingApprovalFlowRuleFlowStep)[vs[1].(int)]
	}).(GetSettingApprovalFlowRuleFlowStepOutput)
}

type GetSettingClassification struct {
	// If true, we will only store the classification in the config. Otherwise we will get the classification from table/column comment, and write back to the schema metadata.
	ClassificationFromConfig bool                                     `pulumi:"classificationFromConfig"`
	Classifications          []GetSettingClassificationClassification `pulumi:"classifications"`
	// The classification unique uuid.
	Id     string                          `pulumi:"id"`
	Levels []GetSettingClassificationLevel `pulumi:"levels"`
	// The classification title. Optional.
	Title string `pulumi:"title"`
}

// GetSettingClassificationInput is an input type that accepts GetSettingClassificationArgs and GetSettingClassificationOutput values.
// You can construct a concrete instance of `GetSettingClassificationInput` via:
//
//	GetSettingClassificationArgs{...}
type GetSettingClassificationInput interface {
	pulumi.Input

	ToGetSettingClassificationOutput() GetSettingClassificationOutput
	ToGetSettingClassificationOutputWithContext(context.Context) GetSettingClassificationOutput
}

type GetSettingClassificationArgs struct {
	// If true, we will only store the classification in the config. Otherwise we will get the classification from table/column comment, and write back to the schema metadata.
	ClassificationFromConfig pulumi.BoolInput                                 `pulumi:"classificationFromConfig"`
	Classifications          GetSettingClassificationClassificationArrayInput `pulumi:"classifications"`
	// The classification unique uuid.
	Id     pulumi.StringInput                      `pulumi:"id"`
	Levels GetSettingClassificationLevelArrayInput `pulumi:"levels"`
	// The classification title. Optional.
	Title pulumi.StringInput `pulumi:"title"`
}

func (GetSettingClassificationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSettingClassification)(nil)).Elem()
}

func (i GetSettingClassificationArgs) ToGetSettingClassificationOutput() GetSettingClassificationOutput {
	return i.ToGetSettingClassificationOutputWithContext(context.Background())
}

func (i GetSettingClassificationArgs) ToGetSettingClassificationOutputWithContext(ctx context.Context) GetSettingClassificationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSettingClassificationOutput)
}

func (i GetSettingClassificationArgs) ToGetSettingClassificationPtrOutput() GetSettingClassificationPtrOutput {
	return i.ToGetSettingClassificationPtrOutputWithContext(context.Background())
}

func (i GetSettingClassificationArgs) ToGetSettingClassificationPtrOutputWithContext(ctx context.Context) GetSettingClassificationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSettingClassificationOutput).ToGetSettingClassificationPtrOutputWithContext(ctx)
}

// GetSettingClassificationPtrInput is an input type that accepts GetSettingClassificationArgs, GetSettingClassificationPtr and GetSettingClassificationPtrOutput values.
// You can construct a concrete instance of `GetSettingClassificationPtrInput` via:
//
//	        GetSettingClassificationArgs{...}
//
//	or:
//
//	        nil
type GetSettingClassificationPtrInput interface {
	pulumi.Input

	ToGetSettingClassificationPtrOutput() GetSettingClassificationPtrOutput
	ToGetSettingClassificationPtrOutputWithContext(context.Context) GetSettingClassificationPtrOutput
}

type getSettingClassificationPtrType GetSettingClassificationArgs

func GetSettingClassificationPtr(v *GetSettingClassificationArgs) GetSettingClassificationPtrInput {
	return (*getSettingClassificationPtrType)(v)
}

func (*getSettingClassificationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetSettingClassification)(nil)).Elem()
}

func (i *getSettingClassificationPtrType) ToGetSettingClassificationPtrOutput() GetSettingClassificationPtrOutput {
	return i.ToGetSettingClassificationPtrOutputWithContext(context.Background())
}

func (i *getSettingClassificationPtrType) ToGetSettingClassificationPtrOutputWithContext(ctx context.Context) GetSettingClassificationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSettingClassificationPtrOutput)
}

type GetSettingClassificationOutput struct{ *pulumi.OutputState }

func (GetSettingClassificationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSettingClassification)(nil)).Elem()
}

func (o GetSettingClassificationOutput) ToGetSettingClassificationOutput() GetSettingClassificationOutput {
	return o
}

func (o GetSettingClassificationOutput) ToGetSettingClassificationOutputWithContext(ctx context.Context) GetSettingClassificationOutput {
	return o
}

func (o GetSettingClassificationOutput) ToGetSettingClassificationPtrOutput() GetSettingClassificationPtrOutput {
	return o.ToGetSettingClassificationPtrOutputWithContext(context.Background())
}

func (o GetSettingClassificationOutput) ToGetSettingClassificationPtrOutputWithContext(ctx context.Context) GetSettingClassificationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetSettingClassification) *GetSettingClassification {
		return &v
	}).(GetSettingClassificationPtrOutput)
}

// If true, we will only store the classification in the config. Otherwise we will get the classification from table/column comment, and write back to the schema metadata.
func (o GetSettingClassificationOutput) ClassificationFromConfig() pulumi.BoolOutput {
	return o.ApplyT(func(v GetSettingClassification) bool { return v.ClassificationFromConfig }).(pulumi.BoolOutput)
}

func (o GetSettingClassificationOutput) Classifications() GetSettingClassificationClassificationArrayOutput {
	return o.ApplyT(func(v GetSettingClassification) []GetSettingClassificationClassification { return v.Classifications }).(GetSettingClassificationClassificationArrayOutput)
}

// The classification unique uuid.
func (o GetSettingClassificationOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetSettingClassification) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetSettingClassificationOutput) Levels() GetSettingClassificationLevelArrayOutput {
	return o.ApplyT(func(v GetSettingClassification) []GetSettingClassificationLevel { return v.Levels }).(GetSettingClassificationLevelArrayOutput)
}

// The classification title. Optional.
func (o GetSettingClassificationOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v GetSettingClassification) string { return v.Title }).(pulumi.StringOutput)
}

type GetSettingClassificationPtrOutput struct{ *pulumi.OutputState }

func (GetSettingClassificationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetSettingClassification)(nil)).Elem()
}

func (o GetSettingClassificationPtrOutput) ToGetSettingClassificationPtrOutput() GetSettingClassificationPtrOutput {
	return o
}

func (o GetSettingClassificationPtrOutput) ToGetSettingClassificationPtrOutputWithContext(ctx context.Context) GetSettingClassificationPtrOutput {
	return o
}

func (o GetSettingClassificationPtrOutput) Elem() GetSettingClassificationOutput {
	return o.ApplyT(func(v *GetSettingClassification) GetSettingClassification {
		if v != nil {
			return *v
		}
		var ret GetSettingClassification
		return ret
	}).(GetSettingClassificationOutput)
}

// If true, we will only store the classification in the config. Otherwise we will get the classification from table/column comment, and write back to the schema metadata.
func (o GetSettingClassificationPtrOutput) ClassificationFromConfig() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GetSettingClassification) *bool {
		if v == nil {
			return nil
		}
		return &v.ClassificationFromConfig
	}).(pulumi.BoolPtrOutput)
}

func (o GetSettingClassificationPtrOutput) Classifications() GetSettingClassificationClassificationArrayOutput {
	return o.ApplyT(func(v *GetSettingClassification) []GetSettingClassificationClassification {
		if v == nil {
			return nil
		}
		return v.Classifications
	}).(GetSettingClassificationClassificationArrayOutput)
}

// The classification unique uuid.
func (o GetSettingClassificationPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetSettingClassification) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

func (o GetSettingClassificationPtrOutput) Levels() GetSettingClassificationLevelArrayOutput {
	return o.ApplyT(func(v *GetSettingClassification) []GetSettingClassificationLevel {
		if v == nil {
			return nil
		}
		return v.Levels
	}).(GetSettingClassificationLevelArrayOutput)
}

// The classification title. Optional.
func (o GetSettingClassificationPtrOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetSettingClassification) *string {
		if v == nil {
			return nil
		}
		return &v.Title
	}).(pulumi.StringPtrOutput)
}

type GetSettingClassificationClassification struct {
	// The classification description.
	Description string `pulumi:"description"`
	// The classification unique id, must in {number}-{number} format.
	Id string `pulumi:"id"`
	// The classification level id.
	Level string `pulumi:"level"`
	// The classification title.
	Title string `pulumi:"title"`
}

// GetSettingClassificationClassificationInput is an input type that accepts GetSettingClassificationClassificationArgs and GetSettingClassificationClassificationOutput values.
// You can construct a concrete instance of `GetSettingClassificationClassificationInput` via:
//
//	GetSettingClassificationClassificationArgs{...}
type GetSettingClassificationClassificationInput interface {
	pulumi.Input

	ToGetSettingClassificationClassificationOutput() GetSettingClassificationClassificationOutput
	ToGetSettingClassificationClassificationOutputWithContext(context.Context) GetSettingClassificationClassificationOutput
}

type GetSettingClassificationClassificationArgs struct {
	// The classification description.
	Description pulumi.StringInput `pulumi:"description"`
	// The classification unique id, must in {number}-{number} format.
	Id pulumi.StringInput `pulumi:"id"`
	// The classification level id.
	Level pulumi.StringInput `pulumi:"level"`
	// The classification title.
	Title pulumi.StringInput `pulumi:"title"`
}

func (GetSettingClassificationClassificationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSettingClassificationClassification)(nil)).Elem()
}

func (i GetSettingClassificationClassificationArgs) ToGetSettingClassificationClassificationOutput() GetSettingClassificationClassificationOutput {
	return i.ToGetSettingClassificationClassificationOutputWithContext(context.Background())
}

func (i GetSettingClassificationClassificationArgs) ToGetSettingClassificationClassificationOutputWithContext(ctx context.Context) GetSettingClassificationClassificationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSettingClassificationClassificationOutput)
}

// GetSettingClassificationClassificationArrayInput is an input type that accepts GetSettingClassificationClassificationArray and GetSettingClassificationClassificationArrayOutput values.
// You can construct a concrete instance of `GetSettingClassificationClassificationArrayInput` via:
//
//	GetSettingClassificationClassificationArray{ GetSettingClassificationClassificationArgs{...} }
type GetSettingClassificationClassificationArrayInput interface {
	pulumi.Input

	ToGetSettingClassificationClassificationArrayOutput() GetSettingClassificationClassificationArrayOutput
	ToGetSettingClassificationClassificationArrayOutputWithContext(context.Context) GetSettingClassificationClassificationArrayOutput
}

type GetSettingClassificationClassificationArray []GetSettingClassificationClassificationInput

func (GetSettingClassificationClassificationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSettingClassificationClassification)(nil)).Elem()
}

func (i GetSettingClassificationClassificationArray) ToGetSettingClassificationClassificationArrayOutput() GetSettingClassificationClassificationArrayOutput {
	return i.ToGetSettingClassificationClassificationArrayOutputWithContext(context.Background())
}

func (i GetSettingClassificationClassificationArray) ToGetSettingClassificationClassificationArrayOutputWithContext(ctx context.Context) GetSettingClassificationClassificationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSettingClassificationClassificationArrayOutput)
}

type GetSettingClassificationClassificationOutput struct{ *pulumi.OutputState }

func (GetSettingClassificationClassificationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSettingClassificationClassification)(nil)).Elem()
}

func (o GetSettingClassificationClassificationOutput) ToGetSettingClassificationClassificationOutput() GetSettingClassificationClassificationOutput {
	return o
}

func (o GetSettingClassificationClassificationOutput) ToGetSettingClassificationClassificationOutputWithContext(ctx context.Context) GetSettingClassificationClassificationOutput {
	return o
}

// The classification description.
func (o GetSettingClassificationClassificationOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetSettingClassificationClassification) string { return v.Description }).(pulumi.StringOutput)
}

// The classification unique id, must in {number}-{number} format.
func (o GetSettingClassificationClassificationOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetSettingClassificationClassification) string { return v.Id }).(pulumi.StringOutput)
}

// The classification level id.
func (o GetSettingClassificationClassificationOutput) Level() pulumi.StringOutput {
	return o.ApplyT(func(v GetSettingClassificationClassification) string { return v.Level }).(pulumi.StringOutput)
}

// The classification title.
func (o GetSettingClassificationClassificationOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v GetSettingClassificationClassification) string { return v.Title }).(pulumi.StringOutput)
}

type GetSettingClassificationClassificationArrayOutput struct{ *pulumi.OutputState }

func (GetSettingClassificationClassificationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSettingClassificationClassification)(nil)).Elem()
}

func (o GetSettingClassificationClassificationArrayOutput) ToGetSettingClassificationClassificationArrayOutput() GetSettingClassificationClassificationArrayOutput {
	return o
}

func (o GetSettingClassificationClassificationArrayOutput) ToGetSettingClassificationClassificationArrayOutputWithContext(ctx context.Context) GetSettingClassificationClassificationArrayOutput {
	return o
}

func (o GetSettingClassificationClassificationArrayOutput) Index(i pulumi.IntInput) GetSettingClassificationClassificationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSettingClassificationClassification {
		return vs[0].([]GetSettingClassificationClassification)[vs[1].(int)]
	}).(GetSettingClassificationClassificationOutput)
}

type GetSettingClassificationLevel struct {
	// The classification level description.
	Description string `pulumi:"description"`
	// The classification level unique uuid.
	Id string `pulumi:"id"`
	// The classification level title.
	Title string `pulumi:"title"`
}

// GetSettingClassificationLevelInput is an input type that accepts GetSettingClassificationLevelArgs and GetSettingClassificationLevelOutput values.
// You can construct a concrete instance of `GetSettingClassificationLevelInput` via:
//
//	GetSettingClassificationLevelArgs{...}
type GetSettingClassificationLevelInput interface {
	pulumi.Input

	ToGetSettingClassificationLevelOutput() GetSettingClassificationLevelOutput
	ToGetSettingClassificationLevelOutputWithContext(context.Context) GetSettingClassificationLevelOutput
}

type GetSettingClassificationLevelArgs struct {
	// The classification level description.
	Description pulumi.StringInput `pulumi:"description"`
	// The classification level unique uuid.
	Id pulumi.StringInput `pulumi:"id"`
	// The classification level title.
	Title pulumi.StringInput `pulumi:"title"`
}

func (GetSettingClassificationLevelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSettingClassificationLevel)(nil)).Elem()
}

func (i GetSettingClassificationLevelArgs) ToGetSettingClassificationLevelOutput() GetSettingClassificationLevelOutput {
	return i.ToGetSettingClassificationLevelOutputWithContext(context.Background())
}

func (i GetSettingClassificationLevelArgs) ToGetSettingClassificationLevelOutputWithContext(ctx context.Context) GetSettingClassificationLevelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSettingClassificationLevelOutput)
}

// GetSettingClassificationLevelArrayInput is an input type that accepts GetSettingClassificationLevelArray and GetSettingClassificationLevelArrayOutput values.
// You can construct a concrete instance of `GetSettingClassificationLevelArrayInput` via:
//
//	GetSettingClassificationLevelArray{ GetSettingClassificationLevelArgs{...} }
type GetSettingClassificationLevelArrayInput interface {
	pulumi.Input

	ToGetSettingClassificationLevelArrayOutput() GetSettingClassificationLevelArrayOutput
	ToGetSettingClassificationLevelArrayOutputWithContext(context.Context) GetSettingClassificationLevelArrayOutput
}

type GetSettingClassificationLevelArray []GetSettingClassificationLevelInput

func (GetSettingClassificationLevelArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSettingClassificationLevel)(nil)).Elem()
}

func (i GetSettingClassificationLevelArray) ToGetSettingClassificationLevelArrayOutput() GetSettingClassificationLevelArrayOutput {
	return i.ToGetSettingClassificationLevelArrayOutputWithContext(context.Background())
}

func (i GetSettingClassificationLevelArray) ToGetSettingClassificationLevelArrayOutputWithContext(ctx context.Context) GetSettingClassificationLevelArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSettingClassificationLevelArrayOutput)
}

type GetSettingClassificationLevelOutput struct{ *pulumi.OutputState }

func (GetSettingClassificationLevelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSettingClassificationLevel)(nil)).Elem()
}

func (o GetSettingClassificationLevelOutput) ToGetSettingClassificationLevelOutput() GetSettingClassificationLevelOutput {
	return o
}

func (o GetSettingClassificationLevelOutput) ToGetSettingClassificationLevelOutputWithContext(ctx context.Context) GetSettingClassificationLevelOutput {
	return o
}

// The classification level description.
func (o GetSettingClassificationLevelOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetSettingClassificationLevel) string { return v.Description }).(pulumi.StringOutput)
}

// The classification level unique uuid.
func (o GetSettingClassificationLevelOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetSettingClassificationLevel) string { return v.Id }).(pulumi.StringOutput)
}

// The classification level title.
func (o GetSettingClassificationLevelOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v GetSettingClassificationLevel) string { return v.Title }).(pulumi.StringOutput)
}

type GetSettingClassificationLevelArrayOutput struct{ *pulumi.OutputState }

func (GetSettingClassificationLevelArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSettingClassificationLevel)(nil)).Elem()
}

func (o GetSettingClassificationLevelArrayOutput) ToGetSettingClassificationLevelArrayOutput() GetSettingClassificationLevelArrayOutput {
	return o
}

func (o GetSettingClassificationLevelArrayOutput) ToGetSettingClassificationLevelArrayOutputWithContext(ctx context.Context) GetSettingClassificationLevelArrayOutput {
	return o
}

func (o GetSettingClassificationLevelArrayOutput) Index(i pulumi.IntInput) GetSettingClassificationLevelOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSettingClassificationLevel {
		return vs[0].([]GetSettingClassificationLevel)[vs[1].(int)]
	}).(GetSettingClassificationLevelOutput)
}

type GetSettingEnvironmentSetting struct {
	Environments []GetSettingEnvironmentSettingEnvironment `pulumi:"environments"`
}

// GetSettingEnvironmentSettingInput is an input type that accepts GetSettingEnvironmentSettingArgs and GetSettingEnvironmentSettingOutput values.
// You can construct a concrete instance of `GetSettingEnvironmentSettingInput` via:
//
//	GetSettingEnvironmentSettingArgs{...}
type GetSettingEnvironmentSettingInput interface {
	pulumi.Input

	ToGetSettingEnvironmentSettingOutput() GetSettingEnvironmentSettingOutput
	ToGetSettingEnvironmentSettingOutputWithContext(context.Context) GetSettingEnvironmentSettingOutput
}

type GetSettingEnvironmentSettingArgs struct {
	Environments GetSettingEnvironmentSettingEnvironmentArrayInput `pulumi:"environments"`
}

func (GetSettingEnvironmentSettingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSettingEnvironmentSetting)(nil)).Elem()
}

func (i GetSettingEnvironmentSettingArgs) ToGetSettingEnvironmentSettingOutput() GetSettingEnvironmentSettingOutput {
	return i.ToGetSettingEnvironmentSettingOutputWithContext(context.Background())
}

func (i GetSettingEnvironmentSettingArgs) ToGetSettingEnvironmentSettingOutputWithContext(ctx context.Context) GetSettingEnvironmentSettingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSettingEnvironmentSettingOutput)
}

// GetSettingEnvironmentSettingArrayInput is an input type that accepts GetSettingEnvironmentSettingArray and GetSettingEnvironmentSettingArrayOutput values.
// You can construct a concrete instance of `GetSettingEnvironmentSettingArrayInput` via:
//
//	GetSettingEnvironmentSettingArray{ GetSettingEnvironmentSettingArgs{...} }
type GetSettingEnvironmentSettingArrayInput interface {
	pulumi.Input

	ToGetSettingEnvironmentSettingArrayOutput() GetSettingEnvironmentSettingArrayOutput
	ToGetSettingEnvironmentSettingArrayOutputWithContext(context.Context) GetSettingEnvironmentSettingArrayOutput
}

type GetSettingEnvironmentSettingArray []GetSettingEnvironmentSettingInput

func (GetSettingEnvironmentSettingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSettingEnvironmentSetting)(nil)).Elem()
}

func (i GetSettingEnvironmentSettingArray) ToGetSettingEnvironmentSettingArrayOutput() GetSettingEnvironmentSettingArrayOutput {
	return i.ToGetSettingEnvironmentSettingArrayOutputWithContext(context.Background())
}

func (i GetSettingEnvironmentSettingArray) ToGetSettingEnvironmentSettingArrayOutputWithContext(ctx context.Context) GetSettingEnvironmentSettingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSettingEnvironmentSettingArrayOutput)
}

type GetSettingEnvironmentSettingOutput struct{ *pulumi.OutputState }

func (GetSettingEnvironmentSettingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSettingEnvironmentSetting)(nil)).Elem()
}

func (o GetSettingEnvironmentSettingOutput) ToGetSettingEnvironmentSettingOutput() GetSettingEnvironmentSettingOutput {
	return o
}

func (o GetSettingEnvironmentSettingOutput) ToGetSettingEnvironmentSettingOutputWithContext(ctx context.Context) GetSettingEnvironmentSettingOutput {
	return o
}

func (o GetSettingEnvironmentSettingOutput) Environments() GetSettingEnvironmentSettingEnvironmentArrayOutput {
	return o.ApplyT(func(v GetSettingEnvironmentSetting) []GetSettingEnvironmentSettingEnvironment { return v.Environments }).(GetSettingEnvironmentSettingEnvironmentArrayOutput)
}

type GetSettingEnvironmentSettingArrayOutput struct{ *pulumi.OutputState }

func (GetSettingEnvironmentSettingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSettingEnvironmentSetting)(nil)).Elem()
}

func (o GetSettingEnvironmentSettingArrayOutput) ToGetSettingEnvironmentSettingArrayOutput() GetSettingEnvironmentSettingArrayOutput {
	return o
}

func (o GetSettingEnvironmentSettingArrayOutput) ToGetSettingEnvironmentSettingArrayOutputWithContext(ctx context.Context) GetSettingEnvironmentSettingArrayOutput {
	return o
}

func (o GetSettingEnvironmentSettingArrayOutput) Index(i pulumi.IntInput) GetSettingEnvironmentSettingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSettingEnvironmentSetting {
		return vs[0].([]GetSettingEnvironmentSetting)[vs[1].(int)]
	}).(GetSettingEnvironmentSettingOutput)
}

type GetSettingEnvironmentSettingEnvironment struct {
	// The environment color.
	Color *string `pulumi:"color"`
	// The environment unique id.
	Id string `pulumi:"id"`
	// The environment readonly name in environments/{id} format.
	Name string `pulumi:"name"`
	// The environment is protected or not.
	Protected *bool `pulumi:"protected"`
	// The environment display name.
	Title string `pulumi:"title"`
}

// GetSettingEnvironmentSettingEnvironmentInput is an input type that accepts GetSettingEnvironmentSettingEnvironmentArgs and GetSettingEnvironmentSettingEnvironmentOutput values.
// You can construct a concrete instance of `GetSettingEnvironmentSettingEnvironmentInput` via:
//
//	GetSettingEnvironmentSettingEnvironmentArgs{...}
type GetSettingEnvironmentSettingEnvironmentInput interface {
	pulumi.Input

	ToGetSettingEnvironmentSettingEnvironmentOutput() GetSettingEnvironmentSettingEnvironmentOutput
	ToGetSettingEnvironmentSettingEnvironmentOutputWithContext(context.Context) GetSettingEnvironmentSettingEnvironmentOutput
}

type GetSettingEnvironmentSettingEnvironmentArgs struct {
	// The environment color.
	Color pulumi.StringPtrInput `pulumi:"color"`
	// The environment unique id.
	Id pulumi.StringInput `pulumi:"id"`
	// The environment readonly name in environments/{id} format.
	Name pulumi.StringInput `pulumi:"name"`
	// The environment is protected or not.
	Protected pulumi.BoolPtrInput `pulumi:"protected"`
	// The environment display name.
	Title pulumi.StringInput `pulumi:"title"`
}

func (GetSettingEnvironmentSettingEnvironmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSettingEnvironmentSettingEnvironment)(nil)).Elem()
}

func (i GetSettingEnvironmentSettingEnvironmentArgs) ToGetSettingEnvironmentSettingEnvironmentOutput() GetSettingEnvironmentSettingEnvironmentOutput {
	return i.ToGetSettingEnvironmentSettingEnvironmentOutputWithContext(context.Background())
}

func (i GetSettingEnvironmentSettingEnvironmentArgs) ToGetSettingEnvironmentSettingEnvironmentOutputWithContext(ctx context.Context) GetSettingEnvironmentSettingEnvironmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSettingEnvironmentSettingEnvironmentOutput)
}

// GetSettingEnvironmentSettingEnvironmentArrayInput is an input type that accepts GetSettingEnvironmentSettingEnvironmentArray and GetSettingEnvironmentSettingEnvironmentArrayOutput values.
// You can construct a concrete instance of `GetSettingEnvironmentSettingEnvironmentArrayInput` via:
//
//	GetSettingEnvironmentSettingEnvironmentArray{ GetSettingEnvironmentSettingEnvironmentArgs{...} }
type GetSettingEnvironmentSettingEnvironmentArrayInput interface {
	pulumi.Input

	ToGetSettingEnvironmentSettingEnvironmentArrayOutput() GetSettingEnvironmentSettingEnvironmentArrayOutput
	ToGetSettingEnvironmentSettingEnvironmentArrayOutputWithContext(context.Context) GetSettingEnvironmentSettingEnvironmentArrayOutput
}

type GetSettingEnvironmentSettingEnvironmentArray []GetSettingEnvironmentSettingEnvironmentInput

func (GetSettingEnvironmentSettingEnvironmentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSettingEnvironmentSettingEnvironment)(nil)).Elem()
}

func (i GetSettingEnvironmentSettingEnvironmentArray) ToGetSettingEnvironmentSettingEnvironmentArrayOutput() GetSettingEnvironmentSettingEnvironmentArrayOutput {
	return i.ToGetSettingEnvironmentSettingEnvironmentArrayOutputWithContext(context.Background())
}

func (i GetSettingEnvironmentSettingEnvironmentArray) ToGetSettingEnvironmentSettingEnvironmentArrayOutputWithContext(ctx context.Context) GetSettingEnvironmentSettingEnvironmentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSettingEnvironmentSettingEnvironmentArrayOutput)
}

type GetSettingEnvironmentSettingEnvironmentOutput struct{ *pulumi.OutputState }

func (GetSettingEnvironmentSettingEnvironmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSettingEnvironmentSettingEnvironment)(nil)).Elem()
}

func (o GetSettingEnvironmentSettingEnvironmentOutput) ToGetSettingEnvironmentSettingEnvironmentOutput() GetSettingEnvironmentSettingEnvironmentOutput {
	return o
}

func (o GetSettingEnvironmentSettingEnvironmentOutput) ToGetSettingEnvironmentSettingEnvironmentOutputWithContext(ctx context.Context) GetSettingEnvironmentSettingEnvironmentOutput {
	return o
}

// The environment color.
func (o GetSettingEnvironmentSettingEnvironmentOutput) Color() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSettingEnvironmentSettingEnvironment) *string { return v.Color }).(pulumi.StringPtrOutput)
}

// The environment unique id.
func (o GetSettingEnvironmentSettingEnvironmentOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetSettingEnvironmentSettingEnvironment) string { return v.Id }).(pulumi.StringOutput)
}

// The environment readonly name in environments/{id} format.
func (o GetSettingEnvironmentSettingEnvironmentOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetSettingEnvironmentSettingEnvironment) string { return v.Name }).(pulumi.StringOutput)
}

// The environment is protected or not.
func (o GetSettingEnvironmentSettingEnvironmentOutput) Protected() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetSettingEnvironmentSettingEnvironment) *bool { return v.Protected }).(pulumi.BoolPtrOutput)
}

// The environment display name.
func (o GetSettingEnvironmentSettingEnvironmentOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v GetSettingEnvironmentSettingEnvironment) string { return v.Title }).(pulumi.StringOutput)
}

type GetSettingEnvironmentSettingEnvironmentArrayOutput struct{ *pulumi.OutputState }

func (GetSettingEnvironmentSettingEnvironmentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSettingEnvironmentSettingEnvironment)(nil)).Elem()
}

func (o GetSettingEnvironmentSettingEnvironmentArrayOutput) ToGetSettingEnvironmentSettingEnvironmentArrayOutput() GetSettingEnvironmentSettingEnvironmentArrayOutput {
	return o
}

func (o GetSettingEnvironmentSettingEnvironmentArrayOutput) ToGetSettingEnvironmentSettingEnvironmentArrayOutputWithContext(ctx context.Context) GetSettingEnvironmentSettingEnvironmentArrayOutput {
	return o
}

func (o GetSettingEnvironmentSettingEnvironmentArrayOutput) Index(i pulumi.IntInput) GetSettingEnvironmentSettingEnvironmentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSettingEnvironmentSettingEnvironment {
		return vs[0].([]GetSettingEnvironmentSettingEnvironment)[vs[1].(int)]
	}).(GetSettingEnvironmentSettingEnvironmentOutput)
}

type GetSettingPasswordRestriction struct {
	// min_length is the minimum length for password, should no less than 8.
	MinLength *int `pulumi:"minLength"`
	// password_rotation requires users to reset their password after the duration. The duration should be at least 86400 (one day).
	PasswordRotationInSeconds *int `pulumi:"passwordRotationInSeconds"`
	// require_letter requires the password must contains at least one letter, regardless of upper case or lower case.
	RequireLetter *bool `pulumi:"requireLetter"`
	// require_number requires the password must contains at least one number.
	RequireNumber *bool `pulumi:"requireNumber"`
	// require*reset*password*for*first_login requires users to reset their password after the 1st login.
	RequireResetPasswordForFirstLogin *bool `pulumi:"requireResetPasswordForFirstLogin"`
	// require*special*character requires the password must contains at least one special character.
	RequireSpecialCharacter *bool `pulumi:"requireSpecialCharacter"`
	// require*uppercase*letter requires the password must contains at least one upper case letter.
	RequireUppercaseLetter *bool `pulumi:"requireUppercaseLetter"`
}

// GetSettingPasswordRestrictionInput is an input type that accepts GetSettingPasswordRestrictionArgs and GetSettingPasswordRestrictionOutput values.
// You can construct a concrete instance of `GetSettingPasswordRestrictionInput` via:
//
//	GetSettingPasswordRestrictionArgs{...}
type GetSettingPasswordRestrictionInput interface {
	pulumi.Input

	ToGetSettingPasswordRestrictionOutput() GetSettingPasswordRestrictionOutput
	ToGetSettingPasswordRestrictionOutputWithContext(context.Context) GetSettingPasswordRestrictionOutput
}

type GetSettingPasswordRestrictionArgs struct {
	// min_length is the minimum length for password, should no less than 8.
	MinLength pulumi.IntPtrInput `pulumi:"minLength"`
	// password_rotation requires users to reset their password after the duration. The duration should be at least 86400 (one day).
	PasswordRotationInSeconds pulumi.IntPtrInput `pulumi:"passwordRotationInSeconds"`
	// require_letter requires the password must contains at least one letter, regardless of upper case or lower case.
	RequireLetter pulumi.BoolPtrInput `pulumi:"requireLetter"`
	// require_number requires the password must contains at least one number.
	RequireNumber pulumi.BoolPtrInput `pulumi:"requireNumber"`
	// require*reset*password*for*first_login requires users to reset their password after the 1st login.
	RequireResetPasswordForFirstLogin pulumi.BoolPtrInput `pulumi:"requireResetPasswordForFirstLogin"`
	// require*special*character requires the password must contains at least one special character.
	RequireSpecialCharacter pulumi.BoolPtrInput `pulumi:"requireSpecialCharacter"`
	// require*uppercase*letter requires the password must contains at least one upper case letter.
	RequireUppercaseLetter pulumi.BoolPtrInput `pulumi:"requireUppercaseLetter"`
}

func (GetSettingPasswordRestrictionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSettingPasswordRestriction)(nil)).Elem()
}

func (i GetSettingPasswordRestrictionArgs) ToGetSettingPasswordRestrictionOutput() GetSettingPasswordRestrictionOutput {
	return i.ToGetSettingPasswordRestrictionOutputWithContext(context.Background())
}

func (i GetSettingPasswordRestrictionArgs) ToGetSettingPasswordRestrictionOutputWithContext(ctx context.Context) GetSettingPasswordRestrictionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSettingPasswordRestrictionOutput)
}

func (i GetSettingPasswordRestrictionArgs) ToGetSettingPasswordRestrictionPtrOutput() GetSettingPasswordRestrictionPtrOutput {
	return i.ToGetSettingPasswordRestrictionPtrOutputWithContext(context.Background())
}

func (i GetSettingPasswordRestrictionArgs) ToGetSettingPasswordRestrictionPtrOutputWithContext(ctx context.Context) GetSettingPasswordRestrictionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSettingPasswordRestrictionOutput).ToGetSettingPasswordRestrictionPtrOutputWithContext(ctx)
}

// GetSettingPasswordRestrictionPtrInput is an input type that accepts GetSettingPasswordRestrictionArgs, GetSettingPasswordRestrictionPtr and GetSettingPasswordRestrictionPtrOutput values.
// You can construct a concrete instance of `GetSettingPasswordRestrictionPtrInput` via:
//
//	        GetSettingPasswordRestrictionArgs{...}
//
//	or:
//
//	        nil
type GetSettingPasswordRestrictionPtrInput interface {
	pulumi.Input

	ToGetSettingPasswordRestrictionPtrOutput() GetSettingPasswordRestrictionPtrOutput
	ToGetSettingPasswordRestrictionPtrOutputWithContext(context.Context) GetSettingPasswordRestrictionPtrOutput
}

type getSettingPasswordRestrictionPtrType GetSettingPasswordRestrictionArgs

func GetSettingPasswordRestrictionPtr(v *GetSettingPasswordRestrictionArgs) GetSettingPasswordRestrictionPtrInput {
	return (*getSettingPasswordRestrictionPtrType)(v)
}

func (*getSettingPasswordRestrictionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetSettingPasswordRestriction)(nil)).Elem()
}

func (i *getSettingPasswordRestrictionPtrType) ToGetSettingPasswordRestrictionPtrOutput() GetSettingPasswordRestrictionPtrOutput {
	return i.ToGetSettingPasswordRestrictionPtrOutputWithContext(context.Background())
}

func (i *getSettingPasswordRestrictionPtrType) ToGetSettingPasswordRestrictionPtrOutputWithContext(ctx context.Context) GetSettingPasswordRestrictionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSettingPasswordRestrictionPtrOutput)
}

type GetSettingPasswordRestrictionOutput struct{ *pulumi.OutputState }

func (GetSettingPasswordRestrictionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSettingPasswordRestriction)(nil)).Elem()
}

func (o GetSettingPasswordRestrictionOutput) ToGetSettingPasswordRestrictionOutput() GetSettingPasswordRestrictionOutput {
	return o
}

func (o GetSettingPasswordRestrictionOutput) ToGetSettingPasswordRestrictionOutputWithContext(ctx context.Context) GetSettingPasswordRestrictionOutput {
	return o
}

func (o GetSettingPasswordRestrictionOutput) ToGetSettingPasswordRestrictionPtrOutput() GetSettingPasswordRestrictionPtrOutput {
	return o.ToGetSettingPasswordRestrictionPtrOutputWithContext(context.Background())
}

func (o GetSettingPasswordRestrictionOutput) ToGetSettingPasswordRestrictionPtrOutputWithContext(ctx context.Context) GetSettingPasswordRestrictionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetSettingPasswordRestriction) *GetSettingPasswordRestriction {
		return &v
	}).(GetSettingPasswordRestrictionPtrOutput)
}

// min_length is the minimum length for password, should no less than 8.
func (o GetSettingPasswordRestrictionOutput) MinLength() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetSettingPasswordRestriction) *int { return v.MinLength }).(pulumi.IntPtrOutput)
}

// password_rotation requires users to reset their password after the duration. The duration should be at least 86400 (one day).
func (o GetSettingPasswordRestrictionOutput) PasswordRotationInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetSettingPasswordRestriction) *int { return v.PasswordRotationInSeconds }).(pulumi.IntPtrOutput)
}

// require_letter requires the password must contains at least one letter, regardless of upper case or lower case.
func (o GetSettingPasswordRestrictionOutput) RequireLetter() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetSettingPasswordRestriction) *bool { return v.RequireLetter }).(pulumi.BoolPtrOutput)
}

// require_number requires the password must contains at least one number.
func (o GetSettingPasswordRestrictionOutput) RequireNumber() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetSettingPasswordRestriction) *bool { return v.RequireNumber }).(pulumi.BoolPtrOutput)
}

// require*reset*password*for*first_login requires users to reset their password after the 1st login.
func (o GetSettingPasswordRestrictionOutput) RequireResetPasswordForFirstLogin() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetSettingPasswordRestriction) *bool { return v.RequireResetPasswordForFirstLogin }).(pulumi.BoolPtrOutput)
}

// require*special*character requires the password must contains at least one special character.
func (o GetSettingPasswordRestrictionOutput) RequireSpecialCharacter() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetSettingPasswordRestriction) *bool { return v.RequireSpecialCharacter }).(pulumi.BoolPtrOutput)
}

// require*uppercase*letter requires the password must contains at least one upper case letter.
func (o GetSettingPasswordRestrictionOutput) RequireUppercaseLetter() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetSettingPasswordRestriction) *bool { return v.RequireUppercaseLetter }).(pulumi.BoolPtrOutput)
}

type GetSettingPasswordRestrictionPtrOutput struct{ *pulumi.OutputState }

func (GetSettingPasswordRestrictionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetSettingPasswordRestriction)(nil)).Elem()
}

func (o GetSettingPasswordRestrictionPtrOutput) ToGetSettingPasswordRestrictionPtrOutput() GetSettingPasswordRestrictionPtrOutput {
	return o
}

func (o GetSettingPasswordRestrictionPtrOutput) ToGetSettingPasswordRestrictionPtrOutputWithContext(ctx context.Context) GetSettingPasswordRestrictionPtrOutput {
	return o
}

func (o GetSettingPasswordRestrictionPtrOutput) Elem() GetSettingPasswordRestrictionOutput {
	return o.ApplyT(func(v *GetSettingPasswordRestriction) GetSettingPasswordRestriction {
		if v != nil {
			return *v
		}
		var ret GetSettingPasswordRestriction
		return ret
	}).(GetSettingPasswordRestrictionOutput)
}

// min_length is the minimum length for password, should no less than 8.
func (o GetSettingPasswordRestrictionPtrOutput) MinLength() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GetSettingPasswordRestriction) *int {
		if v == nil {
			return nil
		}
		return v.MinLength
	}).(pulumi.IntPtrOutput)
}

// password_rotation requires users to reset their password after the duration. The duration should be at least 86400 (one day).
func (o GetSettingPasswordRestrictionPtrOutput) PasswordRotationInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GetSettingPasswordRestriction) *int {
		if v == nil {
			return nil
		}
		return v.PasswordRotationInSeconds
	}).(pulumi.IntPtrOutput)
}

// require_letter requires the password must contains at least one letter, regardless of upper case or lower case.
func (o GetSettingPasswordRestrictionPtrOutput) RequireLetter() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GetSettingPasswordRestriction) *bool {
		if v == nil {
			return nil
		}
		return v.RequireLetter
	}).(pulumi.BoolPtrOutput)
}

// require_number requires the password must contains at least one number.
func (o GetSettingPasswordRestrictionPtrOutput) RequireNumber() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GetSettingPasswordRestriction) *bool {
		if v == nil {
			return nil
		}
		return v.RequireNumber
	}).(pulumi.BoolPtrOutput)
}

// require*reset*password*for*first_login requires users to reset their password after the 1st login.
func (o GetSettingPasswordRestrictionPtrOutput) RequireResetPasswordForFirstLogin() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GetSettingPasswordRestriction) *bool {
		if v == nil {
			return nil
		}
		return v.RequireResetPasswordForFirstLogin
	}).(pulumi.BoolPtrOutput)
}

// require*special*character requires the password must contains at least one special character.
func (o GetSettingPasswordRestrictionPtrOutput) RequireSpecialCharacter() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GetSettingPasswordRestriction) *bool {
		if v == nil {
			return nil
		}
		return v.RequireSpecialCharacter
	}).(pulumi.BoolPtrOutput)
}

// require*uppercase*letter requires the password must contains at least one upper case letter.
func (o GetSettingPasswordRestrictionPtrOutput) RequireUppercaseLetter() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GetSettingPasswordRestriction) *bool {
		if v == nil {
			return nil
		}
		return v.RequireUppercaseLetter
	}).(pulumi.BoolPtrOutput)
}

type GetSettingSemanticType struct {
	// The semantic type algorithm. Required.
	Algorithm GetSettingSemanticTypeAlgorithm `pulumi:"algorithm"`
	// The semantic type description. Optional.
	Description string `pulumi:"description"`
	// The semantic type unique uuid.
	Id string `pulumi:"id"`
	// The semantic type title. Required.
	Title string `pulumi:"title"`
}

// GetSettingSemanticTypeInput is an input type that accepts GetSettingSemanticTypeArgs and GetSettingSemanticTypeOutput values.
// You can construct a concrete instance of `GetSettingSemanticTypeInput` via:
//
//	GetSettingSemanticTypeArgs{...}
type GetSettingSemanticTypeInput interface {
	pulumi.Input

	ToGetSettingSemanticTypeOutput() GetSettingSemanticTypeOutput
	ToGetSettingSemanticTypeOutputWithContext(context.Context) GetSettingSemanticTypeOutput
}

type GetSettingSemanticTypeArgs struct {
	// The semantic type algorithm. Required.
	Algorithm GetSettingSemanticTypeAlgorithmInput `pulumi:"algorithm"`
	// The semantic type description. Optional.
	Description pulumi.StringInput `pulumi:"description"`
	// The semantic type unique uuid.
	Id pulumi.StringInput `pulumi:"id"`
	// The semantic type title. Required.
	Title pulumi.StringInput `pulumi:"title"`
}

func (GetSettingSemanticTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSettingSemanticType)(nil)).Elem()
}

func (i GetSettingSemanticTypeArgs) ToGetSettingSemanticTypeOutput() GetSettingSemanticTypeOutput {
	return i.ToGetSettingSemanticTypeOutputWithContext(context.Background())
}

func (i GetSettingSemanticTypeArgs) ToGetSettingSemanticTypeOutputWithContext(ctx context.Context) GetSettingSemanticTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSettingSemanticTypeOutput)
}

// GetSettingSemanticTypeArrayInput is an input type that accepts GetSettingSemanticTypeArray and GetSettingSemanticTypeArrayOutput values.
// You can construct a concrete instance of `GetSettingSemanticTypeArrayInput` via:
//
//	GetSettingSemanticTypeArray{ GetSettingSemanticTypeArgs{...} }
type GetSettingSemanticTypeArrayInput interface {
	pulumi.Input

	ToGetSettingSemanticTypeArrayOutput() GetSettingSemanticTypeArrayOutput
	ToGetSettingSemanticTypeArrayOutputWithContext(context.Context) GetSettingSemanticTypeArrayOutput
}

type GetSettingSemanticTypeArray []GetSettingSemanticTypeInput

func (GetSettingSemanticTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSettingSemanticType)(nil)).Elem()
}

func (i GetSettingSemanticTypeArray) ToGetSettingSemanticTypeArrayOutput() GetSettingSemanticTypeArrayOutput {
	return i.ToGetSettingSemanticTypeArrayOutputWithContext(context.Background())
}

func (i GetSettingSemanticTypeArray) ToGetSettingSemanticTypeArrayOutputWithContext(ctx context.Context) GetSettingSemanticTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSettingSemanticTypeArrayOutput)
}

type GetSettingSemanticTypeOutput struct{ *pulumi.OutputState }

func (GetSettingSemanticTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSettingSemanticType)(nil)).Elem()
}

func (o GetSettingSemanticTypeOutput) ToGetSettingSemanticTypeOutput() GetSettingSemanticTypeOutput {
	return o
}

func (o GetSettingSemanticTypeOutput) ToGetSettingSemanticTypeOutputWithContext(ctx context.Context) GetSettingSemanticTypeOutput {
	return o
}

// The semantic type algorithm. Required.
func (o GetSettingSemanticTypeOutput) Algorithm() GetSettingSemanticTypeAlgorithmOutput {
	return o.ApplyT(func(v GetSettingSemanticType) GetSettingSemanticTypeAlgorithm { return v.Algorithm }).(GetSettingSemanticTypeAlgorithmOutput)
}

// The semantic type description. Optional.
func (o GetSettingSemanticTypeOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetSettingSemanticType) string { return v.Description }).(pulumi.StringOutput)
}

// The semantic type unique uuid.
func (o GetSettingSemanticTypeOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetSettingSemanticType) string { return v.Id }).(pulumi.StringOutput)
}

// The semantic type title. Required.
func (o GetSettingSemanticTypeOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v GetSettingSemanticType) string { return v.Title }).(pulumi.StringOutput)
}

type GetSettingSemanticTypeArrayOutput struct{ *pulumi.OutputState }

func (GetSettingSemanticTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSettingSemanticType)(nil)).Elem()
}

func (o GetSettingSemanticTypeArrayOutput) ToGetSettingSemanticTypeArrayOutput() GetSettingSemanticTypeArrayOutput {
	return o
}

func (o GetSettingSemanticTypeArrayOutput) ToGetSettingSemanticTypeArrayOutputWithContext(ctx context.Context) GetSettingSemanticTypeArrayOutput {
	return o
}

func (o GetSettingSemanticTypeArrayOutput) Index(i pulumi.IntInput) GetSettingSemanticTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSettingSemanticType {
		return vs[0].([]GetSettingSemanticType)[vs[1].(int)]
	}).(GetSettingSemanticTypeOutput)
}

type GetSettingSemanticTypeAlgorithm struct {
	FullMask       GetSettingSemanticTypeAlgorithmFullMask       `pulumi:"fullMask"`
	InnerOuterMask GetSettingSemanticTypeAlgorithmInnerOuterMask `pulumi:"innerOuterMask"`
	Md5Mask        GetSettingSemanticTypeAlgorithmMd5Mask        `pulumi:"md5Mask"`
	RangeMask      GetSettingSemanticTypeAlgorithmRangeMask      `pulumi:"rangeMask"`
}

// GetSettingSemanticTypeAlgorithmInput is an input type that accepts GetSettingSemanticTypeAlgorithmArgs and GetSettingSemanticTypeAlgorithmOutput values.
// You can construct a concrete instance of `GetSettingSemanticTypeAlgorithmInput` via:
//
//	GetSettingSemanticTypeAlgorithmArgs{...}
type GetSettingSemanticTypeAlgorithmInput interface {
	pulumi.Input

	ToGetSettingSemanticTypeAlgorithmOutput() GetSettingSemanticTypeAlgorithmOutput
	ToGetSettingSemanticTypeAlgorithmOutputWithContext(context.Context) GetSettingSemanticTypeAlgorithmOutput
}

type GetSettingSemanticTypeAlgorithmArgs struct {
	FullMask       GetSettingSemanticTypeAlgorithmFullMaskInput       `pulumi:"fullMask"`
	InnerOuterMask GetSettingSemanticTypeAlgorithmInnerOuterMaskInput `pulumi:"innerOuterMask"`
	Md5Mask        GetSettingSemanticTypeAlgorithmMd5MaskInput        `pulumi:"md5Mask"`
	RangeMask      GetSettingSemanticTypeAlgorithmRangeMaskInput      `pulumi:"rangeMask"`
}

func (GetSettingSemanticTypeAlgorithmArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSettingSemanticTypeAlgorithm)(nil)).Elem()
}

func (i GetSettingSemanticTypeAlgorithmArgs) ToGetSettingSemanticTypeAlgorithmOutput() GetSettingSemanticTypeAlgorithmOutput {
	return i.ToGetSettingSemanticTypeAlgorithmOutputWithContext(context.Background())
}

func (i GetSettingSemanticTypeAlgorithmArgs) ToGetSettingSemanticTypeAlgorithmOutputWithContext(ctx context.Context) GetSettingSemanticTypeAlgorithmOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSettingSemanticTypeAlgorithmOutput)
}

type GetSettingSemanticTypeAlgorithmOutput struct{ *pulumi.OutputState }

func (GetSettingSemanticTypeAlgorithmOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSettingSemanticTypeAlgorithm)(nil)).Elem()
}

func (o GetSettingSemanticTypeAlgorithmOutput) ToGetSettingSemanticTypeAlgorithmOutput() GetSettingSemanticTypeAlgorithmOutput {
	return o
}

func (o GetSettingSemanticTypeAlgorithmOutput) ToGetSettingSemanticTypeAlgorithmOutputWithContext(ctx context.Context) GetSettingSemanticTypeAlgorithmOutput {
	return o
}

func (o GetSettingSemanticTypeAlgorithmOutput) FullMask() GetSettingSemanticTypeAlgorithmFullMaskOutput {
	return o.ApplyT(func(v GetSettingSemanticTypeAlgorithm) GetSettingSemanticTypeAlgorithmFullMask { return v.FullMask }).(GetSettingSemanticTypeAlgorithmFullMaskOutput)
}

func (o GetSettingSemanticTypeAlgorithmOutput) InnerOuterMask() GetSettingSemanticTypeAlgorithmInnerOuterMaskOutput {
	return o.ApplyT(func(v GetSettingSemanticTypeAlgorithm) GetSettingSemanticTypeAlgorithmInnerOuterMask {
		return v.InnerOuterMask
	}).(GetSettingSemanticTypeAlgorithmInnerOuterMaskOutput)
}

func (o GetSettingSemanticTypeAlgorithmOutput) Md5Mask() GetSettingSemanticTypeAlgorithmMd5MaskOutput {
	return o.ApplyT(func(v GetSettingSemanticTypeAlgorithm) GetSettingSemanticTypeAlgorithmMd5Mask { return v.Md5Mask }).(GetSettingSemanticTypeAlgorithmMd5MaskOutput)
}

func (o GetSettingSemanticTypeAlgorithmOutput) RangeMask() GetSettingSemanticTypeAlgorithmRangeMaskOutput {
	return o.ApplyT(func(v GetSettingSemanticTypeAlgorithm) GetSettingSemanticTypeAlgorithmRangeMask { return v.RangeMask }).(GetSettingSemanticTypeAlgorithmRangeMaskOutput)
}

type GetSettingSemanticTypeAlgorithmFullMask struct {
	// Substitution is the string used to replace the original value, the max length of the string is 16 bytes.
	Substitution string `pulumi:"substitution"`
}

// GetSettingSemanticTypeAlgorithmFullMaskInput is an input type that accepts GetSettingSemanticTypeAlgorithmFullMaskArgs and GetSettingSemanticTypeAlgorithmFullMaskOutput values.
// You can construct a concrete instance of `GetSettingSemanticTypeAlgorithmFullMaskInput` via:
//
//	GetSettingSemanticTypeAlgorithmFullMaskArgs{...}
type GetSettingSemanticTypeAlgorithmFullMaskInput interface {
	pulumi.Input

	ToGetSettingSemanticTypeAlgorithmFullMaskOutput() GetSettingSemanticTypeAlgorithmFullMaskOutput
	ToGetSettingSemanticTypeAlgorithmFullMaskOutputWithContext(context.Context) GetSettingSemanticTypeAlgorithmFullMaskOutput
}

type GetSettingSemanticTypeAlgorithmFullMaskArgs struct {
	// Substitution is the string used to replace the original value, the max length of the string is 16 bytes.
	Substitution pulumi.StringInput `pulumi:"substitution"`
}

func (GetSettingSemanticTypeAlgorithmFullMaskArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSettingSemanticTypeAlgorithmFullMask)(nil)).Elem()
}

func (i GetSettingSemanticTypeAlgorithmFullMaskArgs) ToGetSettingSemanticTypeAlgorithmFullMaskOutput() GetSettingSemanticTypeAlgorithmFullMaskOutput {
	return i.ToGetSettingSemanticTypeAlgorithmFullMaskOutputWithContext(context.Background())
}

func (i GetSettingSemanticTypeAlgorithmFullMaskArgs) ToGetSettingSemanticTypeAlgorithmFullMaskOutputWithContext(ctx context.Context) GetSettingSemanticTypeAlgorithmFullMaskOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSettingSemanticTypeAlgorithmFullMaskOutput)
}

type GetSettingSemanticTypeAlgorithmFullMaskOutput struct{ *pulumi.OutputState }

func (GetSettingSemanticTypeAlgorithmFullMaskOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSettingSemanticTypeAlgorithmFullMask)(nil)).Elem()
}

func (o GetSettingSemanticTypeAlgorithmFullMaskOutput) ToGetSettingSemanticTypeAlgorithmFullMaskOutput() GetSettingSemanticTypeAlgorithmFullMaskOutput {
	return o
}

func (o GetSettingSemanticTypeAlgorithmFullMaskOutput) ToGetSettingSemanticTypeAlgorithmFullMaskOutputWithContext(ctx context.Context) GetSettingSemanticTypeAlgorithmFullMaskOutput {
	return o
}

// Substitution is the string used to replace the original value, the max length of the string is 16 bytes.
func (o GetSettingSemanticTypeAlgorithmFullMaskOutput) Substitution() pulumi.StringOutput {
	return o.ApplyT(func(v GetSettingSemanticTypeAlgorithmFullMask) string { return v.Substitution }).(pulumi.StringOutput)
}

type GetSettingSemanticTypeAlgorithmInnerOuterMask struct {
	// The length of prefix.
	PrefixLen int `pulumi:"prefixLen"`
	// Substitution is the string used to replace the inner or outer substring.
	Substitution string `pulumi:"substitution"`
	// The length of suffix.
	SuffixLen int `pulumi:"suffixLen"`
	// INNER or OUTER.
	Type string `pulumi:"type"`
}

// GetSettingSemanticTypeAlgorithmInnerOuterMaskInput is an input type that accepts GetSettingSemanticTypeAlgorithmInnerOuterMaskArgs and GetSettingSemanticTypeAlgorithmInnerOuterMaskOutput values.
// You can construct a concrete instance of `GetSettingSemanticTypeAlgorithmInnerOuterMaskInput` via:
//
//	GetSettingSemanticTypeAlgorithmInnerOuterMaskArgs{...}
type GetSettingSemanticTypeAlgorithmInnerOuterMaskInput interface {
	pulumi.Input

	ToGetSettingSemanticTypeAlgorithmInnerOuterMaskOutput() GetSettingSemanticTypeAlgorithmInnerOuterMaskOutput
	ToGetSettingSemanticTypeAlgorithmInnerOuterMaskOutputWithContext(context.Context) GetSettingSemanticTypeAlgorithmInnerOuterMaskOutput
}

type GetSettingSemanticTypeAlgorithmInnerOuterMaskArgs struct {
	// The length of prefix.
	PrefixLen pulumi.IntInput `pulumi:"prefixLen"`
	// Substitution is the string used to replace the inner or outer substring.
	Substitution pulumi.StringInput `pulumi:"substitution"`
	// The length of suffix.
	SuffixLen pulumi.IntInput `pulumi:"suffixLen"`
	// INNER or OUTER.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetSettingSemanticTypeAlgorithmInnerOuterMaskArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSettingSemanticTypeAlgorithmInnerOuterMask)(nil)).Elem()
}

func (i GetSettingSemanticTypeAlgorithmInnerOuterMaskArgs) ToGetSettingSemanticTypeAlgorithmInnerOuterMaskOutput() GetSettingSemanticTypeAlgorithmInnerOuterMaskOutput {
	return i.ToGetSettingSemanticTypeAlgorithmInnerOuterMaskOutputWithContext(context.Background())
}

func (i GetSettingSemanticTypeAlgorithmInnerOuterMaskArgs) ToGetSettingSemanticTypeAlgorithmInnerOuterMaskOutputWithContext(ctx context.Context) GetSettingSemanticTypeAlgorithmInnerOuterMaskOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSettingSemanticTypeAlgorithmInnerOuterMaskOutput)
}

type GetSettingSemanticTypeAlgorithmInnerOuterMaskOutput struct{ *pulumi.OutputState }

func (GetSettingSemanticTypeAlgorithmInnerOuterMaskOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSettingSemanticTypeAlgorithmInnerOuterMask)(nil)).Elem()
}

func (o GetSettingSemanticTypeAlgorithmInnerOuterMaskOutput) ToGetSettingSemanticTypeAlgorithmInnerOuterMaskOutput() GetSettingSemanticTypeAlgorithmInnerOuterMaskOutput {
	return o
}

func (o GetSettingSemanticTypeAlgorithmInnerOuterMaskOutput) ToGetSettingSemanticTypeAlgorithmInnerOuterMaskOutputWithContext(ctx context.Context) GetSettingSemanticTypeAlgorithmInnerOuterMaskOutput {
	return o
}

// The length of prefix.
func (o GetSettingSemanticTypeAlgorithmInnerOuterMaskOutput) PrefixLen() pulumi.IntOutput {
	return o.ApplyT(func(v GetSettingSemanticTypeAlgorithmInnerOuterMask) int { return v.PrefixLen }).(pulumi.IntOutput)
}

// Substitution is the string used to replace the inner or outer substring.
func (o GetSettingSemanticTypeAlgorithmInnerOuterMaskOutput) Substitution() pulumi.StringOutput {
	return o.ApplyT(func(v GetSettingSemanticTypeAlgorithmInnerOuterMask) string { return v.Substitution }).(pulumi.StringOutput)
}

// The length of suffix.
func (o GetSettingSemanticTypeAlgorithmInnerOuterMaskOutput) SuffixLen() pulumi.IntOutput {
	return o.ApplyT(func(v GetSettingSemanticTypeAlgorithmInnerOuterMask) int { return v.SuffixLen }).(pulumi.IntOutput)
}

// INNER or OUTER.
func (o GetSettingSemanticTypeAlgorithmInnerOuterMaskOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetSettingSemanticTypeAlgorithmInnerOuterMask) string { return v.Type }).(pulumi.StringOutput)
}

type GetSettingSemanticTypeAlgorithmMd5Mask struct {
	// Salt is the salt value to generate a different hash that with the word alone.
	Salt string `pulumi:"salt"`
}

// GetSettingSemanticTypeAlgorithmMd5MaskInput is an input type that accepts GetSettingSemanticTypeAlgorithmMd5MaskArgs and GetSettingSemanticTypeAlgorithmMd5MaskOutput values.
// You can construct a concrete instance of `GetSettingSemanticTypeAlgorithmMd5MaskInput` via:
//
//	GetSettingSemanticTypeAlgorithmMd5MaskArgs{...}
type GetSettingSemanticTypeAlgorithmMd5MaskInput interface {
	pulumi.Input

	ToGetSettingSemanticTypeAlgorithmMd5MaskOutput() GetSettingSemanticTypeAlgorithmMd5MaskOutput
	ToGetSettingSemanticTypeAlgorithmMd5MaskOutputWithContext(context.Context) GetSettingSemanticTypeAlgorithmMd5MaskOutput
}

type GetSettingSemanticTypeAlgorithmMd5MaskArgs struct {
	// Salt is the salt value to generate a different hash that with the word alone.
	Salt pulumi.StringInput `pulumi:"salt"`
}

func (GetSettingSemanticTypeAlgorithmMd5MaskArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSettingSemanticTypeAlgorithmMd5Mask)(nil)).Elem()
}

func (i GetSettingSemanticTypeAlgorithmMd5MaskArgs) ToGetSettingSemanticTypeAlgorithmMd5MaskOutput() GetSettingSemanticTypeAlgorithmMd5MaskOutput {
	return i.ToGetSettingSemanticTypeAlgorithmMd5MaskOutputWithContext(context.Background())
}

func (i GetSettingSemanticTypeAlgorithmMd5MaskArgs) ToGetSettingSemanticTypeAlgorithmMd5MaskOutputWithContext(ctx context.Context) GetSettingSemanticTypeAlgorithmMd5MaskOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSettingSemanticTypeAlgorithmMd5MaskOutput)
}

type GetSettingSemanticTypeAlgorithmMd5MaskOutput struct{ *pulumi.OutputState }

func (GetSettingSemanticTypeAlgorithmMd5MaskOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSettingSemanticTypeAlgorithmMd5Mask)(nil)).Elem()
}

func (o GetSettingSemanticTypeAlgorithmMd5MaskOutput) ToGetSettingSemanticTypeAlgorithmMd5MaskOutput() GetSettingSemanticTypeAlgorithmMd5MaskOutput {
	return o
}

func (o GetSettingSemanticTypeAlgorithmMd5MaskOutput) ToGetSettingSemanticTypeAlgorithmMd5MaskOutputWithContext(ctx context.Context) GetSettingSemanticTypeAlgorithmMd5MaskOutput {
	return o
}

// Salt is the salt value to generate a different hash that with the word alone.
func (o GetSettingSemanticTypeAlgorithmMd5MaskOutput) Salt() pulumi.StringOutput {
	return o.ApplyT(func(v GetSettingSemanticTypeAlgorithmMd5Mask) string { return v.Salt }).(pulumi.StringOutput)
}

type GetSettingSemanticTypeAlgorithmRangeMask struct {
	Slices []GetSettingSemanticTypeAlgorithmRangeMaskSlice `pulumi:"slices"`
}

// GetSettingSemanticTypeAlgorithmRangeMaskInput is an input type that accepts GetSettingSemanticTypeAlgorithmRangeMaskArgs and GetSettingSemanticTypeAlgorithmRangeMaskOutput values.
// You can construct a concrete instance of `GetSettingSemanticTypeAlgorithmRangeMaskInput` via:
//
//	GetSettingSemanticTypeAlgorithmRangeMaskArgs{...}
type GetSettingSemanticTypeAlgorithmRangeMaskInput interface {
	pulumi.Input

	ToGetSettingSemanticTypeAlgorithmRangeMaskOutput() GetSettingSemanticTypeAlgorithmRangeMaskOutput
	ToGetSettingSemanticTypeAlgorithmRangeMaskOutputWithContext(context.Context) GetSettingSemanticTypeAlgorithmRangeMaskOutput
}

type GetSettingSemanticTypeAlgorithmRangeMaskArgs struct {
	Slices GetSettingSemanticTypeAlgorithmRangeMaskSliceArrayInput `pulumi:"slices"`
}

func (GetSettingSemanticTypeAlgorithmRangeMaskArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSettingSemanticTypeAlgorithmRangeMask)(nil)).Elem()
}

func (i GetSettingSemanticTypeAlgorithmRangeMaskArgs) ToGetSettingSemanticTypeAlgorithmRangeMaskOutput() GetSettingSemanticTypeAlgorithmRangeMaskOutput {
	return i.ToGetSettingSemanticTypeAlgorithmRangeMaskOutputWithContext(context.Background())
}

func (i GetSettingSemanticTypeAlgorithmRangeMaskArgs) ToGetSettingSemanticTypeAlgorithmRangeMaskOutputWithContext(ctx context.Context) GetSettingSemanticTypeAlgorithmRangeMaskOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSettingSemanticTypeAlgorithmRangeMaskOutput)
}

type GetSettingSemanticTypeAlgorithmRangeMaskOutput struct{ *pulumi.OutputState }

func (GetSettingSemanticTypeAlgorithmRangeMaskOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSettingSemanticTypeAlgorithmRangeMask)(nil)).Elem()
}

func (o GetSettingSemanticTypeAlgorithmRangeMaskOutput) ToGetSettingSemanticTypeAlgorithmRangeMaskOutput() GetSettingSemanticTypeAlgorithmRangeMaskOutput {
	return o
}

func (o GetSettingSemanticTypeAlgorithmRangeMaskOutput) ToGetSettingSemanticTypeAlgorithmRangeMaskOutputWithContext(ctx context.Context) GetSettingSemanticTypeAlgorithmRangeMaskOutput {
	return o
}

func (o GetSettingSemanticTypeAlgorithmRangeMaskOutput) Slices() GetSettingSemanticTypeAlgorithmRangeMaskSliceArrayOutput {
	return o.ApplyT(func(v GetSettingSemanticTypeAlgorithmRangeMask) []GetSettingSemanticTypeAlgorithmRangeMaskSlice {
		return v.Slices
	}).(GetSettingSemanticTypeAlgorithmRangeMaskSliceArrayOutput)
}

type GetSettingSemanticTypeAlgorithmRangeMaskSlice struct {
	// End is the stop index of the original value, should be less than the length of the original value.
	End int `pulumi:"end"`
	// Start is the start index of the original value, start from 0 and should be less than stop.
	Start int `pulumi:"start"`
	// Substitution is the string used to replace the OriginalValue[start:end).
	Substitution string `pulumi:"substitution"`
}

// GetSettingSemanticTypeAlgorithmRangeMaskSliceInput is an input type that accepts GetSettingSemanticTypeAlgorithmRangeMaskSliceArgs and GetSettingSemanticTypeAlgorithmRangeMaskSliceOutput values.
// You can construct a concrete instance of `GetSettingSemanticTypeAlgorithmRangeMaskSliceInput` via:
//
//	GetSettingSemanticTypeAlgorithmRangeMaskSliceArgs{...}
type GetSettingSemanticTypeAlgorithmRangeMaskSliceInput interface {
	pulumi.Input

	ToGetSettingSemanticTypeAlgorithmRangeMaskSliceOutput() GetSettingSemanticTypeAlgorithmRangeMaskSliceOutput
	ToGetSettingSemanticTypeAlgorithmRangeMaskSliceOutputWithContext(context.Context) GetSettingSemanticTypeAlgorithmRangeMaskSliceOutput
}

type GetSettingSemanticTypeAlgorithmRangeMaskSliceArgs struct {
	// End is the stop index of the original value, should be less than the length of the original value.
	End pulumi.IntInput `pulumi:"end"`
	// Start is the start index of the original value, start from 0 and should be less than stop.
	Start pulumi.IntInput `pulumi:"start"`
	// Substitution is the string used to replace the OriginalValue[start:end).
	Substitution pulumi.StringInput `pulumi:"substitution"`
}

func (GetSettingSemanticTypeAlgorithmRangeMaskSliceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSettingSemanticTypeAlgorithmRangeMaskSlice)(nil)).Elem()
}

func (i GetSettingSemanticTypeAlgorithmRangeMaskSliceArgs) ToGetSettingSemanticTypeAlgorithmRangeMaskSliceOutput() GetSettingSemanticTypeAlgorithmRangeMaskSliceOutput {
	return i.ToGetSettingSemanticTypeAlgorithmRangeMaskSliceOutputWithContext(context.Background())
}

func (i GetSettingSemanticTypeAlgorithmRangeMaskSliceArgs) ToGetSettingSemanticTypeAlgorithmRangeMaskSliceOutputWithContext(ctx context.Context) GetSettingSemanticTypeAlgorithmRangeMaskSliceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSettingSemanticTypeAlgorithmRangeMaskSliceOutput)
}

// GetSettingSemanticTypeAlgorithmRangeMaskSliceArrayInput is an input type that accepts GetSettingSemanticTypeAlgorithmRangeMaskSliceArray and GetSettingSemanticTypeAlgorithmRangeMaskSliceArrayOutput values.
// You can construct a concrete instance of `GetSettingSemanticTypeAlgorithmRangeMaskSliceArrayInput` via:
//
//	GetSettingSemanticTypeAlgorithmRangeMaskSliceArray{ GetSettingSemanticTypeAlgorithmRangeMaskSliceArgs{...} }
type GetSettingSemanticTypeAlgorithmRangeMaskSliceArrayInput interface {
	pulumi.Input

	ToGetSettingSemanticTypeAlgorithmRangeMaskSliceArrayOutput() GetSettingSemanticTypeAlgorithmRangeMaskSliceArrayOutput
	ToGetSettingSemanticTypeAlgorithmRangeMaskSliceArrayOutputWithContext(context.Context) GetSettingSemanticTypeAlgorithmRangeMaskSliceArrayOutput
}

type GetSettingSemanticTypeAlgorithmRangeMaskSliceArray []GetSettingSemanticTypeAlgorithmRangeMaskSliceInput

func (GetSettingSemanticTypeAlgorithmRangeMaskSliceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSettingSemanticTypeAlgorithmRangeMaskSlice)(nil)).Elem()
}

func (i GetSettingSemanticTypeAlgorithmRangeMaskSliceArray) ToGetSettingSemanticTypeAlgorithmRangeMaskSliceArrayOutput() GetSettingSemanticTypeAlgorithmRangeMaskSliceArrayOutput {
	return i.ToGetSettingSemanticTypeAlgorithmRangeMaskSliceArrayOutputWithContext(context.Background())
}

func (i GetSettingSemanticTypeAlgorithmRangeMaskSliceArray) ToGetSettingSemanticTypeAlgorithmRangeMaskSliceArrayOutputWithContext(ctx context.Context) GetSettingSemanticTypeAlgorithmRangeMaskSliceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSettingSemanticTypeAlgorithmRangeMaskSliceArrayOutput)
}

type GetSettingSemanticTypeAlgorithmRangeMaskSliceOutput struct{ *pulumi.OutputState }

func (GetSettingSemanticTypeAlgorithmRangeMaskSliceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSettingSemanticTypeAlgorithmRangeMaskSlice)(nil)).Elem()
}

func (o GetSettingSemanticTypeAlgorithmRangeMaskSliceOutput) ToGetSettingSemanticTypeAlgorithmRangeMaskSliceOutput() GetSettingSemanticTypeAlgorithmRangeMaskSliceOutput {
	return o
}

func (o GetSettingSemanticTypeAlgorithmRangeMaskSliceOutput) ToGetSettingSemanticTypeAlgorithmRangeMaskSliceOutputWithContext(ctx context.Context) GetSettingSemanticTypeAlgorithmRangeMaskSliceOutput {
	return o
}

// End is the stop index of the original value, should be less than the length of the original value.
func (o GetSettingSemanticTypeAlgorithmRangeMaskSliceOutput) End() pulumi.IntOutput {
	return o.ApplyT(func(v GetSettingSemanticTypeAlgorithmRangeMaskSlice) int { return v.End }).(pulumi.IntOutput)
}

// Start is the start index of the original value, start from 0 and should be less than stop.
func (o GetSettingSemanticTypeAlgorithmRangeMaskSliceOutput) Start() pulumi.IntOutput {
	return o.ApplyT(func(v GetSettingSemanticTypeAlgorithmRangeMaskSlice) int { return v.Start }).(pulumi.IntOutput)
}

// Substitution is the string used to replace the OriginalValue[start:end).
func (o GetSettingSemanticTypeAlgorithmRangeMaskSliceOutput) Substitution() pulumi.StringOutput {
	return o.ApplyT(func(v GetSettingSemanticTypeAlgorithmRangeMaskSlice) string { return v.Substitution }).(pulumi.StringOutput)
}

type GetSettingSemanticTypeAlgorithmRangeMaskSliceArrayOutput struct{ *pulumi.OutputState }

func (GetSettingSemanticTypeAlgorithmRangeMaskSliceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSettingSemanticTypeAlgorithmRangeMaskSlice)(nil)).Elem()
}

func (o GetSettingSemanticTypeAlgorithmRangeMaskSliceArrayOutput) ToGetSettingSemanticTypeAlgorithmRangeMaskSliceArrayOutput() GetSettingSemanticTypeAlgorithmRangeMaskSliceArrayOutput {
	return o
}

func (o GetSettingSemanticTypeAlgorithmRangeMaskSliceArrayOutput) ToGetSettingSemanticTypeAlgorithmRangeMaskSliceArrayOutputWithContext(ctx context.Context) GetSettingSemanticTypeAlgorithmRangeMaskSliceArrayOutput {
	return o
}

func (o GetSettingSemanticTypeAlgorithmRangeMaskSliceArrayOutput) Index(i pulumi.IntInput) GetSettingSemanticTypeAlgorithmRangeMaskSliceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSettingSemanticTypeAlgorithmRangeMaskSlice {
		return vs[0].([]GetSettingSemanticTypeAlgorithmRangeMaskSlice)[vs[1].(int)]
	}).(GetSettingSemanticTypeAlgorithmRangeMaskSliceOutput)
}

type GetSettingSqlQueryRestriction struct {
	// The return rows limit. If the value <= 0, will be treated as no limit. The default value is -1.
	MaximumResultRows *int `pulumi:"maximumResultRows"`
	// The size limit in bytes. The default value is 100MB, we will use the default value if the setting not exists, or the limit <= 0.
	MaximumResultSize *int `pulumi:"maximumResultSize"`
}

// GetSettingSqlQueryRestrictionInput is an input type that accepts GetSettingSqlQueryRestrictionArgs and GetSettingSqlQueryRestrictionOutput values.
// You can construct a concrete instance of `GetSettingSqlQueryRestrictionInput` via:
//
//	GetSettingSqlQueryRestrictionArgs{...}
type GetSettingSqlQueryRestrictionInput interface {
	pulumi.Input

	ToGetSettingSqlQueryRestrictionOutput() GetSettingSqlQueryRestrictionOutput
	ToGetSettingSqlQueryRestrictionOutputWithContext(context.Context) GetSettingSqlQueryRestrictionOutput
}

type GetSettingSqlQueryRestrictionArgs struct {
	// The return rows limit. If the value <= 0, will be treated as no limit. The default value is -1.
	MaximumResultRows pulumi.IntPtrInput `pulumi:"maximumResultRows"`
	// The size limit in bytes. The default value is 100MB, we will use the default value if the setting not exists, or the limit <= 0.
	MaximumResultSize pulumi.IntPtrInput `pulumi:"maximumResultSize"`
}

func (GetSettingSqlQueryRestrictionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSettingSqlQueryRestriction)(nil)).Elem()
}

func (i GetSettingSqlQueryRestrictionArgs) ToGetSettingSqlQueryRestrictionOutput() GetSettingSqlQueryRestrictionOutput {
	return i.ToGetSettingSqlQueryRestrictionOutputWithContext(context.Background())
}

func (i GetSettingSqlQueryRestrictionArgs) ToGetSettingSqlQueryRestrictionOutputWithContext(ctx context.Context) GetSettingSqlQueryRestrictionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSettingSqlQueryRestrictionOutput)
}

func (i GetSettingSqlQueryRestrictionArgs) ToGetSettingSqlQueryRestrictionPtrOutput() GetSettingSqlQueryRestrictionPtrOutput {
	return i.ToGetSettingSqlQueryRestrictionPtrOutputWithContext(context.Background())
}

func (i GetSettingSqlQueryRestrictionArgs) ToGetSettingSqlQueryRestrictionPtrOutputWithContext(ctx context.Context) GetSettingSqlQueryRestrictionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSettingSqlQueryRestrictionOutput).ToGetSettingSqlQueryRestrictionPtrOutputWithContext(ctx)
}

// GetSettingSqlQueryRestrictionPtrInput is an input type that accepts GetSettingSqlQueryRestrictionArgs, GetSettingSqlQueryRestrictionPtr and GetSettingSqlQueryRestrictionPtrOutput values.
// You can construct a concrete instance of `GetSettingSqlQueryRestrictionPtrInput` via:
//
//	        GetSettingSqlQueryRestrictionArgs{...}
//
//	or:
//
//	        nil
type GetSettingSqlQueryRestrictionPtrInput interface {
	pulumi.Input

	ToGetSettingSqlQueryRestrictionPtrOutput() GetSettingSqlQueryRestrictionPtrOutput
	ToGetSettingSqlQueryRestrictionPtrOutputWithContext(context.Context) GetSettingSqlQueryRestrictionPtrOutput
}

type getSettingSqlQueryRestrictionPtrType GetSettingSqlQueryRestrictionArgs

func GetSettingSqlQueryRestrictionPtr(v *GetSettingSqlQueryRestrictionArgs) GetSettingSqlQueryRestrictionPtrInput {
	return (*getSettingSqlQueryRestrictionPtrType)(v)
}

func (*getSettingSqlQueryRestrictionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetSettingSqlQueryRestriction)(nil)).Elem()
}

func (i *getSettingSqlQueryRestrictionPtrType) ToGetSettingSqlQueryRestrictionPtrOutput() GetSettingSqlQueryRestrictionPtrOutput {
	return i.ToGetSettingSqlQueryRestrictionPtrOutputWithContext(context.Background())
}

func (i *getSettingSqlQueryRestrictionPtrType) ToGetSettingSqlQueryRestrictionPtrOutputWithContext(ctx context.Context) GetSettingSqlQueryRestrictionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSettingSqlQueryRestrictionPtrOutput)
}

type GetSettingSqlQueryRestrictionOutput struct{ *pulumi.OutputState }

func (GetSettingSqlQueryRestrictionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSettingSqlQueryRestriction)(nil)).Elem()
}

func (o GetSettingSqlQueryRestrictionOutput) ToGetSettingSqlQueryRestrictionOutput() GetSettingSqlQueryRestrictionOutput {
	return o
}

func (o GetSettingSqlQueryRestrictionOutput) ToGetSettingSqlQueryRestrictionOutputWithContext(ctx context.Context) GetSettingSqlQueryRestrictionOutput {
	return o
}

func (o GetSettingSqlQueryRestrictionOutput) ToGetSettingSqlQueryRestrictionPtrOutput() GetSettingSqlQueryRestrictionPtrOutput {
	return o.ToGetSettingSqlQueryRestrictionPtrOutputWithContext(context.Background())
}

func (o GetSettingSqlQueryRestrictionOutput) ToGetSettingSqlQueryRestrictionPtrOutputWithContext(ctx context.Context) GetSettingSqlQueryRestrictionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetSettingSqlQueryRestriction) *GetSettingSqlQueryRestriction {
		return &v
	}).(GetSettingSqlQueryRestrictionPtrOutput)
}

// The return rows limit. If the value <= 0, will be treated as no limit. The default value is -1.
func (o GetSettingSqlQueryRestrictionOutput) MaximumResultRows() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetSettingSqlQueryRestriction) *int { return v.MaximumResultRows }).(pulumi.IntPtrOutput)
}

// The size limit in bytes. The default value is 100MB, we will use the default value if the setting not exists, or the limit <= 0.
func (o GetSettingSqlQueryRestrictionOutput) MaximumResultSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetSettingSqlQueryRestriction) *int { return v.MaximumResultSize }).(pulumi.IntPtrOutput)
}

type GetSettingSqlQueryRestrictionPtrOutput struct{ *pulumi.OutputState }

func (GetSettingSqlQueryRestrictionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetSettingSqlQueryRestriction)(nil)).Elem()
}

func (o GetSettingSqlQueryRestrictionPtrOutput) ToGetSettingSqlQueryRestrictionPtrOutput() GetSettingSqlQueryRestrictionPtrOutput {
	return o
}

func (o GetSettingSqlQueryRestrictionPtrOutput) ToGetSettingSqlQueryRestrictionPtrOutputWithContext(ctx context.Context) GetSettingSqlQueryRestrictionPtrOutput {
	return o
}

func (o GetSettingSqlQueryRestrictionPtrOutput) Elem() GetSettingSqlQueryRestrictionOutput {
	return o.ApplyT(func(v *GetSettingSqlQueryRestriction) GetSettingSqlQueryRestriction {
		if v != nil {
			return *v
		}
		var ret GetSettingSqlQueryRestriction
		return ret
	}).(GetSettingSqlQueryRestrictionOutput)
}

// The return rows limit. If the value <= 0, will be treated as no limit. The default value is -1.
func (o GetSettingSqlQueryRestrictionPtrOutput) MaximumResultRows() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GetSettingSqlQueryRestriction) *int {
		if v == nil {
			return nil
		}
		return v.MaximumResultRows
	}).(pulumi.IntPtrOutput)
}

// The size limit in bytes. The default value is 100MB, we will use the default value if the setting not exists, or the limit <= 0.
func (o GetSettingSqlQueryRestrictionPtrOutput) MaximumResultSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GetSettingSqlQueryRestriction) *int {
		if v == nil {
			return nil
		}
		return v.MaximumResultSize
	}).(pulumi.IntPtrOutput)
}

type GetSettingWorkspaceProfile struct {
	// Custom announcement. Will show as a banner in the Bytebase UI. Require ENTERPRISE subscription.
	Announcement *GetSettingWorkspaceProfileAnnouncement `pulumi:"announcement"`
	// The workspace database change mode, support EDITOR or PIPELINE. Default PIPELINE
	DatabaseChangeMode *string `pulumi:"databaseChangeMode"`
	// Whether to disallow password signin (except workspace admins). Require ENTERPRISE subscription
	DisallowPasswordSignin *bool `pulumi:"disallowPasswordSignin"`
	// Disallow self-service signup, users can only be invited by the owner. Require PRO subscription.
	DisallowSignup *bool `pulumi:"disallowSignup"`
	// The workspace domain, e.g. bytebase.com. Required for the group
	Domains []string `pulumi:"domains"`
	// Only user and group from the domains can be created and login.
	EnforceIdentityDomain *bool `pulumi:"enforceIdentityDomain"`
	// The URL user visits Bytebase. The external URL is used for: 1. Constructing the correct callback URL when configuring the VCS provider. The callback URL points to the frontend; 2. Creating the correct webhook endpoint when configuring the project GitOps workflow. The webhook endpoint points to the backend.
	ExternalUrl *string `pulumi:"externalUrl"`
	// The max duration in seconds for role expired. If the value is less than or equal to 0, we will remove the setting. AKA no limit.
	MaximumRoleExpirationInSeconds *int `pulumi:"maximumRoleExpirationInSeconds"`
	// The duration for login token in seconds. The duration should be at least 3600 (one hour).
	TokenDurationInSeconds *int `pulumi:"tokenDurationInSeconds"`
}

// GetSettingWorkspaceProfileInput is an input type that accepts GetSettingWorkspaceProfileArgs and GetSettingWorkspaceProfileOutput values.
// You can construct a concrete instance of `GetSettingWorkspaceProfileInput` via:
//
//	GetSettingWorkspaceProfileArgs{...}
type GetSettingWorkspaceProfileInput interface {
	pulumi.Input

	ToGetSettingWorkspaceProfileOutput() GetSettingWorkspaceProfileOutput
	ToGetSettingWorkspaceProfileOutputWithContext(context.Context) GetSettingWorkspaceProfileOutput
}

type GetSettingWorkspaceProfileArgs struct {
	// Custom announcement. Will show as a banner in the Bytebase UI. Require ENTERPRISE subscription.
	Announcement GetSettingWorkspaceProfileAnnouncementPtrInput `pulumi:"announcement"`
	// The workspace database change mode, support EDITOR or PIPELINE. Default PIPELINE
	DatabaseChangeMode pulumi.StringPtrInput `pulumi:"databaseChangeMode"`
	// Whether to disallow password signin (except workspace admins). Require ENTERPRISE subscription
	DisallowPasswordSignin pulumi.BoolPtrInput `pulumi:"disallowPasswordSignin"`
	// Disallow self-service signup, users can only be invited by the owner. Require PRO subscription.
	DisallowSignup pulumi.BoolPtrInput `pulumi:"disallowSignup"`
	// The workspace domain, e.g. bytebase.com. Required for the group
	Domains pulumi.StringArrayInput `pulumi:"domains"`
	// Only user and group from the domains can be created and login.
	EnforceIdentityDomain pulumi.BoolPtrInput `pulumi:"enforceIdentityDomain"`
	// The URL user visits Bytebase. The external URL is used for: 1. Constructing the correct callback URL when configuring the VCS provider. The callback URL points to the frontend; 2. Creating the correct webhook endpoint when configuring the project GitOps workflow. The webhook endpoint points to the backend.
	ExternalUrl pulumi.StringPtrInput `pulumi:"externalUrl"`
	// The max duration in seconds for role expired. If the value is less than or equal to 0, we will remove the setting. AKA no limit.
	MaximumRoleExpirationInSeconds pulumi.IntPtrInput `pulumi:"maximumRoleExpirationInSeconds"`
	// The duration for login token in seconds. The duration should be at least 3600 (one hour).
	TokenDurationInSeconds pulumi.IntPtrInput `pulumi:"tokenDurationInSeconds"`
}

func (GetSettingWorkspaceProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSettingWorkspaceProfile)(nil)).Elem()
}

func (i GetSettingWorkspaceProfileArgs) ToGetSettingWorkspaceProfileOutput() GetSettingWorkspaceProfileOutput {
	return i.ToGetSettingWorkspaceProfileOutputWithContext(context.Background())
}

func (i GetSettingWorkspaceProfileArgs) ToGetSettingWorkspaceProfileOutputWithContext(ctx context.Context) GetSettingWorkspaceProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSettingWorkspaceProfileOutput)
}

func (i GetSettingWorkspaceProfileArgs) ToGetSettingWorkspaceProfilePtrOutput() GetSettingWorkspaceProfilePtrOutput {
	return i.ToGetSettingWorkspaceProfilePtrOutputWithContext(context.Background())
}

func (i GetSettingWorkspaceProfileArgs) ToGetSettingWorkspaceProfilePtrOutputWithContext(ctx context.Context) GetSettingWorkspaceProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSettingWorkspaceProfileOutput).ToGetSettingWorkspaceProfilePtrOutputWithContext(ctx)
}

// GetSettingWorkspaceProfilePtrInput is an input type that accepts GetSettingWorkspaceProfileArgs, GetSettingWorkspaceProfilePtr and GetSettingWorkspaceProfilePtrOutput values.
// You can construct a concrete instance of `GetSettingWorkspaceProfilePtrInput` via:
//
//	        GetSettingWorkspaceProfileArgs{...}
//
//	or:
//
//	        nil
type GetSettingWorkspaceProfilePtrInput interface {
	pulumi.Input

	ToGetSettingWorkspaceProfilePtrOutput() GetSettingWorkspaceProfilePtrOutput
	ToGetSettingWorkspaceProfilePtrOutputWithContext(context.Context) GetSettingWorkspaceProfilePtrOutput
}

type getSettingWorkspaceProfilePtrType GetSettingWorkspaceProfileArgs

func GetSettingWorkspaceProfilePtr(v *GetSettingWorkspaceProfileArgs) GetSettingWorkspaceProfilePtrInput {
	return (*getSettingWorkspaceProfilePtrType)(v)
}

func (*getSettingWorkspaceProfilePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetSettingWorkspaceProfile)(nil)).Elem()
}

func (i *getSettingWorkspaceProfilePtrType) ToGetSettingWorkspaceProfilePtrOutput() GetSettingWorkspaceProfilePtrOutput {
	return i.ToGetSettingWorkspaceProfilePtrOutputWithContext(context.Background())
}

func (i *getSettingWorkspaceProfilePtrType) ToGetSettingWorkspaceProfilePtrOutputWithContext(ctx context.Context) GetSettingWorkspaceProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSettingWorkspaceProfilePtrOutput)
}

type GetSettingWorkspaceProfileOutput struct{ *pulumi.OutputState }

func (GetSettingWorkspaceProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSettingWorkspaceProfile)(nil)).Elem()
}

func (o GetSettingWorkspaceProfileOutput) ToGetSettingWorkspaceProfileOutput() GetSettingWorkspaceProfileOutput {
	return o
}

func (o GetSettingWorkspaceProfileOutput) ToGetSettingWorkspaceProfileOutputWithContext(ctx context.Context) GetSettingWorkspaceProfileOutput {
	return o
}

func (o GetSettingWorkspaceProfileOutput) ToGetSettingWorkspaceProfilePtrOutput() GetSettingWorkspaceProfilePtrOutput {
	return o.ToGetSettingWorkspaceProfilePtrOutputWithContext(context.Background())
}

func (o GetSettingWorkspaceProfileOutput) ToGetSettingWorkspaceProfilePtrOutputWithContext(ctx context.Context) GetSettingWorkspaceProfilePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetSettingWorkspaceProfile) *GetSettingWorkspaceProfile {
		return &v
	}).(GetSettingWorkspaceProfilePtrOutput)
}

// Custom announcement. Will show as a banner in the Bytebase UI. Require ENTERPRISE subscription.
func (o GetSettingWorkspaceProfileOutput) Announcement() GetSettingWorkspaceProfileAnnouncementPtrOutput {
	return o.ApplyT(func(v GetSettingWorkspaceProfile) *GetSettingWorkspaceProfileAnnouncement { return v.Announcement }).(GetSettingWorkspaceProfileAnnouncementPtrOutput)
}

// The workspace database change mode, support EDITOR or PIPELINE. Default PIPELINE
func (o GetSettingWorkspaceProfileOutput) DatabaseChangeMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSettingWorkspaceProfile) *string { return v.DatabaseChangeMode }).(pulumi.StringPtrOutput)
}

// Whether to disallow password signin (except workspace admins). Require ENTERPRISE subscription
func (o GetSettingWorkspaceProfileOutput) DisallowPasswordSignin() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetSettingWorkspaceProfile) *bool { return v.DisallowPasswordSignin }).(pulumi.BoolPtrOutput)
}

// Disallow self-service signup, users can only be invited by the owner. Require PRO subscription.
func (o GetSettingWorkspaceProfileOutput) DisallowSignup() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetSettingWorkspaceProfile) *bool { return v.DisallowSignup }).(pulumi.BoolPtrOutput)
}

// The workspace domain, e.g. bytebase.com. Required for the group
func (o GetSettingWorkspaceProfileOutput) Domains() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSettingWorkspaceProfile) []string { return v.Domains }).(pulumi.StringArrayOutput)
}

// Only user and group from the domains can be created and login.
func (o GetSettingWorkspaceProfileOutput) EnforceIdentityDomain() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetSettingWorkspaceProfile) *bool { return v.EnforceIdentityDomain }).(pulumi.BoolPtrOutput)
}

// The URL user visits Bytebase. The external URL is used for: 1. Constructing the correct callback URL when configuring the VCS provider. The callback URL points to the frontend; 2. Creating the correct webhook endpoint when configuring the project GitOps workflow. The webhook endpoint points to the backend.
func (o GetSettingWorkspaceProfileOutput) ExternalUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSettingWorkspaceProfile) *string { return v.ExternalUrl }).(pulumi.StringPtrOutput)
}

// The max duration in seconds for role expired. If the value is less than or equal to 0, we will remove the setting. AKA no limit.
func (o GetSettingWorkspaceProfileOutput) MaximumRoleExpirationInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetSettingWorkspaceProfile) *int { return v.MaximumRoleExpirationInSeconds }).(pulumi.IntPtrOutput)
}

// The duration for login token in seconds. The duration should be at least 3600 (one hour).
func (o GetSettingWorkspaceProfileOutput) TokenDurationInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetSettingWorkspaceProfile) *int { return v.TokenDurationInSeconds }).(pulumi.IntPtrOutput)
}

type GetSettingWorkspaceProfilePtrOutput struct{ *pulumi.OutputState }

func (GetSettingWorkspaceProfilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetSettingWorkspaceProfile)(nil)).Elem()
}

func (o GetSettingWorkspaceProfilePtrOutput) ToGetSettingWorkspaceProfilePtrOutput() GetSettingWorkspaceProfilePtrOutput {
	return o
}

func (o GetSettingWorkspaceProfilePtrOutput) ToGetSettingWorkspaceProfilePtrOutputWithContext(ctx context.Context) GetSettingWorkspaceProfilePtrOutput {
	return o
}

func (o GetSettingWorkspaceProfilePtrOutput) Elem() GetSettingWorkspaceProfileOutput {
	return o.ApplyT(func(v *GetSettingWorkspaceProfile) GetSettingWorkspaceProfile {
		if v != nil {
			return *v
		}
		var ret GetSettingWorkspaceProfile
		return ret
	}).(GetSettingWorkspaceProfileOutput)
}

// Custom announcement. Will show as a banner in the Bytebase UI. Require ENTERPRISE subscription.
func (o GetSettingWorkspaceProfilePtrOutput) Announcement() GetSettingWorkspaceProfileAnnouncementPtrOutput {
	return o.ApplyT(func(v *GetSettingWorkspaceProfile) *GetSettingWorkspaceProfileAnnouncement {
		if v == nil {
			return nil
		}
		return v.Announcement
	}).(GetSettingWorkspaceProfileAnnouncementPtrOutput)
}

// The workspace database change mode, support EDITOR or PIPELINE. Default PIPELINE
func (o GetSettingWorkspaceProfilePtrOutput) DatabaseChangeMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetSettingWorkspaceProfile) *string {
		if v == nil {
			return nil
		}
		return v.DatabaseChangeMode
	}).(pulumi.StringPtrOutput)
}

// Whether to disallow password signin (except workspace admins). Require ENTERPRISE subscription
func (o GetSettingWorkspaceProfilePtrOutput) DisallowPasswordSignin() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GetSettingWorkspaceProfile) *bool {
		if v == nil {
			return nil
		}
		return v.DisallowPasswordSignin
	}).(pulumi.BoolPtrOutput)
}

// Disallow self-service signup, users can only be invited by the owner. Require PRO subscription.
func (o GetSettingWorkspaceProfilePtrOutput) DisallowSignup() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GetSettingWorkspaceProfile) *bool {
		if v == nil {
			return nil
		}
		return v.DisallowSignup
	}).(pulumi.BoolPtrOutput)
}

// The workspace domain, e.g. bytebase.com. Required for the group
func (o GetSettingWorkspaceProfilePtrOutput) Domains() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GetSettingWorkspaceProfile) []string {
		if v == nil {
			return nil
		}
		return v.Domains
	}).(pulumi.StringArrayOutput)
}

// Only user and group from the domains can be created and login.
func (o GetSettingWorkspaceProfilePtrOutput) EnforceIdentityDomain() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GetSettingWorkspaceProfile) *bool {
		if v == nil {
			return nil
		}
		return v.EnforceIdentityDomain
	}).(pulumi.BoolPtrOutput)
}

// The URL user visits Bytebase. The external URL is used for: 1. Constructing the correct callback URL when configuring the VCS provider. The callback URL points to the frontend; 2. Creating the correct webhook endpoint when configuring the project GitOps workflow. The webhook endpoint points to the backend.
func (o GetSettingWorkspaceProfilePtrOutput) ExternalUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetSettingWorkspaceProfile) *string {
		if v == nil {
			return nil
		}
		return v.ExternalUrl
	}).(pulumi.StringPtrOutput)
}

// The max duration in seconds for role expired. If the value is less than or equal to 0, we will remove the setting. AKA no limit.
func (o GetSettingWorkspaceProfilePtrOutput) MaximumRoleExpirationInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GetSettingWorkspaceProfile) *int {
		if v == nil {
			return nil
		}
		return v.MaximumRoleExpirationInSeconds
	}).(pulumi.IntPtrOutput)
}

// The duration for login token in seconds. The duration should be at least 3600 (one hour).
func (o GetSettingWorkspaceProfilePtrOutput) TokenDurationInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GetSettingWorkspaceProfile) *int {
		if v == nil {
			return nil
		}
		return v.TokenDurationInSeconds
	}).(pulumi.IntPtrOutput)
}

type GetSettingWorkspaceProfileAnnouncement struct {
	// The alert level of announcement
	Level string `pulumi:"level"`
	// The optional link, user can follow the link to check extra details
	Link *string `pulumi:"link"`
	// The text of announcement. Leave it as empty string can clear the announcement
	Text string `pulumi:"text"`
}

// GetSettingWorkspaceProfileAnnouncementInput is an input type that accepts GetSettingWorkspaceProfileAnnouncementArgs and GetSettingWorkspaceProfileAnnouncementOutput values.
// You can construct a concrete instance of `GetSettingWorkspaceProfileAnnouncementInput` via:
//
//	GetSettingWorkspaceProfileAnnouncementArgs{...}
type GetSettingWorkspaceProfileAnnouncementInput interface {
	pulumi.Input

	ToGetSettingWorkspaceProfileAnnouncementOutput() GetSettingWorkspaceProfileAnnouncementOutput
	ToGetSettingWorkspaceProfileAnnouncementOutputWithContext(context.Context) GetSettingWorkspaceProfileAnnouncementOutput
}

type GetSettingWorkspaceProfileAnnouncementArgs struct {
	// The alert level of announcement
	Level pulumi.StringInput `pulumi:"level"`
	// The optional link, user can follow the link to check extra details
	Link pulumi.StringPtrInput `pulumi:"link"`
	// The text of announcement. Leave it as empty string can clear the announcement
	Text pulumi.StringInput `pulumi:"text"`
}

func (GetSettingWorkspaceProfileAnnouncementArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSettingWorkspaceProfileAnnouncement)(nil)).Elem()
}

func (i GetSettingWorkspaceProfileAnnouncementArgs) ToGetSettingWorkspaceProfileAnnouncementOutput() GetSettingWorkspaceProfileAnnouncementOutput {
	return i.ToGetSettingWorkspaceProfileAnnouncementOutputWithContext(context.Background())
}

func (i GetSettingWorkspaceProfileAnnouncementArgs) ToGetSettingWorkspaceProfileAnnouncementOutputWithContext(ctx context.Context) GetSettingWorkspaceProfileAnnouncementOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSettingWorkspaceProfileAnnouncementOutput)
}

func (i GetSettingWorkspaceProfileAnnouncementArgs) ToGetSettingWorkspaceProfileAnnouncementPtrOutput() GetSettingWorkspaceProfileAnnouncementPtrOutput {
	return i.ToGetSettingWorkspaceProfileAnnouncementPtrOutputWithContext(context.Background())
}

func (i GetSettingWorkspaceProfileAnnouncementArgs) ToGetSettingWorkspaceProfileAnnouncementPtrOutputWithContext(ctx context.Context) GetSettingWorkspaceProfileAnnouncementPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSettingWorkspaceProfileAnnouncementOutput).ToGetSettingWorkspaceProfileAnnouncementPtrOutputWithContext(ctx)
}

// GetSettingWorkspaceProfileAnnouncementPtrInput is an input type that accepts GetSettingWorkspaceProfileAnnouncementArgs, GetSettingWorkspaceProfileAnnouncementPtr and GetSettingWorkspaceProfileAnnouncementPtrOutput values.
// You can construct a concrete instance of `GetSettingWorkspaceProfileAnnouncementPtrInput` via:
//
//	        GetSettingWorkspaceProfileAnnouncementArgs{...}
//
//	or:
//
//	        nil
type GetSettingWorkspaceProfileAnnouncementPtrInput interface {
	pulumi.Input

	ToGetSettingWorkspaceProfileAnnouncementPtrOutput() GetSettingWorkspaceProfileAnnouncementPtrOutput
	ToGetSettingWorkspaceProfileAnnouncementPtrOutputWithContext(context.Context) GetSettingWorkspaceProfileAnnouncementPtrOutput
}

type getSettingWorkspaceProfileAnnouncementPtrType GetSettingWorkspaceProfileAnnouncementArgs

func GetSettingWorkspaceProfileAnnouncementPtr(v *GetSettingWorkspaceProfileAnnouncementArgs) GetSettingWorkspaceProfileAnnouncementPtrInput {
	return (*getSettingWorkspaceProfileAnnouncementPtrType)(v)
}

func (*getSettingWorkspaceProfileAnnouncementPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetSettingWorkspaceProfileAnnouncement)(nil)).Elem()
}

func (i *getSettingWorkspaceProfileAnnouncementPtrType) ToGetSettingWorkspaceProfileAnnouncementPtrOutput() GetSettingWorkspaceProfileAnnouncementPtrOutput {
	return i.ToGetSettingWorkspaceProfileAnnouncementPtrOutputWithContext(context.Background())
}

func (i *getSettingWorkspaceProfileAnnouncementPtrType) ToGetSettingWorkspaceProfileAnnouncementPtrOutputWithContext(ctx context.Context) GetSettingWorkspaceProfileAnnouncementPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSettingWorkspaceProfileAnnouncementPtrOutput)
}

type GetSettingWorkspaceProfileAnnouncementOutput struct{ *pulumi.OutputState }

func (GetSettingWorkspaceProfileAnnouncementOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSettingWorkspaceProfileAnnouncement)(nil)).Elem()
}

func (o GetSettingWorkspaceProfileAnnouncementOutput) ToGetSettingWorkspaceProfileAnnouncementOutput() GetSettingWorkspaceProfileAnnouncementOutput {
	return o
}

func (o GetSettingWorkspaceProfileAnnouncementOutput) ToGetSettingWorkspaceProfileAnnouncementOutputWithContext(ctx context.Context) GetSettingWorkspaceProfileAnnouncementOutput {
	return o
}

func (o GetSettingWorkspaceProfileAnnouncementOutput) ToGetSettingWorkspaceProfileAnnouncementPtrOutput() GetSettingWorkspaceProfileAnnouncementPtrOutput {
	return o.ToGetSettingWorkspaceProfileAnnouncementPtrOutputWithContext(context.Background())
}

func (o GetSettingWorkspaceProfileAnnouncementOutput) ToGetSettingWorkspaceProfileAnnouncementPtrOutputWithContext(ctx context.Context) GetSettingWorkspaceProfileAnnouncementPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetSettingWorkspaceProfileAnnouncement) *GetSettingWorkspaceProfileAnnouncement {
		return &v
	}).(GetSettingWorkspaceProfileAnnouncementPtrOutput)
}

// The alert level of announcement
func (o GetSettingWorkspaceProfileAnnouncementOutput) Level() pulumi.StringOutput {
	return o.ApplyT(func(v GetSettingWorkspaceProfileAnnouncement) string { return v.Level }).(pulumi.StringOutput)
}

// The optional link, user can follow the link to check extra details
func (o GetSettingWorkspaceProfileAnnouncementOutput) Link() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSettingWorkspaceProfileAnnouncement) *string { return v.Link }).(pulumi.StringPtrOutput)
}

// The text of announcement. Leave it as empty string can clear the announcement
func (o GetSettingWorkspaceProfileAnnouncementOutput) Text() pulumi.StringOutput {
	return o.ApplyT(func(v GetSettingWorkspaceProfileAnnouncement) string { return v.Text }).(pulumi.StringOutput)
}

type GetSettingWorkspaceProfileAnnouncementPtrOutput struct{ *pulumi.OutputState }

func (GetSettingWorkspaceProfileAnnouncementPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetSettingWorkspaceProfileAnnouncement)(nil)).Elem()
}

func (o GetSettingWorkspaceProfileAnnouncementPtrOutput) ToGetSettingWorkspaceProfileAnnouncementPtrOutput() GetSettingWorkspaceProfileAnnouncementPtrOutput {
	return o
}

func (o GetSettingWorkspaceProfileAnnouncementPtrOutput) ToGetSettingWorkspaceProfileAnnouncementPtrOutputWithContext(ctx context.Context) GetSettingWorkspaceProfileAnnouncementPtrOutput {
	return o
}

func (o GetSettingWorkspaceProfileAnnouncementPtrOutput) Elem() GetSettingWorkspaceProfileAnnouncementOutput {
	return o.ApplyT(func(v *GetSettingWorkspaceProfileAnnouncement) GetSettingWorkspaceProfileAnnouncement {
		if v != nil {
			return *v
		}
		var ret GetSettingWorkspaceProfileAnnouncement
		return ret
	}).(GetSettingWorkspaceProfileAnnouncementOutput)
}

// The alert level of announcement
func (o GetSettingWorkspaceProfileAnnouncementPtrOutput) Level() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetSettingWorkspaceProfileAnnouncement) *string {
		if v == nil {
			return nil
		}
		return &v.Level
	}).(pulumi.StringPtrOutput)
}

// The optional link, user can follow the link to check extra details
func (o GetSettingWorkspaceProfileAnnouncementPtrOutput) Link() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetSettingWorkspaceProfileAnnouncement) *string {
		if v == nil {
			return nil
		}
		return v.Link
	}).(pulumi.StringPtrOutput)
}

// The text of announcement. Leave it as empty string can clear the announcement
func (o GetSettingWorkspaceProfileAnnouncementPtrOutput) Text() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetSettingWorkspaceProfileAnnouncement) *string {
		if v == nil {
			return nil
		}
		return &v.Text
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DatabaseCatalogInput)(nil)).Elem(), DatabaseCatalogArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatabaseCatalogPtrInput)(nil)).Elem(), DatabaseCatalogArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatabaseCatalogSchemaInput)(nil)).Elem(), DatabaseCatalogSchemaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatabaseCatalogSchemaArrayInput)(nil)).Elem(), DatabaseCatalogSchemaArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatabaseCatalogSchemaTableInput)(nil)).Elem(), DatabaseCatalogSchemaTableArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatabaseCatalogSchemaTableArrayInput)(nil)).Elem(), DatabaseCatalogSchemaTableArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatabaseCatalogSchemaTableColumnInput)(nil)).Elem(), DatabaseCatalogSchemaTableColumnArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatabaseCatalogSchemaTableColumnArrayInput)(nil)).Elem(), DatabaseCatalogSchemaTableColumnArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GroupMemberInput)(nil)).Elem(), GroupMemberArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GroupMemberArrayInput)(nil)).Elem(), GroupMemberArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceDataSourceInput)(nil)).Elem(), InstanceDataSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceDataSourceArrayInput)(nil)).Elem(), InstanceDataSourceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceDataSourceExternalSecretInput)(nil)).Elem(), InstanceDataSourceExternalSecretArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceDataSourceExternalSecretPtrInput)(nil)).Elem(), InstanceDataSourceExternalSecretArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceDataSourceExternalSecretAwsSecretsManagerInput)(nil)).Elem(), InstanceDataSourceExternalSecretAwsSecretsManagerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceDataSourceExternalSecretAwsSecretsManagerPtrInput)(nil)).Elem(), InstanceDataSourceExternalSecretAwsSecretsManagerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceDataSourceExternalSecretGcpSecretManagerInput)(nil)).Elem(), InstanceDataSourceExternalSecretGcpSecretManagerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceDataSourceExternalSecretGcpSecretManagerPtrInput)(nil)).Elem(), InstanceDataSourceExternalSecretGcpSecretManagerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceDataSourceExternalSecretVaultInput)(nil)).Elem(), InstanceDataSourceExternalSecretVaultArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceDataSourceExternalSecretVaultPtrInput)(nil)).Elem(), InstanceDataSourceExternalSecretVaultArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceDataSourceExternalSecretVaultAppRoleInput)(nil)).Elem(), InstanceDataSourceExternalSecretVaultAppRoleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceDataSourceExternalSecretVaultAppRolePtrInput)(nil)).Elem(), InstanceDataSourceExternalSecretVaultAppRoleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyDataSourceQueryPolicyInput)(nil)).Elem(), PolicyDataSourceQueryPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyDataSourceQueryPolicyPtrInput)(nil)).Elem(), PolicyDataSourceQueryPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyDisableCopyDataPolicyInput)(nil)).Elem(), PolicyDisableCopyDataPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyDisableCopyDataPolicyPtrInput)(nil)).Elem(), PolicyDisableCopyDataPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyGlobalMaskingPolicyInput)(nil)).Elem(), PolicyGlobalMaskingPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyGlobalMaskingPolicyPtrInput)(nil)).Elem(), PolicyGlobalMaskingPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyGlobalMaskingPolicyRuleInput)(nil)).Elem(), PolicyGlobalMaskingPolicyRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyGlobalMaskingPolicyRuleArrayInput)(nil)).Elem(), PolicyGlobalMaskingPolicyRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyMaskingExceptionPolicyInput)(nil)).Elem(), PolicyMaskingExceptionPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyMaskingExceptionPolicyPtrInput)(nil)).Elem(), PolicyMaskingExceptionPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyMaskingExceptionPolicyExceptionInput)(nil)).Elem(), PolicyMaskingExceptionPolicyExceptionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyMaskingExceptionPolicyExceptionArrayInput)(nil)).Elem(), PolicyMaskingExceptionPolicyExceptionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyRolloutPolicyInput)(nil)).Elem(), PolicyRolloutPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyRolloutPolicyPtrInput)(nil)).Elem(), PolicyRolloutPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectWebhookInput)(nil)).Elem(), ProjectWebhookArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectWebhookArrayInput)(nil)).Elem(), ProjectWebhookArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SettingApprovalFlowInput)(nil)).Elem(), SettingApprovalFlowArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SettingApprovalFlowArrayInput)(nil)).Elem(), SettingApprovalFlowArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SettingApprovalFlowRuleInput)(nil)).Elem(), SettingApprovalFlowRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SettingApprovalFlowRuleArrayInput)(nil)).Elem(), SettingApprovalFlowRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SettingApprovalFlowRuleConditionInput)(nil)).Elem(), SettingApprovalFlowRuleConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SettingApprovalFlowRuleConditionArrayInput)(nil)).Elem(), SettingApprovalFlowRuleConditionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SettingApprovalFlowRuleFlowInput)(nil)).Elem(), SettingApprovalFlowRuleFlowArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SettingApprovalFlowRuleFlowArrayInput)(nil)).Elem(), SettingApprovalFlowRuleFlowArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SettingApprovalFlowRuleFlowStepInput)(nil)).Elem(), SettingApprovalFlowRuleFlowStepArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SettingApprovalFlowRuleFlowStepArrayInput)(nil)).Elem(), SettingApprovalFlowRuleFlowStepArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SettingClassificationInput)(nil)).Elem(), SettingClassificationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SettingClassificationPtrInput)(nil)).Elem(), SettingClassificationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SettingClassificationClassificationInput)(nil)).Elem(), SettingClassificationClassificationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SettingClassificationClassificationArrayInput)(nil)).Elem(), SettingClassificationClassificationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SettingClassificationLevelInput)(nil)).Elem(), SettingClassificationLevelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SettingClassificationLevelArrayInput)(nil)).Elem(), SettingClassificationLevelArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SettingEnvironmentSettingInput)(nil)).Elem(), SettingEnvironmentSettingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SettingEnvironmentSettingArrayInput)(nil)).Elem(), SettingEnvironmentSettingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SettingEnvironmentSettingEnvironmentInput)(nil)).Elem(), SettingEnvironmentSettingEnvironmentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SettingEnvironmentSettingEnvironmentArrayInput)(nil)).Elem(), SettingEnvironmentSettingEnvironmentArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SettingPasswordRestrictionInput)(nil)).Elem(), SettingPasswordRestrictionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SettingPasswordRestrictionPtrInput)(nil)).Elem(), SettingPasswordRestrictionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SettingSemanticTypeInput)(nil)).Elem(), SettingSemanticTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SettingSemanticTypeArrayInput)(nil)).Elem(), SettingSemanticTypeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SettingSemanticTypeAlgorithmInput)(nil)).Elem(), SettingSemanticTypeAlgorithmArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SettingSemanticTypeAlgorithmPtrInput)(nil)).Elem(), SettingSemanticTypeAlgorithmArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SettingSemanticTypeAlgorithmFullMaskInput)(nil)).Elem(), SettingSemanticTypeAlgorithmFullMaskArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SettingSemanticTypeAlgorithmFullMaskPtrInput)(nil)).Elem(), SettingSemanticTypeAlgorithmFullMaskArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SettingSemanticTypeAlgorithmInnerOuterMaskInput)(nil)).Elem(), SettingSemanticTypeAlgorithmInnerOuterMaskArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SettingSemanticTypeAlgorithmInnerOuterMaskPtrInput)(nil)).Elem(), SettingSemanticTypeAlgorithmInnerOuterMaskArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SettingSemanticTypeAlgorithmMd5MaskInput)(nil)).Elem(), SettingSemanticTypeAlgorithmMd5MaskArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SettingSemanticTypeAlgorithmMd5MaskPtrInput)(nil)).Elem(), SettingSemanticTypeAlgorithmMd5MaskArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SettingSemanticTypeAlgorithmRangeMaskInput)(nil)).Elem(), SettingSemanticTypeAlgorithmRangeMaskArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SettingSemanticTypeAlgorithmRangeMaskPtrInput)(nil)).Elem(), SettingSemanticTypeAlgorithmRangeMaskArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SettingSemanticTypeAlgorithmRangeMaskSliceInput)(nil)).Elem(), SettingSemanticTypeAlgorithmRangeMaskSliceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SettingSemanticTypeAlgorithmRangeMaskSliceArrayInput)(nil)).Elem(), SettingSemanticTypeAlgorithmRangeMaskSliceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SettingSqlQueryRestrictionInput)(nil)).Elem(), SettingSqlQueryRestrictionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SettingSqlQueryRestrictionPtrInput)(nil)).Elem(), SettingSqlQueryRestrictionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SettingWorkspaceProfileInput)(nil)).Elem(), SettingWorkspaceProfileArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SettingWorkspaceProfilePtrInput)(nil)).Elem(), SettingWorkspaceProfileArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SettingWorkspaceProfileAnnouncementInput)(nil)).Elem(), SettingWorkspaceProfileAnnouncementArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SettingWorkspaceProfileAnnouncementPtrInput)(nil)).Elem(), SettingWorkspaceProfileAnnouncementArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatabaseCatalogInput)(nil)).Elem(), GetDatabaseCatalogArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatabaseCatalogArrayInput)(nil)).Elem(), GetDatabaseCatalogArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatabaseCatalogSchemaInput)(nil)).Elem(), GetDatabaseCatalogSchemaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatabaseCatalogSchemaArrayInput)(nil)).Elem(), GetDatabaseCatalogSchemaArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatabaseCatalogSchemaTableInput)(nil)).Elem(), GetDatabaseCatalogSchemaTableArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatabaseCatalogSchemaTableArrayInput)(nil)).Elem(), GetDatabaseCatalogSchemaTableArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatabaseCatalogSchemaTableColumnInput)(nil)).Elem(), GetDatabaseCatalogSchemaTableColumnArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatabaseCatalogSchemaTableColumnArrayInput)(nil)).Elem(), GetDatabaseCatalogSchemaTableColumnArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGroupMemberInput)(nil)).Elem(), GetGroupMemberArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGroupMemberArrayInput)(nil)).Elem(), GetGroupMemberArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceDataSourceInput)(nil)).Elem(), GetInstanceDataSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceDataSourceArrayInput)(nil)).Elem(), GetInstanceDataSourceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceDataSourceExternalSecretInput)(nil)).Elem(), GetInstanceDataSourceExternalSecretArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceDataSourceExternalSecretArrayInput)(nil)).Elem(), GetInstanceDataSourceExternalSecretArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceDataSourceExternalSecretAwsSecretsManagerInput)(nil)).Elem(), GetInstanceDataSourceExternalSecretAwsSecretsManagerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceDataSourceExternalSecretAwsSecretsManagerArrayInput)(nil)).Elem(), GetInstanceDataSourceExternalSecretAwsSecretsManagerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceDataSourceExternalSecretGcpSecretManagerInput)(nil)).Elem(), GetInstanceDataSourceExternalSecretGcpSecretManagerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceDataSourceExternalSecretGcpSecretManagerArrayInput)(nil)).Elem(), GetInstanceDataSourceExternalSecretGcpSecretManagerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceDataSourceExternalSecretVaultInput)(nil)).Elem(), GetInstanceDataSourceExternalSecretVaultArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceDataSourceExternalSecretVaultArrayInput)(nil)).Elem(), GetInstanceDataSourceExternalSecretVaultArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceDataSourceExternalSecretVaultAppRoleInput)(nil)).Elem(), GetInstanceDataSourceExternalSecretVaultAppRoleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceDataSourceExternalSecretVaultAppRoleArrayInput)(nil)).Elem(), GetInstanceDataSourceExternalSecretVaultAppRoleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicyDataSourceQueryPolicyInput)(nil)).Elem(), GetPolicyDataSourceQueryPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicyDataSourceQueryPolicyPtrInput)(nil)).Elem(), GetPolicyDataSourceQueryPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicyDisableCopyDataPolicyInput)(nil)).Elem(), GetPolicyDisableCopyDataPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicyDisableCopyDataPolicyPtrInput)(nil)).Elem(), GetPolicyDisableCopyDataPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicyGlobalMaskingPolicyInput)(nil)).Elem(), GetPolicyGlobalMaskingPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicyGlobalMaskingPolicyPtrInput)(nil)).Elem(), GetPolicyGlobalMaskingPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicyGlobalMaskingPolicyRuleInput)(nil)).Elem(), GetPolicyGlobalMaskingPolicyRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicyGlobalMaskingPolicyRuleArrayInput)(nil)).Elem(), GetPolicyGlobalMaskingPolicyRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicyMaskingExceptionPolicyInput)(nil)).Elem(), GetPolicyMaskingExceptionPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicyMaskingExceptionPolicyPtrInput)(nil)).Elem(), GetPolicyMaskingExceptionPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicyMaskingExceptionPolicyExceptionInput)(nil)).Elem(), GetPolicyMaskingExceptionPolicyExceptionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicyMaskingExceptionPolicyExceptionArrayInput)(nil)).Elem(), GetPolicyMaskingExceptionPolicyExceptionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicyRolloutPolicyInput)(nil)).Elem(), GetPolicyRolloutPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicyRolloutPolicyPtrInput)(nil)).Elem(), GetPolicyRolloutPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProjectWebhookInput)(nil)).Elem(), GetProjectWebhookArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProjectWebhookArrayInput)(nil)).Elem(), GetProjectWebhookArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSettingApprovalFlowInput)(nil)).Elem(), GetSettingApprovalFlowArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSettingApprovalFlowArrayInput)(nil)).Elem(), GetSettingApprovalFlowArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSettingApprovalFlowRuleInput)(nil)).Elem(), GetSettingApprovalFlowRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSettingApprovalFlowRuleArrayInput)(nil)).Elem(), GetSettingApprovalFlowRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSettingApprovalFlowRuleConditionInput)(nil)).Elem(), GetSettingApprovalFlowRuleConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSettingApprovalFlowRuleConditionArrayInput)(nil)).Elem(), GetSettingApprovalFlowRuleConditionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSettingApprovalFlowRuleFlowInput)(nil)).Elem(), GetSettingApprovalFlowRuleFlowArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSettingApprovalFlowRuleFlowArrayInput)(nil)).Elem(), GetSettingApprovalFlowRuleFlowArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSettingApprovalFlowRuleFlowStepInput)(nil)).Elem(), GetSettingApprovalFlowRuleFlowStepArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSettingApprovalFlowRuleFlowStepArrayInput)(nil)).Elem(), GetSettingApprovalFlowRuleFlowStepArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSettingClassificationInput)(nil)).Elem(), GetSettingClassificationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSettingClassificationPtrInput)(nil)).Elem(), GetSettingClassificationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSettingClassificationClassificationInput)(nil)).Elem(), GetSettingClassificationClassificationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSettingClassificationClassificationArrayInput)(nil)).Elem(), GetSettingClassificationClassificationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSettingClassificationLevelInput)(nil)).Elem(), GetSettingClassificationLevelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSettingClassificationLevelArrayInput)(nil)).Elem(), GetSettingClassificationLevelArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSettingEnvironmentSettingInput)(nil)).Elem(), GetSettingEnvironmentSettingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSettingEnvironmentSettingArrayInput)(nil)).Elem(), GetSettingEnvironmentSettingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSettingEnvironmentSettingEnvironmentInput)(nil)).Elem(), GetSettingEnvironmentSettingEnvironmentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSettingEnvironmentSettingEnvironmentArrayInput)(nil)).Elem(), GetSettingEnvironmentSettingEnvironmentArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSettingPasswordRestrictionInput)(nil)).Elem(), GetSettingPasswordRestrictionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSettingPasswordRestrictionPtrInput)(nil)).Elem(), GetSettingPasswordRestrictionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSettingSemanticTypeInput)(nil)).Elem(), GetSettingSemanticTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSettingSemanticTypeArrayInput)(nil)).Elem(), GetSettingSemanticTypeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSettingSemanticTypeAlgorithmInput)(nil)).Elem(), GetSettingSemanticTypeAlgorithmArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSettingSemanticTypeAlgorithmFullMaskInput)(nil)).Elem(), GetSettingSemanticTypeAlgorithmFullMaskArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSettingSemanticTypeAlgorithmInnerOuterMaskInput)(nil)).Elem(), GetSettingSemanticTypeAlgorithmInnerOuterMaskArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSettingSemanticTypeAlgorithmMd5MaskInput)(nil)).Elem(), GetSettingSemanticTypeAlgorithmMd5MaskArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSettingSemanticTypeAlgorithmRangeMaskInput)(nil)).Elem(), GetSettingSemanticTypeAlgorithmRangeMaskArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSettingSemanticTypeAlgorithmRangeMaskSliceInput)(nil)).Elem(), GetSettingSemanticTypeAlgorithmRangeMaskSliceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSettingSemanticTypeAlgorithmRangeMaskSliceArrayInput)(nil)).Elem(), GetSettingSemanticTypeAlgorithmRangeMaskSliceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSettingSqlQueryRestrictionInput)(nil)).Elem(), GetSettingSqlQueryRestrictionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSettingSqlQueryRestrictionPtrInput)(nil)).Elem(), GetSettingSqlQueryRestrictionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSettingWorkspaceProfileInput)(nil)).Elem(), GetSettingWorkspaceProfileArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSettingWorkspaceProfilePtrInput)(nil)).Elem(), GetSettingWorkspaceProfileArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSettingWorkspaceProfileAnnouncementInput)(nil)).Elem(), GetSettingWorkspaceProfileAnnouncementArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSettingWorkspaceProfileAnnouncementPtrInput)(nil)).Elem(), GetSettingWorkspaceProfileAnnouncementArgs{})
	pulumi.RegisterOutputType(DatabaseCatalogOutput{})
	pulumi.RegisterOutputType(DatabaseCatalogPtrOutput{})
	pulumi.RegisterOutputType(DatabaseCatalogSchemaOutput{})
	pulumi.RegisterOutputType(DatabaseCatalogSchemaArrayOutput{})
	pulumi.RegisterOutputType(DatabaseCatalogSchemaTableOutput{})
	pulumi.RegisterOutputType(DatabaseCatalogSchemaTableArrayOutput{})
	pulumi.RegisterOutputType(DatabaseCatalogSchemaTableColumnOutput{})
	pulumi.RegisterOutputType(DatabaseCatalogSchemaTableColumnArrayOutput{})
	pulumi.RegisterOutputType(GroupMemberOutput{})
	pulumi.RegisterOutputType(GroupMemberArrayOutput{})
	pulumi.RegisterOutputType(InstanceDataSourceOutput{})
	pulumi.RegisterOutputType(InstanceDataSourceArrayOutput{})
	pulumi.RegisterOutputType(InstanceDataSourceExternalSecretOutput{})
	pulumi.RegisterOutputType(InstanceDataSourceExternalSecretPtrOutput{})
	pulumi.RegisterOutputType(InstanceDataSourceExternalSecretAwsSecretsManagerOutput{})
	pulumi.RegisterOutputType(InstanceDataSourceExternalSecretAwsSecretsManagerPtrOutput{})
	pulumi.RegisterOutputType(InstanceDataSourceExternalSecretGcpSecretManagerOutput{})
	pulumi.RegisterOutputType(InstanceDataSourceExternalSecretGcpSecretManagerPtrOutput{})
	pulumi.RegisterOutputType(InstanceDataSourceExternalSecretVaultOutput{})
	pulumi.RegisterOutputType(InstanceDataSourceExternalSecretVaultPtrOutput{})
	pulumi.RegisterOutputType(InstanceDataSourceExternalSecretVaultAppRoleOutput{})
	pulumi.RegisterOutputType(InstanceDataSourceExternalSecretVaultAppRolePtrOutput{})
	pulumi.RegisterOutputType(PolicyDataSourceQueryPolicyOutput{})
	pulumi.RegisterOutputType(PolicyDataSourceQueryPolicyPtrOutput{})
	pulumi.RegisterOutputType(PolicyDisableCopyDataPolicyOutput{})
	pulumi.RegisterOutputType(PolicyDisableCopyDataPolicyPtrOutput{})
	pulumi.RegisterOutputType(PolicyGlobalMaskingPolicyOutput{})
	pulumi.RegisterOutputType(PolicyGlobalMaskingPolicyPtrOutput{})
	pulumi.RegisterOutputType(PolicyGlobalMaskingPolicyRuleOutput{})
	pulumi.RegisterOutputType(PolicyGlobalMaskingPolicyRuleArrayOutput{})
	pulumi.RegisterOutputType(PolicyMaskingExceptionPolicyOutput{})
	pulumi.RegisterOutputType(PolicyMaskingExceptionPolicyPtrOutput{})
	pulumi.RegisterOutputType(PolicyMaskingExceptionPolicyExceptionOutput{})
	pulumi.RegisterOutputType(PolicyMaskingExceptionPolicyExceptionArrayOutput{})
	pulumi.RegisterOutputType(PolicyRolloutPolicyOutput{})
	pulumi.RegisterOutputType(PolicyRolloutPolicyPtrOutput{})
	pulumi.RegisterOutputType(ProjectWebhookOutput{})
	pulumi.RegisterOutputType(ProjectWebhookArrayOutput{})
	pulumi.RegisterOutputType(SettingApprovalFlowOutput{})
	pulumi.RegisterOutputType(SettingApprovalFlowArrayOutput{})
	pulumi.RegisterOutputType(SettingApprovalFlowRuleOutput{})
	pulumi.RegisterOutputType(SettingApprovalFlowRuleArrayOutput{})
	pulumi.RegisterOutputType(SettingApprovalFlowRuleConditionOutput{})
	pulumi.RegisterOutputType(SettingApprovalFlowRuleConditionArrayOutput{})
	pulumi.RegisterOutputType(SettingApprovalFlowRuleFlowOutput{})
	pulumi.RegisterOutputType(SettingApprovalFlowRuleFlowArrayOutput{})
	pulumi.RegisterOutputType(SettingApprovalFlowRuleFlowStepOutput{})
	pulumi.RegisterOutputType(SettingApprovalFlowRuleFlowStepArrayOutput{})
	pulumi.RegisterOutputType(SettingClassificationOutput{})
	pulumi.RegisterOutputType(SettingClassificationPtrOutput{})
	pulumi.RegisterOutputType(SettingClassificationClassificationOutput{})
	pulumi.RegisterOutputType(SettingClassificationClassificationArrayOutput{})
	pulumi.RegisterOutputType(SettingClassificationLevelOutput{})
	pulumi.RegisterOutputType(SettingClassificationLevelArrayOutput{})
	pulumi.RegisterOutputType(SettingEnvironmentSettingOutput{})
	pulumi.RegisterOutputType(SettingEnvironmentSettingArrayOutput{})
	pulumi.RegisterOutputType(SettingEnvironmentSettingEnvironmentOutput{})
	pulumi.RegisterOutputType(SettingEnvironmentSettingEnvironmentArrayOutput{})
	pulumi.RegisterOutputType(SettingPasswordRestrictionOutput{})
	pulumi.RegisterOutputType(SettingPasswordRestrictionPtrOutput{})
	pulumi.RegisterOutputType(SettingSemanticTypeOutput{})
	pulumi.RegisterOutputType(SettingSemanticTypeArrayOutput{})
	pulumi.RegisterOutputType(SettingSemanticTypeAlgorithmOutput{})
	pulumi.RegisterOutputType(SettingSemanticTypeAlgorithmPtrOutput{})
	pulumi.RegisterOutputType(SettingSemanticTypeAlgorithmFullMaskOutput{})
	pulumi.RegisterOutputType(SettingSemanticTypeAlgorithmFullMaskPtrOutput{})
	pulumi.RegisterOutputType(SettingSemanticTypeAlgorithmInnerOuterMaskOutput{})
	pulumi.RegisterOutputType(SettingSemanticTypeAlgorithmInnerOuterMaskPtrOutput{})
	pulumi.RegisterOutputType(SettingSemanticTypeAlgorithmMd5MaskOutput{})
	pulumi.RegisterOutputType(SettingSemanticTypeAlgorithmMd5MaskPtrOutput{})
	pulumi.RegisterOutputType(SettingSemanticTypeAlgorithmRangeMaskOutput{})
	pulumi.RegisterOutputType(SettingSemanticTypeAlgorithmRangeMaskPtrOutput{})
	pulumi.RegisterOutputType(SettingSemanticTypeAlgorithmRangeMaskSliceOutput{})
	pulumi.RegisterOutputType(SettingSemanticTypeAlgorithmRangeMaskSliceArrayOutput{})
	pulumi.RegisterOutputType(SettingSqlQueryRestrictionOutput{})
	pulumi.RegisterOutputType(SettingSqlQueryRestrictionPtrOutput{})
	pulumi.RegisterOutputType(SettingWorkspaceProfileOutput{})
	pulumi.RegisterOutputType(SettingWorkspaceProfilePtrOutput{})
	pulumi.RegisterOutputType(SettingWorkspaceProfileAnnouncementOutput{})
	pulumi.RegisterOutputType(SettingWorkspaceProfileAnnouncementPtrOutput{})
	pulumi.RegisterOutputType(GetDatabaseCatalogOutput{})
	pulumi.RegisterOutputType(GetDatabaseCatalogArrayOutput{})
	pulumi.RegisterOutputType(GetDatabaseCatalogSchemaOutput{})
	pulumi.RegisterOutputType(GetDatabaseCatalogSchemaArrayOutput{})
	pulumi.RegisterOutputType(GetDatabaseCatalogSchemaTableOutput{})
	pulumi.RegisterOutputType(GetDatabaseCatalogSchemaTableArrayOutput{})
	pulumi.RegisterOutputType(GetDatabaseCatalogSchemaTableColumnOutput{})
	pulumi.RegisterOutputType(GetDatabaseCatalogSchemaTableColumnArrayOutput{})
	pulumi.RegisterOutputType(GetGroupMemberOutput{})
	pulumi.RegisterOutputType(GetGroupMemberArrayOutput{})
	pulumi.RegisterOutputType(GetInstanceDataSourceOutput{})
	pulumi.RegisterOutputType(GetInstanceDataSourceArrayOutput{})
	pulumi.RegisterOutputType(GetInstanceDataSourceExternalSecretOutput{})
	pulumi.RegisterOutputType(GetInstanceDataSourceExternalSecretArrayOutput{})
	pulumi.RegisterOutputType(GetInstanceDataSourceExternalSecretAwsSecretsManagerOutput{})
	pulumi.RegisterOutputType(GetInstanceDataSourceExternalSecretAwsSecretsManagerArrayOutput{})
	pulumi.RegisterOutputType(GetInstanceDataSourceExternalSecretGcpSecretManagerOutput{})
	pulumi.RegisterOutputType(GetInstanceDataSourceExternalSecretGcpSecretManagerArrayOutput{})
	pulumi.RegisterOutputType(GetInstanceDataSourceExternalSecretVaultOutput{})
	pulumi.RegisterOutputType(GetInstanceDataSourceExternalSecretVaultArrayOutput{})
	pulumi.RegisterOutputType(GetInstanceDataSourceExternalSecretVaultAppRoleOutput{})
	pulumi.RegisterOutputType(GetInstanceDataSourceExternalSecretVaultAppRoleArrayOutput{})
	pulumi.RegisterOutputType(GetPolicyDataSourceQueryPolicyOutput{})
	pulumi.RegisterOutputType(GetPolicyDataSourceQueryPolicyPtrOutput{})
	pulumi.RegisterOutputType(GetPolicyDisableCopyDataPolicyOutput{})
	pulumi.RegisterOutputType(GetPolicyDisableCopyDataPolicyPtrOutput{})
	pulumi.RegisterOutputType(GetPolicyGlobalMaskingPolicyOutput{})
	pulumi.RegisterOutputType(GetPolicyGlobalMaskingPolicyPtrOutput{})
	pulumi.RegisterOutputType(GetPolicyGlobalMaskingPolicyRuleOutput{})
	pulumi.RegisterOutputType(GetPolicyGlobalMaskingPolicyRuleArrayOutput{})
	pulumi.RegisterOutputType(GetPolicyMaskingExceptionPolicyOutput{})
	pulumi.RegisterOutputType(GetPolicyMaskingExceptionPolicyPtrOutput{})
	pulumi.RegisterOutputType(GetPolicyMaskingExceptionPolicyExceptionOutput{})
	pulumi.RegisterOutputType(GetPolicyMaskingExceptionPolicyExceptionArrayOutput{})
	pulumi.RegisterOutputType(GetPolicyRolloutPolicyOutput{})
	pulumi.RegisterOutputType(GetPolicyRolloutPolicyPtrOutput{})
	pulumi.RegisterOutputType(GetProjectWebhookOutput{})
	pulumi.RegisterOutputType(GetProjectWebhookArrayOutput{})
	pulumi.RegisterOutputType(GetSettingApprovalFlowOutput{})
	pulumi.RegisterOutputType(GetSettingApprovalFlowArrayOutput{})
	pulumi.RegisterOutputType(GetSettingApprovalFlowRuleOutput{})
	pulumi.RegisterOutputType(GetSettingApprovalFlowRuleArrayOutput{})
	pulumi.RegisterOutputType(GetSettingApprovalFlowRuleConditionOutput{})
	pulumi.RegisterOutputType(GetSettingApprovalFlowRuleConditionArrayOutput{})
	pulumi.RegisterOutputType(GetSettingApprovalFlowRuleFlowOutput{})
	pulumi.RegisterOutputType(GetSettingApprovalFlowRuleFlowArrayOutput{})
	pulumi.RegisterOutputType(GetSettingApprovalFlowRuleFlowStepOutput{})
	pulumi.RegisterOutputType(GetSettingApprovalFlowRuleFlowStepArrayOutput{})
	pulumi.RegisterOutputType(GetSettingClassificationOutput{})
	pulumi.RegisterOutputType(GetSettingClassificationPtrOutput{})
	pulumi.RegisterOutputType(GetSettingClassificationClassificationOutput{})
	pulumi.RegisterOutputType(GetSettingClassificationClassificationArrayOutput{})
	pulumi.RegisterOutputType(GetSettingClassificationLevelOutput{})
	pulumi.RegisterOutputType(GetSettingClassificationLevelArrayOutput{})
	pulumi.RegisterOutputType(GetSettingEnvironmentSettingOutput{})
	pulumi.RegisterOutputType(GetSettingEnvironmentSettingArrayOutput{})
	pulumi.RegisterOutputType(GetSettingEnvironmentSettingEnvironmentOutput{})
	pulumi.RegisterOutputType(GetSettingEnvironmentSettingEnvironmentArrayOutput{})
	pulumi.RegisterOutputType(GetSettingPasswordRestrictionOutput{})
	pulumi.RegisterOutputType(GetSettingPasswordRestrictionPtrOutput{})
	pulumi.RegisterOutputType(GetSettingSemanticTypeOutput{})
	pulumi.RegisterOutputType(GetSettingSemanticTypeArrayOutput{})
	pulumi.RegisterOutputType(GetSettingSemanticTypeAlgorithmOutput{})
	pulumi.RegisterOutputType(GetSettingSemanticTypeAlgorithmFullMaskOutput{})
	pulumi.RegisterOutputType(GetSettingSemanticTypeAlgorithmInnerOuterMaskOutput{})
	pulumi.RegisterOutputType(GetSettingSemanticTypeAlgorithmMd5MaskOutput{})
	pulumi.RegisterOutputType(GetSettingSemanticTypeAlgorithmRangeMaskOutput{})
	pulumi.RegisterOutputType(GetSettingSemanticTypeAlgorithmRangeMaskSliceOutput{})
	pulumi.RegisterOutputType(GetSettingSemanticTypeAlgorithmRangeMaskSliceArrayOutput{})
	pulumi.RegisterOutputType(GetSettingSqlQueryRestrictionOutput{})
	pulumi.RegisterOutputType(GetSettingSqlQueryRestrictionPtrOutput{})
	pulumi.RegisterOutputType(GetSettingWorkspaceProfileOutput{})
	pulumi.RegisterOutputType(GetSettingWorkspaceProfilePtrOutput{})
	pulumi.RegisterOutputType(GetSettingWorkspaceProfileAnnouncementOutput{})
	pulumi.RegisterOutputType(GetSettingWorkspaceProfileAnnouncementPtrOutput{})
}
