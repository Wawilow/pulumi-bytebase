// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package role

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/wawilow/pulumi-bytebase/sdk/go/bytebase/internal"
)

// The role data source list.
func GetList(ctx *pulumi.Context, opts ...pulumi.InvokeOption) (*GetListResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetListResult
	err := ctx.Invoke("bytebase:Role/getList:getList", nil, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of values returned by getList.
type GetListResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id    string        `pulumi:"id"`
	Roles []GetListRole `pulumi:"roles"`
}

func GetListOutput(ctx *pulumi.Context, opts ...pulumi.InvokeOption) GetListResultOutput {
	return pulumi.ToOutput(0).ApplyT(func(int) (GetListResultOutput, error) {
		options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
		return ctx.InvokeOutput("bytebase:Role/getList:getList", nil, GetListResultOutput{}, options).(GetListResultOutput), nil
	}).(GetListResultOutput)
}

// A collection of values returned by getList.
type GetListResultOutput struct{ *pulumi.OutputState }

func (GetListResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetListResult)(nil)).Elem()
}

func (o GetListResultOutput) ToGetListResultOutput() GetListResultOutput {
	return o
}

func (o GetListResultOutput) ToGetListResultOutputWithContext(ctx context.Context) GetListResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o GetListResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetListResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetListResultOutput) Roles() GetListRoleArrayOutput {
	return o.ApplyT(func(v GetListResult) []GetListRole { return v.Roles }).(GetListRoleArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetListResultOutput{})
}
