// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package role

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/wawilow/pulumi-bytebase/sdk/go/bytebase/internal"
)

var _ = internal.GetEnvOrDefault

type GetListRole struct {
	// The role description.
	Description string `pulumi:"description"`
	// The role full name in roles/{resource id} format.
	Name string `pulumi:"name"`
	// The role permissions.
	Permissions []string `pulumi:"permissions"`
	// The role unique resource id.
	ResourceId string `pulumi:"resourceId"`
	// The role title.
	Title string `pulumi:"title"`
	// The role type.
	Type string `pulumi:"type"`
}

// GetListRoleInput is an input type that accepts GetListRoleArgs and GetListRoleOutput values.
// You can construct a concrete instance of `GetListRoleInput` via:
//
//	GetListRoleArgs{...}
type GetListRoleInput interface {
	pulumi.Input

	ToGetListRoleOutput() GetListRoleOutput
	ToGetListRoleOutputWithContext(context.Context) GetListRoleOutput
}

type GetListRoleArgs struct {
	// The role description.
	Description pulumi.StringInput `pulumi:"description"`
	// The role full name in roles/{resource id} format.
	Name pulumi.StringInput `pulumi:"name"`
	// The role permissions.
	Permissions pulumi.StringArrayInput `pulumi:"permissions"`
	// The role unique resource id.
	ResourceId pulumi.StringInput `pulumi:"resourceId"`
	// The role title.
	Title pulumi.StringInput `pulumi:"title"`
	// The role type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetListRoleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetListRole)(nil)).Elem()
}

func (i GetListRoleArgs) ToGetListRoleOutput() GetListRoleOutput {
	return i.ToGetListRoleOutputWithContext(context.Background())
}

func (i GetListRoleArgs) ToGetListRoleOutputWithContext(ctx context.Context) GetListRoleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetListRoleOutput)
}

// GetListRoleArrayInput is an input type that accepts GetListRoleArray and GetListRoleArrayOutput values.
// You can construct a concrete instance of `GetListRoleArrayInput` via:
//
//	GetListRoleArray{ GetListRoleArgs{...} }
type GetListRoleArrayInput interface {
	pulumi.Input

	ToGetListRoleArrayOutput() GetListRoleArrayOutput
	ToGetListRoleArrayOutputWithContext(context.Context) GetListRoleArrayOutput
}

type GetListRoleArray []GetListRoleInput

func (GetListRoleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetListRole)(nil)).Elem()
}

func (i GetListRoleArray) ToGetListRoleArrayOutput() GetListRoleArrayOutput {
	return i.ToGetListRoleArrayOutputWithContext(context.Background())
}

func (i GetListRoleArray) ToGetListRoleArrayOutputWithContext(ctx context.Context) GetListRoleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetListRoleArrayOutput)
}

type GetListRoleOutput struct{ *pulumi.OutputState }

func (GetListRoleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetListRole)(nil)).Elem()
}

func (o GetListRoleOutput) ToGetListRoleOutput() GetListRoleOutput {
	return o
}

func (o GetListRoleOutput) ToGetListRoleOutputWithContext(ctx context.Context) GetListRoleOutput {
	return o
}

// The role description.
func (o GetListRoleOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetListRole) string { return v.Description }).(pulumi.StringOutput)
}

// The role full name in roles/{resource id} format.
func (o GetListRoleOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetListRole) string { return v.Name }).(pulumi.StringOutput)
}

// The role permissions.
func (o GetListRoleOutput) Permissions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetListRole) []string { return v.Permissions }).(pulumi.StringArrayOutput)
}

// The role unique resource id.
func (o GetListRoleOutput) ResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetListRole) string { return v.ResourceId }).(pulumi.StringOutput)
}

// The role title.
func (o GetListRoleOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v GetListRole) string { return v.Title }).(pulumi.StringOutput)
}

// The role type.
func (o GetListRoleOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetListRole) string { return v.Type }).(pulumi.StringOutput)
}

type GetListRoleArrayOutput struct{ *pulumi.OutputState }

func (GetListRoleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetListRole)(nil)).Elem()
}

func (o GetListRoleArrayOutput) ToGetListRoleArrayOutput() GetListRoleArrayOutput {
	return o
}

func (o GetListRoleArrayOutput) ToGetListRoleArrayOutputWithContext(ctx context.Context) GetListRoleArrayOutput {
	return o
}

func (o GetListRoleArrayOutput) Index(i pulumi.IntInput) GetListRoleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetListRole {
		return vs[0].([]GetListRole)[vs[1].(int)]
	}).(GetListRoleOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*GetListRoleInput)(nil)).Elem(), GetListRoleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetListRoleArrayInput)(nil)).Elem(), GetListRoleArray{})
	pulumi.RegisterOutputType(GetListRoleOutput{})
	pulumi.RegisterOutputType(GetListRoleArrayOutput{})
}
