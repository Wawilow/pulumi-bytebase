// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package databasegroup

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/wawilow/pulumi-bytebase/sdk/go/bytebase/internal"
)

var _ = internal.GetEnvOrDefault

type GetListDatabaseGroup struct {
	// The database group condition.
	Condition string `pulumi:"condition"`
	// The database group fullname in projects/{id}/databaseGroups/{id} format.
	Name string `pulumi:"name"`
	// The database group title.
	Title string `pulumi:"title"`
}

// GetListDatabaseGroupInput is an input type that accepts GetListDatabaseGroupArgs and GetListDatabaseGroupOutput values.
// You can construct a concrete instance of `GetListDatabaseGroupInput` via:
//
//	GetListDatabaseGroupArgs{...}
type GetListDatabaseGroupInput interface {
	pulumi.Input

	ToGetListDatabaseGroupOutput() GetListDatabaseGroupOutput
	ToGetListDatabaseGroupOutputWithContext(context.Context) GetListDatabaseGroupOutput
}

type GetListDatabaseGroupArgs struct {
	// The database group condition.
	Condition pulumi.StringInput `pulumi:"condition"`
	// The database group fullname in projects/{id}/databaseGroups/{id} format.
	Name pulumi.StringInput `pulumi:"name"`
	// The database group title.
	Title pulumi.StringInput `pulumi:"title"`
}

func (GetListDatabaseGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetListDatabaseGroup)(nil)).Elem()
}

func (i GetListDatabaseGroupArgs) ToGetListDatabaseGroupOutput() GetListDatabaseGroupOutput {
	return i.ToGetListDatabaseGroupOutputWithContext(context.Background())
}

func (i GetListDatabaseGroupArgs) ToGetListDatabaseGroupOutputWithContext(ctx context.Context) GetListDatabaseGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetListDatabaseGroupOutput)
}

// GetListDatabaseGroupArrayInput is an input type that accepts GetListDatabaseGroupArray and GetListDatabaseGroupArrayOutput values.
// You can construct a concrete instance of `GetListDatabaseGroupArrayInput` via:
//
//	GetListDatabaseGroupArray{ GetListDatabaseGroupArgs{...} }
type GetListDatabaseGroupArrayInput interface {
	pulumi.Input

	ToGetListDatabaseGroupArrayOutput() GetListDatabaseGroupArrayOutput
	ToGetListDatabaseGroupArrayOutputWithContext(context.Context) GetListDatabaseGroupArrayOutput
}

type GetListDatabaseGroupArray []GetListDatabaseGroupInput

func (GetListDatabaseGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetListDatabaseGroup)(nil)).Elem()
}

func (i GetListDatabaseGroupArray) ToGetListDatabaseGroupArrayOutput() GetListDatabaseGroupArrayOutput {
	return i.ToGetListDatabaseGroupArrayOutputWithContext(context.Background())
}

func (i GetListDatabaseGroupArray) ToGetListDatabaseGroupArrayOutputWithContext(ctx context.Context) GetListDatabaseGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetListDatabaseGroupArrayOutput)
}

type GetListDatabaseGroupOutput struct{ *pulumi.OutputState }

func (GetListDatabaseGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetListDatabaseGroup)(nil)).Elem()
}

func (o GetListDatabaseGroupOutput) ToGetListDatabaseGroupOutput() GetListDatabaseGroupOutput {
	return o
}

func (o GetListDatabaseGroupOutput) ToGetListDatabaseGroupOutputWithContext(ctx context.Context) GetListDatabaseGroupOutput {
	return o
}

// The database group condition.
func (o GetListDatabaseGroupOutput) Condition() pulumi.StringOutput {
	return o.ApplyT(func(v GetListDatabaseGroup) string { return v.Condition }).(pulumi.StringOutput)
}

// The database group fullname in projects/{id}/databaseGroups/{id} format.
func (o GetListDatabaseGroupOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetListDatabaseGroup) string { return v.Name }).(pulumi.StringOutput)
}

// The database group title.
func (o GetListDatabaseGroupOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v GetListDatabaseGroup) string { return v.Title }).(pulumi.StringOutput)
}

type GetListDatabaseGroupArrayOutput struct{ *pulumi.OutputState }

func (GetListDatabaseGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetListDatabaseGroup)(nil)).Elem()
}

func (o GetListDatabaseGroupArrayOutput) ToGetListDatabaseGroupArrayOutput() GetListDatabaseGroupArrayOutput {
	return o
}

func (o GetListDatabaseGroupArrayOutput) ToGetListDatabaseGroupArrayOutputWithContext(ctx context.Context) GetListDatabaseGroupArrayOutput {
	return o
}

func (o GetListDatabaseGroupArrayOutput) Index(i pulumi.IntInput) GetListDatabaseGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetListDatabaseGroup {
		return vs[0].([]GetListDatabaseGroup)[vs[1].(int)]
	}).(GetListDatabaseGroupOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*GetListDatabaseGroupInput)(nil)).Elem(), GetListDatabaseGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetListDatabaseGroupArrayInput)(nil)).Elem(), GetListDatabaseGroupArray{})
	pulumi.RegisterOutputType(GetListDatabaseGroupOutput{})
	pulumi.RegisterOutputType(GetListDatabaseGroupArrayOutput{})
}
