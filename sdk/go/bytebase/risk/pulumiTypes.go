// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package risk

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/wawilow/pulumi-bytebase/sdk/go/bytebase/internal"
)

var _ = internal.GetEnvOrDefault

type GetListRisk struct {
	// The risk active.
	Active bool `pulumi:"active"`
	// The risk condition.
	Condition string `pulumi:"condition"`
	// The risk level.
	Level int `pulumi:"level"`
	// The risk full name in risks/{resource id} format.
	Name string `pulumi:"name"`
	// The risk source.
	Source string `pulumi:"source"`
	// The risk title.
	Title string `pulumi:"title"`
}

// GetListRiskInput is an input type that accepts GetListRiskArgs and GetListRiskOutput values.
// You can construct a concrete instance of `GetListRiskInput` via:
//
//	GetListRiskArgs{...}
type GetListRiskInput interface {
	pulumi.Input

	ToGetListRiskOutput() GetListRiskOutput
	ToGetListRiskOutputWithContext(context.Context) GetListRiskOutput
}

type GetListRiskArgs struct {
	// The risk active.
	Active pulumi.BoolInput `pulumi:"active"`
	// The risk condition.
	Condition pulumi.StringInput `pulumi:"condition"`
	// The risk level.
	Level pulumi.IntInput `pulumi:"level"`
	// The risk full name in risks/{resource id} format.
	Name pulumi.StringInput `pulumi:"name"`
	// The risk source.
	Source pulumi.StringInput `pulumi:"source"`
	// The risk title.
	Title pulumi.StringInput `pulumi:"title"`
}

func (GetListRiskArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetListRisk)(nil)).Elem()
}

func (i GetListRiskArgs) ToGetListRiskOutput() GetListRiskOutput {
	return i.ToGetListRiskOutputWithContext(context.Background())
}

func (i GetListRiskArgs) ToGetListRiskOutputWithContext(ctx context.Context) GetListRiskOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetListRiskOutput)
}

// GetListRiskArrayInput is an input type that accepts GetListRiskArray and GetListRiskArrayOutput values.
// You can construct a concrete instance of `GetListRiskArrayInput` via:
//
//	GetListRiskArray{ GetListRiskArgs{...} }
type GetListRiskArrayInput interface {
	pulumi.Input

	ToGetListRiskArrayOutput() GetListRiskArrayOutput
	ToGetListRiskArrayOutputWithContext(context.Context) GetListRiskArrayOutput
}

type GetListRiskArray []GetListRiskInput

func (GetListRiskArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetListRisk)(nil)).Elem()
}

func (i GetListRiskArray) ToGetListRiskArrayOutput() GetListRiskArrayOutput {
	return i.ToGetListRiskArrayOutputWithContext(context.Background())
}

func (i GetListRiskArray) ToGetListRiskArrayOutputWithContext(ctx context.Context) GetListRiskArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetListRiskArrayOutput)
}

type GetListRiskOutput struct{ *pulumi.OutputState }

func (GetListRiskOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetListRisk)(nil)).Elem()
}

func (o GetListRiskOutput) ToGetListRiskOutput() GetListRiskOutput {
	return o
}

func (o GetListRiskOutput) ToGetListRiskOutputWithContext(ctx context.Context) GetListRiskOutput {
	return o
}

// The risk active.
func (o GetListRiskOutput) Active() pulumi.BoolOutput {
	return o.ApplyT(func(v GetListRisk) bool { return v.Active }).(pulumi.BoolOutput)
}

// The risk condition.
func (o GetListRiskOutput) Condition() pulumi.StringOutput {
	return o.ApplyT(func(v GetListRisk) string { return v.Condition }).(pulumi.StringOutput)
}

// The risk level.
func (o GetListRiskOutput) Level() pulumi.IntOutput {
	return o.ApplyT(func(v GetListRisk) int { return v.Level }).(pulumi.IntOutput)
}

// The risk full name in risks/{resource id} format.
func (o GetListRiskOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetListRisk) string { return v.Name }).(pulumi.StringOutput)
}

// The risk source.
func (o GetListRiskOutput) Source() pulumi.StringOutput {
	return o.ApplyT(func(v GetListRisk) string { return v.Source }).(pulumi.StringOutput)
}

// The risk title.
func (o GetListRiskOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v GetListRisk) string { return v.Title }).(pulumi.StringOutput)
}

type GetListRiskArrayOutput struct{ *pulumi.OutputState }

func (GetListRiskArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetListRisk)(nil)).Elem()
}

func (o GetListRiskArrayOutput) ToGetListRiskArrayOutput() GetListRiskArrayOutput {
	return o
}

func (o GetListRiskArrayOutput) ToGetListRiskArrayOutputWithContext(ctx context.Context) GetListRiskArrayOutput {
	return o
}

func (o GetListRiskArrayOutput) Index(i pulumi.IntInput) GetListRiskOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetListRisk {
		return vs[0].([]GetListRisk)[vs[1].(int)]
	}).(GetListRiskOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*GetListRiskInput)(nil)).Elem(), GetListRiskArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetListRiskArrayInput)(nil)).Elem(), GetListRiskArray{})
	pulumi.RegisterOutputType(GetListRiskOutput{})
	pulumi.RegisterOutputType(GetListRiskArrayOutput{})
}
