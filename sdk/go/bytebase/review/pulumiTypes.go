// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package review

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/wawilow/pulumi-bytebase/sdk/go/bytebase/internal"
)

var _ = internal.GetEnvOrDefault

type ConfigRule struct {
	// The comment for the rule.
	Comment *string `pulumi:"comment"`
	// The rule for the database engine.
	Engine string `pulumi:"engine"`
	// The rule level.
	Level string `pulumi:"level"`
	// The payload is a JSON string that varies by rule type. Check https://github.com/bytebase/bytebase/blob/main/proto/v1/v1/SQL*REVIEW*RULES_DOCUMENTATION.md#payload-structure-types for all details
	Payload *string `pulumi:"payload"`
	// The rule unique type. Check https://github.com/bytebase/bytebase/blob/main/proto/v1/v1/SQL*REVIEW*RULES_DOCUMENTATION.md#rule-categories for all rules
	Type string `pulumi:"type"`
}

// ConfigRuleInput is an input type that accepts ConfigRuleArgs and ConfigRuleOutput values.
// You can construct a concrete instance of `ConfigRuleInput` via:
//
//	ConfigRuleArgs{...}
type ConfigRuleInput interface {
	pulumi.Input

	ToConfigRuleOutput() ConfigRuleOutput
	ToConfigRuleOutputWithContext(context.Context) ConfigRuleOutput
}

type ConfigRuleArgs struct {
	// The comment for the rule.
	Comment pulumi.StringPtrInput `pulumi:"comment"`
	// The rule for the database engine.
	Engine pulumi.StringInput `pulumi:"engine"`
	// The rule level.
	Level pulumi.StringInput `pulumi:"level"`
	// The payload is a JSON string that varies by rule type. Check https://github.com/bytebase/bytebase/blob/main/proto/v1/v1/SQL*REVIEW*RULES_DOCUMENTATION.md#payload-structure-types for all details
	Payload pulumi.StringPtrInput `pulumi:"payload"`
	// The rule unique type. Check https://github.com/bytebase/bytebase/blob/main/proto/v1/v1/SQL*REVIEW*RULES_DOCUMENTATION.md#rule-categories for all rules
	Type pulumi.StringInput `pulumi:"type"`
}

func (ConfigRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigRule)(nil)).Elem()
}

func (i ConfigRuleArgs) ToConfigRuleOutput() ConfigRuleOutput {
	return i.ToConfigRuleOutputWithContext(context.Background())
}

func (i ConfigRuleArgs) ToConfigRuleOutputWithContext(ctx context.Context) ConfigRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigRuleOutput)
}

// ConfigRuleArrayInput is an input type that accepts ConfigRuleArray and ConfigRuleArrayOutput values.
// You can construct a concrete instance of `ConfigRuleArrayInput` via:
//
//	ConfigRuleArray{ ConfigRuleArgs{...} }
type ConfigRuleArrayInput interface {
	pulumi.Input

	ToConfigRuleArrayOutput() ConfigRuleArrayOutput
	ToConfigRuleArrayOutputWithContext(context.Context) ConfigRuleArrayOutput
}

type ConfigRuleArray []ConfigRuleInput

func (ConfigRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConfigRule)(nil)).Elem()
}

func (i ConfigRuleArray) ToConfigRuleArrayOutput() ConfigRuleArrayOutput {
	return i.ToConfigRuleArrayOutputWithContext(context.Background())
}

func (i ConfigRuleArray) ToConfigRuleArrayOutputWithContext(ctx context.Context) ConfigRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigRuleArrayOutput)
}

type ConfigRuleOutput struct{ *pulumi.OutputState }

func (ConfigRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigRule)(nil)).Elem()
}

func (o ConfigRuleOutput) ToConfigRuleOutput() ConfigRuleOutput {
	return o
}

func (o ConfigRuleOutput) ToConfigRuleOutputWithContext(ctx context.Context) ConfigRuleOutput {
	return o
}

// The comment for the rule.
func (o ConfigRuleOutput) Comment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigRule) *string { return v.Comment }).(pulumi.StringPtrOutput)
}

// The rule for the database engine.
func (o ConfigRuleOutput) Engine() pulumi.StringOutput {
	return o.ApplyT(func(v ConfigRule) string { return v.Engine }).(pulumi.StringOutput)
}

// The rule level.
func (o ConfigRuleOutput) Level() pulumi.StringOutput {
	return o.ApplyT(func(v ConfigRule) string { return v.Level }).(pulumi.StringOutput)
}

// The payload is a JSON string that varies by rule type. Check https://github.com/bytebase/bytebase/blob/main/proto/v1/v1/SQL*REVIEW*RULES_DOCUMENTATION.md#payload-structure-types for all details
func (o ConfigRuleOutput) Payload() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigRule) *string { return v.Payload }).(pulumi.StringPtrOutput)
}

// The rule unique type. Check https://github.com/bytebase/bytebase/blob/main/proto/v1/v1/SQL*REVIEW*RULES_DOCUMENTATION.md#rule-categories for all rules
func (o ConfigRuleOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ConfigRule) string { return v.Type }).(pulumi.StringOutput)
}

type ConfigRuleArrayOutput struct{ *pulumi.OutputState }

func (ConfigRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConfigRule)(nil)).Elem()
}

func (o ConfigRuleArrayOutput) ToConfigRuleArrayOutput() ConfigRuleArrayOutput {
	return o
}

func (o ConfigRuleArrayOutput) ToConfigRuleArrayOutputWithContext(ctx context.Context) ConfigRuleArrayOutput {
	return o
}

func (o ConfigRuleArrayOutput) Index(i pulumi.IntInput) ConfigRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ConfigRule {
		return vs[0].([]ConfigRule)[vs[1].(int)]
	}).(ConfigRuleOutput)
}

type GetConfigRule struct {
	// The comment for the rule.
	Comment string `pulumi:"comment"`
	// The rule for the database engine.
	Engine string `pulumi:"engine"`
	// The rule level.
	Level string `pulumi:"level"`
	// The payload for the rule.
	Payload string `pulumi:"payload"`
	// The rule unique type. Check https://www.bytebase.com/docs/sql-review/review-rules for all rules
	Type string `pulumi:"type"`
}

// GetConfigRuleInput is an input type that accepts GetConfigRuleArgs and GetConfigRuleOutput values.
// You can construct a concrete instance of `GetConfigRuleInput` via:
//
//	GetConfigRuleArgs{...}
type GetConfigRuleInput interface {
	pulumi.Input

	ToGetConfigRuleOutput() GetConfigRuleOutput
	ToGetConfigRuleOutputWithContext(context.Context) GetConfigRuleOutput
}

type GetConfigRuleArgs struct {
	// The comment for the rule.
	Comment pulumi.StringInput `pulumi:"comment"`
	// The rule for the database engine.
	Engine pulumi.StringInput `pulumi:"engine"`
	// The rule level.
	Level pulumi.StringInput `pulumi:"level"`
	// The payload for the rule.
	Payload pulumi.StringInput `pulumi:"payload"`
	// The rule unique type. Check https://www.bytebase.com/docs/sql-review/review-rules for all rules
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetConfigRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConfigRule)(nil)).Elem()
}

func (i GetConfigRuleArgs) ToGetConfigRuleOutput() GetConfigRuleOutput {
	return i.ToGetConfigRuleOutputWithContext(context.Background())
}

func (i GetConfigRuleArgs) ToGetConfigRuleOutputWithContext(ctx context.Context) GetConfigRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConfigRuleOutput)
}

// GetConfigRuleArrayInput is an input type that accepts GetConfigRuleArray and GetConfigRuleArrayOutput values.
// You can construct a concrete instance of `GetConfigRuleArrayInput` via:
//
//	GetConfigRuleArray{ GetConfigRuleArgs{...} }
type GetConfigRuleArrayInput interface {
	pulumi.Input

	ToGetConfigRuleArrayOutput() GetConfigRuleArrayOutput
	ToGetConfigRuleArrayOutputWithContext(context.Context) GetConfigRuleArrayOutput
}

type GetConfigRuleArray []GetConfigRuleInput

func (GetConfigRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConfigRule)(nil)).Elem()
}

func (i GetConfigRuleArray) ToGetConfigRuleArrayOutput() GetConfigRuleArrayOutput {
	return i.ToGetConfigRuleArrayOutputWithContext(context.Background())
}

func (i GetConfigRuleArray) ToGetConfigRuleArrayOutputWithContext(ctx context.Context) GetConfigRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConfigRuleArrayOutput)
}

type GetConfigRuleOutput struct{ *pulumi.OutputState }

func (GetConfigRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConfigRule)(nil)).Elem()
}

func (o GetConfigRuleOutput) ToGetConfigRuleOutput() GetConfigRuleOutput {
	return o
}

func (o GetConfigRuleOutput) ToGetConfigRuleOutputWithContext(ctx context.Context) GetConfigRuleOutput {
	return o
}

// The comment for the rule.
func (o GetConfigRuleOutput) Comment() pulumi.StringOutput {
	return o.ApplyT(func(v GetConfigRule) string { return v.Comment }).(pulumi.StringOutput)
}

// The rule for the database engine.
func (o GetConfigRuleOutput) Engine() pulumi.StringOutput {
	return o.ApplyT(func(v GetConfigRule) string { return v.Engine }).(pulumi.StringOutput)
}

// The rule level.
func (o GetConfigRuleOutput) Level() pulumi.StringOutput {
	return o.ApplyT(func(v GetConfigRule) string { return v.Level }).(pulumi.StringOutput)
}

// The payload for the rule.
func (o GetConfigRuleOutput) Payload() pulumi.StringOutput {
	return o.ApplyT(func(v GetConfigRule) string { return v.Payload }).(pulumi.StringOutput)
}

// The rule unique type. Check https://www.bytebase.com/docs/sql-review/review-rules for all rules
func (o GetConfigRuleOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetConfigRule) string { return v.Type }).(pulumi.StringOutput)
}

type GetConfigRuleArrayOutput struct{ *pulumi.OutputState }

func (GetConfigRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConfigRule)(nil)).Elem()
}

func (o GetConfigRuleArrayOutput) ToGetConfigRuleArrayOutput() GetConfigRuleArrayOutput {
	return o
}

func (o GetConfigRuleArrayOutput) ToGetConfigRuleArrayOutputWithContext(ctx context.Context) GetConfigRuleArrayOutput {
	return o
}

func (o GetConfigRuleArrayOutput) Index(i pulumi.IntInput) GetConfigRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetConfigRule {
		return vs[0].([]GetConfigRule)[vs[1].(int)]
	}).(GetConfigRuleOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigRuleInput)(nil)).Elem(), ConfigRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigRuleArrayInput)(nil)).Elem(), ConfigRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConfigRuleInput)(nil)).Elem(), GetConfigRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConfigRuleArrayInput)(nil)).Elem(), GetConfigRuleArray{})
	pulumi.RegisterOutputType(ConfigRuleOutput{})
	pulumi.RegisterOutputType(ConfigRuleArrayOutput{})
	pulumi.RegisterOutputType(GetConfigRuleOutput{})
	pulumi.RegisterOutputType(GetConfigRuleArrayOutput{})
}
