// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package bytebase

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/wawilow/pulumi-bytebase/sdk/go/bytebase/internal"
)

// The instance data source.
func LookupInstance(ctx *pulumi.Context, args *LookupInstanceArgs, opts ...pulumi.InvokeOption) (*LookupInstanceResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupInstanceResult
	err := ctx.Invoke("bytebase:index/getInstance:getInstance", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getInstance.
type LookupInstanceArgs struct {
	// List all databases in this instance. If false, will only list 500 databases.
	ListAllDatabases *bool `pulumi:"listAllDatabases"`
	// The instance unique resource id.
	ResourceId string `pulumi:"resourceId"`
}

// A collection of values returned by getInstance.
type LookupInstanceResult struct {
	// Whether assign license for this instance or not.
	Activation  bool                    `pulumi:"activation"`
	DataSources []GetInstanceDataSource `pulumi:"dataSources"`
	// The databases full name in the resource.
	Databases []string `pulumi:"databases"`
	// The instance engine. Support MYSQL, POSTGRES, TIDB, SNOWFLAKE, CLICKHOUSE, MONGODB, SQLITE, REDIS, ORACLE, SPANNER, MSSQL, REDSHIFT, MARIADB, OCEANBASE, COCKROACHDB.
	Engine string `pulumi:"engine"`
	// The engine version.
	EngineVersion string `pulumi:"engineVersion"`
	// The environment name for your instance in "environments/{resource id}" format.
	Environment string `pulumi:"environment"`
	// The external console URL managing this instance (e.g. AWS RDS console, your in-house DB instance console)
	ExternalLink string `pulumi:"externalLink"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// List all databases in this instance. If false, will only list 500 databases.
	ListAllDatabases *bool `pulumi:"listAllDatabases"`
	// The maximum number of connections. The default value is 10.
	MaximumConnections int `pulumi:"maximumConnections"`
	// The instance full name in instances/{resource id} format.
	Name string `pulumi:"name"`
	// The instance unique resource id.
	ResourceId string `pulumi:"resourceId"`
	// How often the instance is synced in seconds. Default 0, means never sync.
	SyncInterval int `pulumi:"syncInterval"`
	// The instance title.
	Title string `pulumi:"title"`
}

func LookupInstanceOutput(ctx *pulumi.Context, args LookupInstanceOutputArgs, opts ...pulumi.InvokeOption) LookupInstanceResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupInstanceResultOutput, error) {
			args := v.(LookupInstanceArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("bytebase:index/getInstance:getInstance", args, LookupInstanceResultOutput{}, options).(LookupInstanceResultOutput), nil
		}).(LookupInstanceResultOutput)
}

// A collection of arguments for invoking getInstance.
type LookupInstanceOutputArgs struct {
	// List all databases in this instance. If false, will only list 500 databases.
	ListAllDatabases pulumi.BoolPtrInput `pulumi:"listAllDatabases"`
	// The instance unique resource id.
	ResourceId pulumi.StringInput `pulumi:"resourceId"`
}

func (LookupInstanceOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupInstanceArgs)(nil)).Elem()
}

// A collection of values returned by getInstance.
type LookupInstanceResultOutput struct{ *pulumi.OutputState }

func (LookupInstanceResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupInstanceResult)(nil)).Elem()
}

func (o LookupInstanceResultOutput) ToLookupInstanceResultOutput() LookupInstanceResultOutput {
	return o
}

func (o LookupInstanceResultOutput) ToLookupInstanceResultOutputWithContext(ctx context.Context) LookupInstanceResultOutput {
	return o
}

// Whether assign license for this instance or not.
func (o LookupInstanceResultOutput) Activation() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupInstanceResult) bool { return v.Activation }).(pulumi.BoolOutput)
}

func (o LookupInstanceResultOutput) DataSources() GetInstanceDataSourceArrayOutput {
	return o.ApplyT(func(v LookupInstanceResult) []GetInstanceDataSource { return v.DataSources }).(GetInstanceDataSourceArrayOutput)
}

// The databases full name in the resource.
func (o LookupInstanceResultOutput) Databases() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupInstanceResult) []string { return v.Databases }).(pulumi.StringArrayOutput)
}

// The instance engine. Support MYSQL, POSTGRES, TIDB, SNOWFLAKE, CLICKHOUSE, MONGODB, SQLITE, REDIS, ORACLE, SPANNER, MSSQL, REDSHIFT, MARIADB, OCEANBASE, COCKROACHDB.
func (o LookupInstanceResultOutput) Engine() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInstanceResult) string { return v.Engine }).(pulumi.StringOutput)
}

// The engine version.
func (o LookupInstanceResultOutput) EngineVersion() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInstanceResult) string { return v.EngineVersion }).(pulumi.StringOutput)
}

// The environment name for your instance in "environments/{resource id}" format.
func (o LookupInstanceResultOutput) Environment() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInstanceResult) string { return v.Environment }).(pulumi.StringOutput)
}

// The external console URL managing this instance (e.g. AWS RDS console, your in-house DB instance console)
func (o LookupInstanceResultOutput) ExternalLink() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInstanceResult) string { return v.ExternalLink }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupInstanceResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInstanceResult) string { return v.Id }).(pulumi.StringOutput)
}

// List all databases in this instance. If false, will only list 500 databases.
func (o LookupInstanceResultOutput) ListAllDatabases() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LookupInstanceResult) *bool { return v.ListAllDatabases }).(pulumi.BoolPtrOutput)
}

// The maximum number of connections. The default value is 10.
func (o LookupInstanceResultOutput) MaximumConnections() pulumi.IntOutput {
	return o.ApplyT(func(v LookupInstanceResult) int { return v.MaximumConnections }).(pulumi.IntOutput)
}

// The instance full name in instances/{resource id} format.
func (o LookupInstanceResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInstanceResult) string { return v.Name }).(pulumi.StringOutput)
}

// The instance unique resource id.
func (o LookupInstanceResultOutput) ResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInstanceResult) string { return v.ResourceId }).(pulumi.StringOutput)
}

// How often the instance is synced in seconds. Default 0, means never sync.
func (o LookupInstanceResultOutput) SyncInterval() pulumi.IntOutput {
	return o.ApplyT(func(v LookupInstanceResult) int { return v.SyncInterval }).(pulumi.IntOutput)
}

// The instance title.
func (o LookupInstanceResultOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInstanceResult) string { return v.Title }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupInstanceResultOutput{})
}
