// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package group

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/wawilow/pulumi-bytebase/sdk/go/bytebase/internal"
)

var _ = internal.GetEnvOrDefault

type GetListGroup struct {
	// The group description.
	Description string `pulumi:"description"`
	// The members in the group.
	Members []GetListGroupMember `pulumi:"members"`
	// The group name in groups/{email} format.
	Name string `pulumi:"name"`
	// Source means where the group comes from. For now we support Entra ID SCIM sync, so the source could be Entra ID.
	Source string `pulumi:"source"`
	// The group title.
	Title string `pulumi:"title"`
}

// GetListGroupInput is an input type that accepts GetListGroupArgs and GetListGroupOutput values.
// You can construct a concrete instance of `GetListGroupInput` via:
//
//	GetListGroupArgs{...}
type GetListGroupInput interface {
	pulumi.Input

	ToGetListGroupOutput() GetListGroupOutput
	ToGetListGroupOutputWithContext(context.Context) GetListGroupOutput
}

type GetListGroupArgs struct {
	// The group description.
	Description pulumi.StringInput `pulumi:"description"`
	// The members in the group.
	Members GetListGroupMemberArrayInput `pulumi:"members"`
	// The group name in groups/{email} format.
	Name pulumi.StringInput `pulumi:"name"`
	// Source means where the group comes from. For now we support Entra ID SCIM sync, so the source could be Entra ID.
	Source pulumi.StringInput `pulumi:"source"`
	// The group title.
	Title pulumi.StringInput `pulumi:"title"`
}

func (GetListGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetListGroup)(nil)).Elem()
}

func (i GetListGroupArgs) ToGetListGroupOutput() GetListGroupOutput {
	return i.ToGetListGroupOutputWithContext(context.Background())
}

func (i GetListGroupArgs) ToGetListGroupOutputWithContext(ctx context.Context) GetListGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetListGroupOutput)
}

// GetListGroupArrayInput is an input type that accepts GetListGroupArray and GetListGroupArrayOutput values.
// You can construct a concrete instance of `GetListGroupArrayInput` via:
//
//	GetListGroupArray{ GetListGroupArgs{...} }
type GetListGroupArrayInput interface {
	pulumi.Input

	ToGetListGroupArrayOutput() GetListGroupArrayOutput
	ToGetListGroupArrayOutputWithContext(context.Context) GetListGroupArrayOutput
}

type GetListGroupArray []GetListGroupInput

func (GetListGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetListGroup)(nil)).Elem()
}

func (i GetListGroupArray) ToGetListGroupArrayOutput() GetListGroupArrayOutput {
	return i.ToGetListGroupArrayOutputWithContext(context.Background())
}

func (i GetListGroupArray) ToGetListGroupArrayOutputWithContext(ctx context.Context) GetListGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetListGroupArrayOutput)
}

type GetListGroupOutput struct{ *pulumi.OutputState }

func (GetListGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetListGroup)(nil)).Elem()
}

func (o GetListGroupOutput) ToGetListGroupOutput() GetListGroupOutput {
	return o
}

func (o GetListGroupOutput) ToGetListGroupOutputWithContext(ctx context.Context) GetListGroupOutput {
	return o
}

// The group description.
func (o GetListGroupOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetListGroup) string { return v.Description }).(pulumi.StringOutput)
}

// The members in the group.
func (o GetListGroupOutput) Members() GetListGroupMemberArrayOutput {
	return o.ApplyT(func(v GetListGroup) []GetListGroupMember { return v.Members }).(GetListGroupMemberArrayOutput)
}

// The group name in groups/{email} format.
func (o GetListGroupOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetListGroup) string { return v.Name }).(pulumi.StringOutput)
}

// Source means where the group comes from. For now we support Entra ID SCIM sync, so the source could be Entra ID.
func (o GetListGroupOutput) Source() pulumi.StringOutput {
	return o.ApplyT(func(v GetListGroup) string { return v.Source }).(pulumi.StringOutput)
}

// The group title.
func (o GetListGroupOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v GetListGroup) string { return v.Title }).(pulumi.StringOutput)
}

type GetListGroupArrayOutput struct{ *pulumi.OutputState }

func (GetListGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetListGroup)(nil)).Elem()
}

func (o GetListGroupArrayOutput) ToGetListGroupArrayOutput() GetListGroupArrayOutput {
	return o
}

func (o GetListGroupArrayOutput) ToGetListGroupArrayOutputWithContext(ctx context.Context) GetListGroupArrayOutput {
	return o
}

func (o GetListGroupArrayOutput) Index(i pulumi.IntInput) GetListGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetListGroup {
		return vs[0].([]GetListGroup)[vs[1].(int)]
	}).(GetListGroupOutput)
}

type GetListGroupMember struct {
	// The member in users/{email} format.
	Member string `pulumi:"member"`
	// The member's role in the group.
	Role string `pulumi:"role"`
}

// GetListGroupMemberInput is an input type that accepts GetListGroupMemberArgs and GetListGroupMemberOutput values.
// You can construct a concrete instance of `GetListGroupMemberInput` via:
//
//	GetListGroupMemberArgs{...}
type GetListGroupMemberInput interface {
	pulumi.Input

	ToGetListGroupMemberOutput() GetListGroupMemberOutput
	ToGetListGroupMemberOutputWithContext(context.Context) GetListGroupMemberOutput
}

type GetListGroupMemberArgs struct {
	// The member in users/{email} format.
	Member pulumi.StringInput `pulumi:"member"`
	// The member's role in the group.
	Role pulumi.StringInput `pulumi:"role"`
}

func (GetListGroupMemberArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetListGroupMember)(nil)).Elem()
}

func (i GetListGroupMemberArgs) ToGetListGroupMemberOutput() GetListGroupMemberOutput {
	return i.ToGetListGroupMemberOutputWithContext(context.Background())
}

func (i GetListGroupMemberArgs) ToGetListGroupMemberOutputWithContext(ctx context.Context) GetListGroupMemberOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetListGroupMemberOutput)
}

// GetListGroupMemberArrayInput is an input type that accepts GetListGroupMemberArray and GetListGroupMemberArrayOutput values.
// You can construct a concrete instance of `GetListGroupMemberArrayInput` via:
//
//	GetListGroupMemberArray{ GetListGroupMemberArgs{...} }
type GetListGroupMemberArrayInput interface {
	pulumi.Input

	ToGetListGroupMemberArrayOutput() GetListGroupMemberArrayOutput
	ToGetListGroupMemberArrayOutputWithContext(context.Context) GetListGroupMemberArrayOutput
}

type GetListGroupMemberArray []GetListGroupMemberInput

func (GetListGroupMemberArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetListGroupMember)(nil)).Elem()
}

func (i GetListGroupMemberArray) ToGetListGroupMemberArrayOutput() GetListGroupMemberArrayOutput {
	return i.ToGetListGroupMemberArrayOutputWithContext(context.Background())
}

func (i GetListGroupMemberArray) ToGetListGroupMemberArrayOutputWithContext(ctx context.Context) GetListGroupMemberArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetListGroupMemberArrayOutput)
}

type GetListGroupMemberOutput struct{ *pulumi.OutputState }

func (GetListGroupMemberOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetListGroupMember)(nil)).Elem()
}

func (o GetListGroupMemberOutput) ToGetListGroupMemberOutput() GetListGroupMemberOutput {
	return o
}

func (o GetListGroupMemberOutput) ToGetListGroupMemberOutputWithContext(ctx context.Context) GetListGroupMemberOutput {
	return o
}

// The member in users/{email} format.
func (o GetListGroupMemberOutput) Member() pulumi.StringOutput {
	return o.ApplyT(func(v GetListGroupMember) string { return v.Member }).(pulumi.StringOutput)
}

// The member's role in the group.
func (o GetListGroupMemberOutput) Role() pulumi.StringOutput {
	return o.ApplyT(func(v GetListGroupMember) string { return v.Role }).(pulumi.StringOutput)
}

type GetListGroupMemberArrayOutput struct{ *pulumi.OutputState }

func (GetListGroupMemberArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetListGroupMember)(nil)).Elem()
}

func (o GetListGroupMemberArrayOutput) ToGetListGroupMemberArrayOutput() GetListGroupMemberArrayOutput {
	return o
}

func (o GetListGroupMemberArrayOutput) ToGetListGroupMemberArrayOutputWithContext(ctx context.Context) GetListGroupMemberArrayOutput {
	return o
}

func (o GetListGroupMemberArrayOutput) Index(i pulumi.IntInput) GetListGroupMemberOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetListGroupMember {
		return vs[0].([]GetListGroupMember)[vs[1].(int)]
	}).(GetListGroupMemberOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*GetListGroupInput)(nil)).Elem(), GetListGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetListGroupArrayInput)(nil)).Elem(), GetListGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetListGroupMemberInput)(nil)).Elem(), GetListGroupMemberArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetListGroupMemberArrayInput)(nil)).Elem(), GetListGroupMemberArray{})
	pulumi.RegisterOutputType(GetListGroupOutput{})
	pulumi.RegisterOutputType(GetListGroupArrayOutput{})
	pulumi.RegisterOutputType(GetListGroupMemberOutput{})
	pulumi.RegisterOutputType(GetListGroupMemberArrayOutput{})
}
