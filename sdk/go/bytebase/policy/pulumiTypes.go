// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package policy

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/wawilow/pulumi-bytebase/sdk/go/bytebase/internal"
)

var _ = internal.GetEnvOrDefault

type GetListPolicy struct {
	// Decide if the policy is enforced.
	Enforce             bool                             `pulumi:"enforce"`
	GlobalMaskingPolicy GetListPolicyGlobalMaskingPolicy `pulumi:"globalMaskingPolicy"`
	// Decide if the policy should inherit from the parent.
	InheritFromParent      bool                                `pulumi:"inheritFromParent"`
	MaskingExceptionPolicy GetListPolicyMaskingExceptionPolicy `pulumi:"maskingExceptionPolicy"`
	// The policy full name
	Name string `pulumi:"name"`
	// The policy type.
	Type string `pulumi:"type"`
}

// GetListPolicyInput is an input type that accepts GetListPolicyArgs and GetListPolicyOutput values.
// You can construct a concrete instance of `GetListPolicyInput` via:
//
//	GetListPolicyArgs{...}
type GetListPolicyInput interface {
	pulumi.Input

	ToGetListPolicyOutput() GetListPolicyOutput
	ToGetListPolicyOutputWithContext(context.Context) GetListPolicyOutput
}

type GetListPolicyArgs struct {
	// Decide if the policy is enforced.
	Enforce             pulumi.BoolInput                      `pulumi:"enforce"`
	GlobalMaskingPolicy GetListPolicyGlobalMaskingPolicyInput `pulumi:"globalMaskingPolicy"`
	// Decide if the policy should inherit from the parent.
	InheritFromParent      pulumi.BoolInput                         `pulumi:"inheritFromParent"`
	MaskingExceptionPolicy GetListPolicyMaskingExceptionPolicyInput `pulumi:"maskingExceptionPolicy"`
	// The policy full name
	Name pulumi.StringInput `pulumi:"name"`
	// The policy type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetListPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetListPolicy)(nil)).Elem()
}

func (i GetListPolicyArgs) ToGetListPolicyOutput() GetListPolicyOutput {
	return i.ToGetListPolicyOutputWithContext(context.Background())
}

func (i GetListPolicyArgs) ToGetListPolicyOutputWithContext(ctx context.Context) GetListPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetListPolicyOutput)
}

// GetListPolicyArrayInput is an input type that accepts GetListPolicyArray and GetListPolicyArrayOutput values.
// You can construct a concrete instance of `GetListPolicyArrayInput` via:
//
//	GetListPolicyArray{ GetListPolicyArgs{...} }
type GetListPolicyArrayInput interface {
	pulumi.Input

	ToGetListPolicyArrayOutput() GetListPolicyArrayOutput
	ToGetListPolicyArrayOutputWithContext(context.Context) GetListPolicyArrayOutput
}

type GetListPolicyArray []GetListPolicyInput

func (GetListPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetListPolicy)(nil)).Elem()
}

func (i GetListPolicyArray) ToGetListPolicyArrayOutput() GetListPolicyArrayOutput {
	return i.ToGetListPolicyArrayOutputWithContext(context.Background())
}

func (i GetListPolicyArray) ToGetListPolicyArrayOutputWithContext(ctx context.Context) GetListPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetListPolicyArrayOutput)
}

type GetListPolicyOutput struct{ *pulumi.OutputState }

func (GetListPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetListPolicy)(nil)).Elem()
}

func (o GetListPolicyOutput) ToGetListPolicyOutput() GetListPolicyOutput {
	return o
}

func (o GetListPolicyOutput) ToGetListPolicyOutputWithContext(ctx context.Context) GetListPolicyOutput {
	return o
}

// Decide if the policy is enforced.
func (o GetListPolicyOutput) Enforce() pulumi.BoolOutput {
	return o.ApplyT(func(v GetListPolicy) bool { return v.Enforce }).(pulumi.BoolOutput)
}

func (o GetListPolicyOutput) GlobalMaskingPolicy() GetListPolicyGlobalMaskingPolicyOutput {
	return o.ApplyT(func(v GetListPolicy) GetListPolicyGlobalMaskingPolicy { return v.GlobalMaskingPolicy }).(GetListPolicyGlobalMaskingPolicyOutput)
}

// Decide if the policy should inherit from the parent.
func (o GetListPolicyOutput) InheritFromParent() pulumi.BoolOutput {
	return o.ApplyT(func(v GetListPolicy) bool { return v.InheritFromParent }).(pulumi.BoolOutput)
}

func (o GetListPolicyOutput) MaskingExceptionPolicy() GetListPolicyMaskingExceptionPolicyOutput {
	return o.ApplyT(func(v GetListPolicy) GetListPolicyMaskingExceptionPolicy { return v.MaskingExceptionPolicy }).(GetListPolicyMaskingExceptionPolicyOutput)
}

// The policy full name
func (o GetListPolicyOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetListPolicy) string { return v.Name }).(pulumi.StringOutput)
}

// The policy type.
func (o GetListPolicyOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetListPolicy) string { return v.Type }).(pulumi.StringOutput)
}

type GetListPolicyArrayOutput struct{ *pulumi.OutputState }

func (GetListPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetListPolicy)(nil)).Elem()
}

func (o GetListPolicyArrayOutput) ToGetListPolicyArrayOutput() GetListPolicyArrayOutput {
	return o
}

func (o GetListPolicyArrayOutput) ToGetListPolicyArrayOutputWithContext(ctx context.Context) GetListPolicyArrayOutput {
	return o
}

func (o GetListPolicyArrayOutput) Index(i pulumi.IntInput) GetListPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetListPolicy {
		return vs[0].([]GetListPolicy)[vs[1].(int)]
	}).(GetListPolicyOutput)
}

type GetListPolicyGlobalMaskingPolicy struct {
	Rules []GetListPolicyGlobalMaskingPolicyRule `pulumi:"rules"`
}

// GetListPolicyGlobalMaskingPolicyInput is an input type that accepts GetListPolicyGlobalMaskingPolicyArgs and GetListPolicyGlobalMaskingPolicyOutput values.
// You can construct a concrete instance of `GetListPolicyGlobalMaskingPolicyInput` via:
//
//	GetListPolicyGlobalMaskingPolicyArgs{...}
type GetListPolicyGlobalMaskingPolicyInput interface {
	pulumi.Input

	ToGetListPolicyGlobalMaskingPolicyOutput() GetListPolicyGlobalMaskingPolicyOutput
	ToGetListPolicyGlobalMaskingPolicyOutputWithContext(context.Context) GetListPolicyGlobalMaskingPolicyOutput
}

type GetListPolicyGlobalMaskingPolicyArgs struct {
	Rules GetListPolicyGlobalMaskingPolicyRuleArrayInput `pulumi:"rules"`
}

func (GetListPolicyGlobalMaskingPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetListPolicyGlobalMaskingPolicy)(nil)).Elem()
}

func (i GetListPolicyGlobalMaskingPolicyArgs) ToGetListPolicyGlobalMaskingPolicyOutput() GetListPolicyGlobalMaskingPolicyOutput {
	return i.ToGetListPolicyGlobalMaskingPolicyOutputWithContext(context.Background())
}

func (i GetListPolicyGlobalMaskingPolicyArgs) ToGetListPolicyGlobalMaskingPolicyOutputWithContext(ctx context.Context) GetListPolicyGlobalMaskingPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetListPolicyGlobalMaskingPolicyOutput)
}

type GetListPolicyGlobalMaskingPolicyOutput struct{ *pulumi.OutputState }

func (GetListPolicyGlobalMaskingPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetListPolicyGlobalMaskingPolicy)(nil)).Elem()
}

func (o GetListPolicyGlobalMaskingPolicyOutput) ToGetListPolicyGlobalMaskingPolicyOutput() GetListPolicyGlobalMaskingPolicyOutput {
	return o
}

func (o GetListPolicyGlobalMaskingPolicyOutput) ToGetListPolicyGlobalMaskingPolicyOutputWithContext(ctx context.Context) GetListPolicyGlobalMaskingPolicyOutput {
	return o
}

func (o GetListPolicyGlobalMaskingPolicyOutput) Rules() GetListPolicyGlobalMaskingPolicyRuleArrayOutput {
	return o.ApplyT(func(v GetListPolicyGlobalMaskingPolicy) []GetListPolicyGlobalMaskingPolicyRule { return v.Rules }).(GetListPolicyGlobalMaskingPolicyRuleArrayOutput)
}

type GetListPolicyGlobalMaskingPolicyRule struct {
	// The condition expression
	Condition string `pulumi:"condition"`
	// The unique rule id
	Id string `pulumi:"id"`
	// The semantic type id
	SemanticType string `pulumi:"semanticType"`
	// The title for the rule
	Title *string `pulumi:"title"`
}

// GetListPolicyGlobalMaskingPolicyRuleInput is an input type that accepts GetListPolicyGlobalMaskingPolicyRuleArgs and GetListPolicyGlobalMaskingPolicyRuleOutput values.
// You can construct a concrete instance of `GetListPolicyGlobalMaskingPolicyRuleInput` via:
//
//	GetListPolicyGlobalMaskingPolicyRuleArgs{...}
type GetListPolicyGlobalMaskingPolicyRuleInput interface {
	pulumi.Input

	ToGetListPolicyGlobalMaskingPolicyRuleOutput() GetListPolicyGlobalMaskingPolicyRuleOutput
	ToGetListPolicyGlobalMaskingPolicyRuleOutputWithContext(context.Context) GetListPolicyGlobalMaskingPolicyRuleOutput
}

type GetListPolicyGlobalMaskingPolicyRuleArgs struct {
	// The condition expression
	Condition pulumi.StringInput `pulumi:"condition"`
	// The unique rule id
	Id pulumi.StringInput `pulumi:"id"`
	// The semantic type id
	SemanticType pulumi.StringInput `pulumi:"semanticType"`
	// The title for the rule
	Title pulumi.StringPtrInput `pulumi:"title"`
}

func (GetListPolicyGlobalMaskingPolicyRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetListPolicyGlobalMaskingPolicyRule)(nil)).Elem()
}

func (i GetListPolicyGlobalMaskingPolicyRuleArgs) ToGetListPolicyGlobalMaskingPolicyRuleOutput() GetListPolicyGlobalMaskingPolicyRuleOutput {
	return i.ToGetListPolicyGlobalMaskingPolicyRuleOutputWithContext(context.Background())
}

func (i GetListPolicyGlobalMaskingPolicyRuleArgs) ToGetListPolicyGlobalMaskingPolicyRuleOutputWithContext(ctx context.Context) GetListPolicyGlobalMaskingPolicyRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetListPolicyGlobalMaskingPolicyRuleOutput)
}

// GetListPolicyGlobalMaskingPolicyRuleArrayInput is an input type that accepts GetListPolicyGlobalMaskingPolicyRuleArray and GetListPolicyGlobalMaskingPolicyRuleArrayOutput values.
// You can construct a concrete instance of `GetListPolicyGlobalMaskingPolicyRuleArrayInput` via:
//
//	GetListPolicyGlobalMaskingPolicyRuleArray{ GetListPolicyGlobalMaskingPolicyRuleArgs{...} }
type GetListPolicyGlobalMaskingPolicyRuleArrayInput interface {
	pulumi.Input

	ToGetListPolicyGlobalMaskingPolicyRuleArrayOutput() GetListPolicyGlobalMaskingPolicyRuleArrayOutput
	ToGetListPolicyGlobalMaskingPolicyRuleArrayOutputWithContext(context.Context) GetListPolicyGlobalMaskingPolicyRuleArrayOutput
}

type GetListPolicyGlobalMaskingPolicyRuleArray []GetListPolicyGlobalMaskingPolicyRuleInput

func (GetListPolicyGlobalMaskingPolicyRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetListPolicyGlobalMaskingPolicyRule)(nil)).Elem()
}

func (i GetListPolicyGlobalMaskingPolicyRuleArray) ToGetListPolicyGlobalMaskingPolicyRuleArrayOutput() GetListPolicyGlobalMaskingPolicyRuleArrayOutput {
	return i.ToGetListPolicyGlobalMaskingPolicyRuleArrayOutputWithContext(context.Background())
}

func (i GetListPolicyGlobalMaskingPolicyRuleArray) ToGetListPolicyGlobalMaskingPolicyRuleArrayOutputWithContext(ctx context.Context) GetListPolicyGlobalMaskingPolicyRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetListPolicyGlobalMaskingPolicyRuleArrayOutput)
}

type GetListPolicyGlobalMaskingPolicyRuleOutput struct{ *pulumi.OutputState }

func (GetListPolicyGlobalMaskingPolicyRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetListPolicyGlobalMaskingPolicyRule)(nil)).Elem()
}

func (o GetListPolicyGlobalMaskingPolicyRuleOutput) ToGetListPolicyGlobalMaskingPolicyRuleOutput() GetListPolicyGlobalMaskingPolicyRuleOutput {
	return o
}

func (o GetListPolicyGlobalMaskingPolicyRuleOutput) ToGetListPolicyGlobalMaskingPolicyRuleOutputWithContext(ctx context.Context) GetListPolicyGlobalMaskingPolicyRuleOutput {
	return o
}

// The condition expression
func (o GetListPolicyGlobalMaskingPolicyRuleOutput) Condition() pulumi.StringOutput {
	return o.ApplyT(func(v GetListPolicyGlobalMaskingPolicyRule) string { return v.Condition }).(pulumi.StringOutput)
}

// The unique rule id
func (o GetListPolicyGlobalMaskingPolicyRuleOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetListPolicyGlobalMaskingPolicyRule) string { return v.Id }).(pulumi.StringOutput)
}

// The semantic type id
func (o GetListPolicyGlobalMaskingPolicyRuleOutput) SemanticType() pulumi.StringOutput {
	return o.ApplyT(func(v GetListPolicyGlobalMaskingPolicyRule) string { return v.SemanticType }).(pulumi.StringOutput)
}

// The title for the rule
func (o GetListPolicyGlobalMaskingPolicyRuleOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetListPolicyGlobalMaskingPolicyRule) *string { return v.Title }).(pulumi.StringPtrOutput)
}

type GetListPolicyGlobalMaskingPolicyRuleArrayOutput struct{ *pulumi.OutputState }

func (GetListPolicyGlobalMaskingPolicyRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetListPolicyGlobalMaskingPolicyRule)(nil)).Elem()
}

func (o GetListPolicyGlobalMaskingPolicyRuleArrayOutput) ToGetListPolicyGlobalMaskingPolicyRuleArrayOutput() GetListPolicyGlobalMaskingPolicyRuleArrayOutput {
	return o
}

func (o GetListPolicyGlobalMaskingPolicyRuleArrayOutput) ToGetListPolicyGlobalMaskingPolicyRuleArrayOutputWithContext(ctx context.Context) GetListPolicyGlobalMaskingPolicyRuleArrayOutput {
	return o
}

func (o GetListPolicyGlobalMaskingPolicyRuleArrayOutput) Index(i pulumi.IntInput) GetListPolicyGlobalMaskingPolicyRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetListPolicyGlobalMaskingPolicyRule {
		return vs[0].([]GetListPolicyGlobalMaskingPolicyRule)[vs[1].(int)]
	}).(GetListPolicyGlobalMaskingPolicyRuleOutput)
}

type GetListPolicyMaskingExceptionPolicy struct {
	Exceptions []GetListPolicyMaskingExceptionPolicyException `pulumi:"exceptions"`
}

// GetListPolicyMaskingExceptionPolicyInput is an input type that accepts GetListPolicyMaskingExceptionPolicyArgs and GetListPolicyMaskingExceptionPolicyOutput values.
// You can construct a concrete instance of `GetListPolicyMaskingExceptionPolicyInput` via:
//
//	GetListPolicyMaskingExceptionPolicyArgs{...}
type GetListPolicyMaskingExceptionPolicyInput interface {
	pulumi.Input

	ToGetListPolicyMaskingExceptionPolicyOutput() GetListPolicyMaskingExceptionPolicyOutput
	ToGetListPolicyMaskingExceptionPolicyOutputWithContext(context.Context) GetListPolicyMaskingExceptionPolicyOutput
}

type GetListPolicyMaskingExceptionPolicyArgs struct {
	Exceptions GetListPolicyMaskingExceptionPolicyExceptionArrayInput `pulumi:"exceptions"`
}

func (GetListPolicyMaskingExceptionPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetListPolicyMaskingExceptionPolicy)(nil)).Elem()
}

func (i GetListPolicyMaskingExceptionPolicyArgs) ToGetListPolicyMaskingExceptionPolicyOutput() GetListPolicyMaskingExceptionPolicyOutput {
	return i.ToGetListPolicyMaskingExceptionPolicyOutputWithContext(context.Background())
}

func (i GetListPolicyMaskingExceptionPolicyArgs) ToGetListPolicyMaskingExceptionPolicyOutputWithContext(ctx context.Context) GetListPolicyMaskingExceptionPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetListPolicyMaskingExceptionPolicyOutput)
}

type GetListPolicyMaskingExceptionPolicyOutput struct{ *pulumi.OutputState }

func (GetListPolicyMaskingExceptionPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetListPolicyMaskingExceptionPolicy)(nil)).Elem()
}

func (o GetListPolicyMaskingExceptionPolicyOutput) ToGetListPolicyMaskingExceptionPolicyOutput() GetListPolicyMaskingExceptionPolicyOutput {
	return o
}

func (o GetListPolicyMaskingExceptionPolicyOutput) ToGetListPolicyMaskingExceptionPolicyOutputWithContext(ctx context.Context) GetListPolicyMaskingExceptionPolicyOutput {
	return o
}

func (o GetListPolicyMaskingExceptionPolicyOutput) Exceptions() GetListPolicyMaskingExceptionPolicyExceptionArrayOutput {
	return o.ApplyT(func(v GetListPolicyMaskingExceptionPolicy) []GetListPolicyMaskingExceptionPolicyException {
		return v.Exceptions
	}).(GetListPolicyMaskingExceptionPolicyExceptionArrayOutput)
}

type GetListPolicyMaskingExceptionPolicyException struct {
	Action string `pulumi:"action"`
	Column string `pulumi:"column"`
	// The database full name in instances/{instance resource id}/databases/{database name} format
	Database string `pulumi:"database"`
	// The expiration timestamp in YYYY-MM-DDThh:mm:ss.000Z format
	ExpireTimestamp string `pulumi:"expireTimestamp"`
	// The member in user:{email} or group:{email} format.
	Member string `pulumi:"member"`
	// The reason for the masking exemption
	Reason *string `pulumi:"reason"`
	Schema string  `pulumi:"schema"`
	Table  string  `pulumi:"table"`
}

// GetListPolicyMaskingExceptionPolicyExceptionInput is an input type that accepts GetListPolicyMaskingExceptionPolicyExceptionArgs and GetListPolicyMaskingExceptionPolicyExceptionOutput values.
// You can construct a concrete instance of `GetListPolicyMaskingExceptionPolicyExceptionInput` via:
//
//	GetListPolicyMaskingExceptionPolicyExceptionArgs{...}
type GetListPolicyMaskingExceptionPolicyExceptionInput interface {
	pulumi.Input

	ToGetListPolicyMaskingExceptionPolicyExceptionOutput() GetListPolicyMaskingExceptionPolicyExceptionOutput
	ToGetListPolicyMaskingExceptionPolicyExceptionOutputWithContext(context.Context) GetListPolicyMaskingExceptionPolicyExceptionOutput
}

type GetListPolicyMaskingExceptionPolicyExceptionArgs struct {
	Action pulumi.StringInput `pulumi:"action"`
	Column pulumi.StringInput `pulumi:"column"`
	// The database full name in instances/{instance resource id}/databases/{database name} format
	Database pulumi.StringInput `pulumi:"database"`
	// The expiration timestamp in YYYY-MM-DDThh:mm:ss.000Z format
	ExpireTimestamp pulumi.StringInput `pulumi:"expireTimestamp"`
	// The member in user:{email} or group:{email} format.
	Member pulumi.StringInput `pulumi:"member"`
	// The reason for the masking exemption
	Reason pulumi.StringPtrInput `pulumi:"reason"`
	Schema pulumi.StringInput    `pulumi:"schema"`
	Table  pulumi.StringInput    `pulumi:"table"`
}

func (GetListPolicyMaskingExceptionPolicyExceptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetListPolicyMaskingExceptionPolicyException)(nil)).Elem()
}

func (i GetListPolicyMaskingExceptionPolicyExceptionArgs) ToGetListPolicyMaskingExceptionPolicyExceptionOutput() GetListPolicyMaskingExceptionPolicyExceptionOutput {
	return i.ToGetListPolicyMaskingExceptionPolicyExceptionOutputWithContext(context.Background())
}

func (i GetListPolicyMaskingExceptionPolicyExceptionArgs) ToGetListPolicyMaskingExceptionPolicyExceptionOutputWithContext(ctx context.Context) GetListPolicyMaskingExceptionPolicyExceptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetListPolicyMaskingExceptionPolicyExceptionOutput)
}

// GetListPolicyMaskingExceptionPolicyExceptionArrayInput is an input type that accepts GetListPolicyMaskingExceptionPolicyExceptionArray and GetListPolicyMaskingExceptionPolicyExceptionArrayOutput values.
// You can construct a concrete instance of `GetListPolicyMaskingExceptionPolicyExceptionArrayInput` via:
//
//	GetListPolicyMaskingExceptionPolicyExceptionArray{ GetListPolicyMaskingExceptionPolicyExceptionArgs{...} }
type GetListPolicyMaskingExceptionPolicyExceptionArrayInput interface {
	pulumi.Input

	ToGetListPolicyMaskingExceptionPolicyExceptionArrayOutput() GetListPolicyMaskingExceptionPolicyExceptionArrayOutput
	ToGetListPolicyMaskingExceptionPolicyExceptionArrayOutputWithContext(context.Context) GetListPolicyMaskingExceptionPolicyExceptionArrayOutput
}

type GetListPolicyMaskingExceptionPolicyExceptionArray []GetListPolicyMaskingExceptionPolicyExceptionInput

func (GetListPolicyMaskingExceptionPolicyExceptionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetListPolicyMaskingExceptionPolicyException)(nil)).Elem()
}

func (i GetListPolicyMaskingExceptionPolicyExceptionArray) ToGetListPolicyMaskingExceptionPolicyExceptionArrayOutput() GetListPolicyMaskingExceptionPolicyExceptionArrayOutput {
	return i.ToGetListPolicyMaskingExceptionPolicyExceptionArrayOutputWithContext(context.Background())
}

func (i GetListPolicyMaskingExceptionPolicyExceptionArray) ToGetListPolicyMaskingExceptionPolicyExceptionArrayOutputWithContext(ctx context.Context) GetListPolicyMaskingExceptionPolicyExceptionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetListPolicyMaskingExceptionPolicyExceptionArrayOutput)
}

type GetListPolicyMaskingExceptionPolicyExceptionOutput struct{ *pulumi.OutputState }

func (GetListPolicyMaskingExceptionPolicyExceptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetListPolicyMaskingExceptionPolicyException)(nil)).Elem()
}

func (o GetListPolicyMaskingExceptionPolicyExceptionOutput) ToGetListPolicyMaskingExceptionPolicyExceptionOutput() GetListPolicyMaskingExceptionPolicyExceptionOutput {
	return o
}

func (o GetListPolicyMaskingExceptionPolicyExceptionOutput) ToGetListPolicyMaskingExceptionPolicyExceptionOutputWithContext(ctx context.Context) GetListPolicyMaskingExceptionPolicyExceptionOutput {
	return o
}

func (o GetListPolicyMaskingExceptionPolicyExceptionOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v GetListPolicyMaskingExceptionPolicyException) string { return v.Action }).(pulumi.StringOutput)
}

func (o GetListPolicyMaskingExceptionPolicyExceptionOutput) Column() pulumi.StringOutput {
	return o.ApplyT(func(v GetListPolicyMaskingExceptionPolicyException) string { return v.Column }).(pulumi.StringOutput)
}

// The database full name in instances/{instance resource id}/databases/{database name} format
func (o GetListPolicyMaskingExceptionPolicyExceptionOutput) Database() pulumi.StringOutput {
	return o.ApplyT(func(v GetListPolicyMaskingExceptionPolicyException) string { return v.Database }).(pulumi.StringOutput)
}

// The expiration timestamp in YYYY-MM-DDThh:mm:ss.000Z format
func (o GetListPolicyMaskingExceptionPolicyExceptionOutput) ExpireTimestamp() pulumi.StringOutput {
	return o.ApplyT(func(v GetListPolicyMaskingExceptionPolicyException) string { return v.ExpireTimestamp }).(pulumi.StringOutput)
}

// The member in user:{email} or group:{email} format.
func (o GetListPolicyMaskingExceptionPolicyExceptionOutput) Member() pulumi.StringOutput {
	return o.ApplyT(func(v GetListPolicyMaskingExceptionPolicyException) string { return v.Member }).(pulumi.StringOutput)
}

// The reason for the masking exemption
func (o GetListPolicyMaskingExceptionPolicyExceptionOutput) Reason() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetListPolicyMaskingExceptionPolicyException) *string { return v.Reason }).(pulumi.StringPtrOutput)
}

func (o GetListPolicyMaskingExceptionPolicyExceptionOutput) Schema() pulumi.StringOutput {
	return o.ApplyT(func(v GetListPolicyMaskingExceptionPolicyException) string { return v.Schema }).(pulumi.StringOutput)
}

func (o GetListPolicyMaskingExceptionPolicyExceptionOutput) Table() pulumi.StringOutput {
	return o.ApplyT(func(v GetListPolicyMaskingExceptionPolicyException) string { return v.Table }).(pulumi.StringOutput)
}

type GetListPolicyMaskingExceptionPolicyExceptionArrayOutput struct{ *pulumi.OutputState }

func (GetListPolicyMaskingExceptionPolicyExceptionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetListPolicyMaskingExceptionPolicyException)(nil)).Elem()
}

func (o GetListPolicyMaskingExceptionPolicyExceptionArrayOutput) ToGetListPolicyMaskingExceptionPolicyExceptionArrayOutput() GetListPolicyMaskingExceptionPolicyExceptionArrayOutput {
	return o
}

func (o GetListPolicyMaskingExceptionPolicyExceptionArrayOutput) ToGetListPolicyMaskingExceptionPolicyExceptionArrayOutputWithContext(ctx context.Context) GetListPolicyMaskingExceptionPolicyExceptionArrayOutput {
	return o
}

func (o GetListPolicyMaskingExceptionPolicyExceptionArrayOutput) Index(i pulumi.IntInput) GetListPolicyMaskingExceptionPolicyExceptionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetListPolicyMaskingExceptionPolicyException {
		return vs[0].([]GetListPolicyMaskingExceptionPolicyException)[vs[1].(int)]
	}).(GetListPolicyMaskingExceptionPolicyExceptionOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*GetListPolicyInput)(nil)).Elem(), GetListPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetListPolicyArrayInput)(nil)).Elem(), GetListPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetListPolicyGlobalMaskingPolicyInput)(nil)).Elem(), GetListPolicyGlobalMaskingPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetListPolicyGlobalMaskingPolicyRuleInput)(nil)).Elem(), GetListPolicyGlobalMaskingPolicyRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetListPolicyGlobalMaskingPolicyRuleArrayInput)(nil)).Elem(), GetListPolicyGlobalMaskingPolicyRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetListPolicyMaskingExceptionPolicyInput)(nil)).Elem(), GetListPolicyMaskingExceptionPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetListPolicyMaskingExceptionPolicyExceptionInput)(nil)).Elem(), GetListPolicyMaskingExceptionPolicyExceptionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetListPolicyMaskingExceptionPolicyExceptionArrayInput)(nil)).Elem(), GetListPolicyMaskingExceptionPolicyExceptionArray{})
	pulumi.RegisterOutputType(GetListPolicyOutput{})
	pulumi.RegisterOutputType(GetListPolicyArrayOutput{})
	pulumi.RegisterOutputType(GetListPolicyGlobalMaskingPolicyOutput{})
	pulumi.RegisterOutputType(GetListPolicyGlobalMaskingPolicyRuleOutput{})
	pulumi.RegisterOutputType(GetListPolicyGlobalMaskingPolicyRuleArrayOutput{})
	pulumi.RegisterOutputType(GetListPolicyMaskingExceptionPolicyOutput{})
	pulumi.RegisterOutputType(GetListPolicyMaskingExceptionPolicyExceptionOutput{})
	pulumi.RegisterOutputType(GetListPolicyMaskingExceptionPolicyExceptionArrayOutput{})
}
