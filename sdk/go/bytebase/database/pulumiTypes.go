// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package database

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/wawilow/pulumi-bytebase/sdk/go/bytebase/internal"
)

var _ = internal.GetEnvOrDefault

type GetListDatabase struct {
	// The database environment, will follow the instance environment by default
	Environment string `pulumi:"environment"`
	// The deployment and policy control labels.
	Labels map[string]string `pulumi:"labels"`
	// The database full name in instances/{instance}/databases/{database} format
	Name string `pulumi:"name"`
	// The project full name for the database in projects/{project} format.
	Project string `pulumi:"project"`
	// The version of database schema.
	SchemaVersion string `pulumi:"schemaVersion"`
	// The existence of a database.
	State string `pulumi:"state"`
	// The latest synchronization time.
	SuccessfulSyncTime string `pulumi:"successfulSyncTime"`
}

// GetListDatabaseInput is an input type that accepts GetListDatabaseArgs and GetListDatabaseOutput values.
// You can construct a concrete instance of `GetListDatabaseInput` via:
//
//	GetListDatabaseArgs{...}
type GetListDatabaseInput interface {
	pulumi.Input

	ToGetListDatabaseOutput() GetListDatabaseOutput
	ToGetListDatabaseOutputWithContext(context.Context) GetListDatabaseOutput
}

type GetListDatabaseArgs struct {
	// The database environment, will follow the instance environment by default
	Environment pulumi.StringInput `pulumi:"environment"`
	// The deployment and policy control labels.
	Labels pulumi.StringMapInput `pulumi:"labels"`
	// The database full name in instances/{instance}/databases/{database} format
	Name pulumi.StringInput `pulumi:"name"`
	// The project full name for the database in projects/{project} format.
	Project pulumi.StringInput `pulumi:"project"`
	// The version of database schema.
	SchemaVersion pulumi.StringInput `pulumi:"schemaVersion"`
	// The existence of a database.
	State pulumi.StringInput `pulumi:"state"`
	// The latest synchronization time.
	SuccessfulSyncTime pulumi.StringInput `pulumi:"successfulSyncTime"`
}

func (GetListDatabaseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetListDatabase)(nil)).Elem()
}

func (i GetListDatabaseArgs) ToGetListDatabaseOutput() GetListDatabaseOutput {
	return i.ToGetListDatabaseOutputWithContext(context.Background())
}

func (i GetListDatabaseArgs) ToGetListDatabaseOutputWithContext(ctx context.Context) GetListDatabaseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetListDatabaseOutput)
}

// GetListDatabaseArrayInput is an input type that accepts GetListDatabaseArray and GetListDatabaseArrayOutput values.
// You can construct a concrete instance of `GetListDatabaseArrayInput` via:
//
//	GetListDatabaseArray{ GetListDatabaseArgs{...} }
type GetListDatabaseArrayInput interface {
	pulumi.Input

	ToGetListDatabaseArrayOutput() GetListDatabaseArrayOutput
	ToGetListDatabaseArrayOutputWithContext(context.Context) GetListDatabaseArrayOutput
}

type GetListDatabaseArray []GetListDatabaseInput

func (GetListDatabaseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetListDatabase)(nil)).Elem()
}

func (i GetListDatabaseArray) ToGetListDatabaseArrayOutput() GetListDatabaseArrayOutput {
	return i.ToGetListDatabaseArrayOutputWithContext(context.Background())
}

func (i GetListDatabaseArray) ToGetListDatabaseArrayOutputWithContext(ctx context.Context) GetListDatabaseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetListDatabaseArrayOutput)
}

type GetListDatabaseOutput struct{ *pulumi.OutputState }

func (GetListDatabaseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetListDatabase)(nil)).Elem()
}

func (o GetListDatabaseOutput) ToGetListDatabaseOutput() GetListDatabaseOutput {
	return o
}

func (o GetListDatabaseOutput) ToGetListDatabaseOutputWithContext(ctx context.Context) GetListDatabaseOutput {
	return o
}

// The database environment, will follow the instance environment by default
func (o GetListDatabaseOutput) Environment() pulumi.StringOutput {
	return o.ApplyT(func(v GetListDatabase) string { return v.Environment }).(pulumi.StringOutput)
}

// The deployment and policy control labels.
func (o GetListDatabaseOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetListDatabase) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

// The database full name in instances/{instance}/databases/{database} format
func (o GetListDatabaseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetListDatabase) string { return v.Name }).(pulumi.StringOutput)
}

// The project full name for the database in projects/{project} format.
func (o GetListDatabaseOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v GetListDatabase) string { return v.Project }).(pulumi.StringOutput)
}

// The version of database schema.
func (o GetListDatabaseOutput) SchemaVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetListDatabase) string { return v.SchemaVersion }).(pulumi.StringOutput)
}

// The existence of a database.
func (o GetListDatabaseOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetListDatabase) string { return v.State }).(pulumi.StringOutput)
}

// The latest synchronization time.
func (o GetListDatabaseOutput) SuccessfulSyncTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetListDatabase) string { return v.SuccessfulSyncTime }).(pulumi.StringOutput)
}

type GetListDatabaseArrayOutput struct{ *pulumi.OutputState }

func (GetListDatabaseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetListDatabase)(nil)).Elem()
}

func (o GetListDatabaseArrayOutput) ToGetListDatabaseArrayOutput() GetListDatabaseArrayOutput {
	return o
}

func (o GetListDatabaseArrayOutput) ToGetListDatabaseArrayOutputWithContext(ctx context.Context) GetListDatabaseArrayOutput {
	return o
}

func (o GetListDatabaseArrayOutput) Index(i pulumi.IntInput) GetListDatabaseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetListDatabase {
		return vs[0].([]GetListDatabase)[vs[1].(int)]
	}).(GetListDatabaseOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*GetListDatabaseInput)(nil)).Elem(), GetListDatabaseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetListDatabaseArrayInput)(nil)).Elem(), GetListDatabaseArray{})
	pulumi.RegisterOutputType(GetListDatabaseOutput{})
	pulumi.RegisterOutputType(GetListDatabaseArrayOutput{})
}
