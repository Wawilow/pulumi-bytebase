// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package user

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/wawilow/pulumi-bytebase/sdk/go/bytebase/internal"
)

var _ = internal.GetEnvOrDefault

type GetListUser struct {
	// The user email.
	Email string `pulumi:"email"`
	// The user last change password time.
	LastChangePasswordTime string `pulumi:"lastChangePasswordTime"`
	// The user last login time.
	LastLoginTime string `pulumi:"lastLoginTime"`
	// The mfaEnabled flag means if the user has enabled MFA.
	MfaEnabled bool `pulumi:"mfaEnabled"`
	// The user name in users/{user id or email} format.
	Name string `pulumi:"name"`
	// The user phone.
	Phone string `pulumi:"phone"`
	// Source means where the user comes from. For now we support Entra ID SCIM sync, so the source could be Entra ID.
	Source string `pulumi:"source"`
	// The user is deleted or not.
	State string `pulumi:"state"`
	// The user title.
	Title string `pulumi:"title"`
	// The user type.
	Type string `pulumi:"type"`
}

// GetListUserInput is an input type that accepts GetListUserArgs and GetListUserOutput values.
// You can construct a concrete instance of `GetListUserInput` via:
//
//	GetListUserArgs{...}
type GetListUserInput interface {
	pulumi.Input

	ToGetListUserOutput() GetListUserOutput
	ToGetListUserOutputWithContext(context.Context) GetListUserOutput
}

type GetListUserArgs struct {
	// The user email.
	Email pulumi.StringInput `pulumi:"email"`
	// The user last change password time.
	LastChangePasswordTime pulumi.StringInput `pulumi:"lastChangePasswordTime"`
	// The user last login time.
	LastLoginTime pulumi.StringInput `pulumi:"lastLoginTime"`
	// The mfaEnabled flag means if the user has enabled MFA.
	MfaEnabled pulumi.BoolInput `pulumi:"mfaEnabled"`
	// The user name in users/{user id or email} format.
	Name pulumi.StringInput `pulumi:"name"`
	// The user phone.
	Phone pulumi.StringInput `pulumi:"phone"`
	// Source means where the user comes from. For now we support Entra ID SCIM sync, so the source could be Entra ID.
	Source pulumi.StringInput `pulumi:"source"`
	// The user is deleted or not.
	State pulumi.StringInput `pulumi:"state"`
	// The user title.
	Title pulumi.StringInput `pulumi:"title"`
	// The user type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetListUserArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetListUser)(nil)).Elem()
}

func (i GetListUserArgs) ToGetListUserOutput() GetListUserOutput {
	return i.ToGetListUserOutputWithContext(context.Background())
}

func (i GetListUserArgs) ToGetListUserOutputWithContext(ctx context.Context) GetListUserOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetListUserOutput)
}

// GetListUserArrayInput is an input type that accepts GetListUserArray and GetListUserArrayOutput values.
// You can construct a concrete instance of `GetListUserArrayInput` via:
//
//	GetListUserArray{ GetListUserArgs{...} }
type GetListUserArrayInput interface {
	pulumi.Input

	ToGetListUserArrayOutput() GetListUserArrayOutput
	ToGetListUserArrayOutputWithContext(context.Context) GetListUserArrayOutput
}

type GetListUserArray []GetListUserInput

func (GetListUserArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetListUser)(nil)).Elem()
}

func (i GetListUserArray) ToGetListUserArrayOutput() GetListUserArrayOutput {
	return i.ToGetListUserArrayOutputWithContext(context.Background())
}

func (i GetListUserArray) ToGetListUserArrayOutputWithContext(ctx context.Context) GetListUserArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetListUserArrayOutput)
}

type GetListUserOutput struct{ *pulumi.OutputState }

func (GetListUserOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetListUser)(nil)).Elem()
}

func (o GetListUserOutput) ToGetListUserOutput() GetListUserOutput {
	return o
}

func (o GetListUserOutput) ToGetListUserOutputWithContext(ctx context.Context) GetListUserOutput {
	return o
}

// The user email.
func (o GetListUserOutput) Email() pulumi.StringOutput {
	return o.ApplyT(func(v GetListUser) string { return v.Email }).(pulumi.StringOutput)
}

// The user last change password time.
func (o GetListUserOutput) LastChangePasswordTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetListUser) string { return v.LastChangePasswordTime }).(pulumi.StringOutput)
}

// The user last login time.
func (o GetListUserOutput) LastLoginTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetListUser) string { return v.LastLoginTime }).(pulumi.StringOutput)
}

// The mfaEnabled flag means if the user has enabled MFA.
func (o GetListUserOutput) MfaEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetListUser) bool { return v.MfaEnabled }).(pulumi.BoolOutput)
}

// The user name in users/{user id or email} format.
func (o GetListUserOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetListUser) string { return v.Name }).(pulumi.StringOutput)
}

// The user phone.
func (o GetListUserOutput) Phone() pulumi.StringOutput {
	return o.ApplyT(func(v GetListUser) string { return v.Phone }).(pulumi.StringOutput)
}

// Source means where the user comes from. For now we support Entra ID SCIM sync, so the source could be Entra ID.
func (o GetListUserOutput) Source() pulumi.StringOutput {
	return o.ApplyT(func(v GetListUser) string { return v.Source }).(pulumi.StringOutput)
}

// The user is deleted or not.
func (o GetListUserOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetListUser) string { return v.State }).(pulumi.StringOutput)
}

// The user title.
func (o GetListUserOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v GetListUser) string { return v.Title }).(pulumi.StringOutput)
}

// The user type.
func (o GetListUserOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetListUser) string { return v.Type }).(pulumi.StringOutput)
}

type GetListUserArrayOutput struct{ *pulumi.OutputState }

func (GetListUserArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetListUser)(nil)).Elem()
}

func (o GetListUserArrayOutput) ToGetListUserArrayOutput() GetListUserArrayOutput {
	return o
}

func (o GetListUserArrayOutput) ToGetListUserArrayOutputWithContext(ctx context.Context) GetListUserArrayOutput {
	return o
}

func (o GetListUserArrayOutput) Index(i pulumi.IntInput) GetListUserOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetListUser {
		return vs[0].([]GetListUser)[vs[1].(int)]
	}).(GetListUserOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*GetListUserInput)(nil)).Elem(), GetListUserArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetListUserArrayInput)(nil)).Elem(), GetListUserArray{})
	pulumi.RegisterOutputType(GetListUserOutput{})
	pulumi.RegisterOutputType(GetListUserArrayOutput{})
}
