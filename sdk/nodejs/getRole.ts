// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * The role data source.
 */
export function getRole(args: GetRoleArgs, opts?: pulumi.InvokeOptions): Promise<GetRoleResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("bytebase:index/getRole:getRole", {
        "resourceId": args.resourceId,
    }, opts);
}

/**
 * A collection of arguments for invoking getRole.
 */
export interface GetRoleArgs {
    /**
     * The role unique resource id.
     */
    resourceId: string;
}

/**
 * A collection of values returned by getRole.
 */
export interface GetRoleResult {
    /**
     * The role description.
     */
    readonly description: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * The role full name in roles/{resource id} format.
     */
    readonly name: string;
    /**
     * The role permissions.
     */
    readonly permissions: string[];
    /**
     * The role unique resource id.
     */
    readonly resourceId: string;
    /**
     * The role title.
     */
    readonly title: string;
    /**
     * The role type.
     */
    readonly type: string;
}
/**
 * The role data source.
 */
export function getRoleOutput(args: GetRoleOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetRoleResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("bytebase:index/getRole:getRole", {
        "resourceId": args.resourceId,
    }, opts);
}

/**
 * A collection of arguments for invoking getRole.
 */
export interface GetRoleOutputArgs {
    /**
     * The role unique resource id.
     */
    resourceId: pulumi.Input<string>;
}
