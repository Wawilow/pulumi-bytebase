// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * The project resource.
 */
export class Project extends pulumi.CustomResource {
    /**
     * Get an existing Project resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ProjectState, opts?: pulumi.CustomResourceOptions): Project {
        return new Project(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'bytebase:index/project:Project';

    /**
     * Returns true if the given object is an instance of Project.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Project {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Project.__pulumiType;
    }

    /**
     * Allow modifying statement after issue is created.
     */
    public readonly allowModifyStatement!: pulumi.Output<boolean>;
    /**
     * Whether to allow the issue creator to self-approve the issue.
     */
    public readonly allowSelfApproval!: pulumi.Output<boolean>;
    /**
     * Whether to automatically enable backup.
     */
    public readonly autoEnableBackup!: pulumi.Output<boolean>;
    /**
     * Enable auto resolve issue.
     */
    public readonly autoResolveIssue!: pulumi.Output<boolean>;
    /**
     * The maximum databases of rows to sample during CI data validation. Without specification, sampling is disabled, resulting in a full validation.
     */
    public readonly ciSamplingSize!: pulumi.Output<number>;
    /**
     * The databases full name in the resource.
     */
    public readonly databases!: pulumi.Output<string[] | undefined>;
    /**
     * Enforce issue title created by user instead of generated by Bytebase.
     */
    public readonly enforceIssueTitle!: pulumi.Output<boolean>;
    /**
     * The maximum number of retries for the lock timeout issue.
     */
    public readonly executionRetryPolicy!: pulumi.Output<number>;
    /**
     * The project full name in projects/{resource id} format.
     */
    public /*out*/ readonly name!: pulumi.Output<string>;
    /**
     * The maximum number of parallel tasks to run during the rollout.
     */
    public readonly parallelTasksPerRollout!: pulumi.Output<number>;
    /**
     * Whether to enable the database tenant mode for PostgreSQL. If enabled, the issue will be created with the pre-appended "set role \n\n" statement.
     */
    public readonly postgresDatabaseTenantMode!: pulumi.Output<boolean>;
    /**
     * The project unique resource id. Cannot change this after created.
     */
    public readonly resourceId!: pulumi.Output<string>;
    /**
     * Whether to skip backup errors and continue the data migration.
     */
    public readonly skipBackupErrors!: pulumi.Output<boolean>;
    /**
     * The project title.
     */
    public readonly title!: pulumi.Output<string>;
    /**
     * The webhooks in the project.
     */
    public readonly webhooks!: pulumi.Output<outputs.ProjectWebhook[] | undefined>;

    /**
     * Create a Project resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ProjectArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ProjectArgs | ProjectState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ProjectState | undefined;
            resourceInputs["allowModifyStatement"] = state ? state.allowModifyStatement : undefined;
            resourceInputs["allowSelfApproval"] = state ? state.allowSelfApproval : undefined;
            resourceInputs["autoEnableBackup"] = state ? state.autoEnableBackup : undefined;
            resourceInputs["autoResolveIssue"] = state ? state.autoResolveIssue : undefined;
            resourceInputs["ciSamplingSize"] = state ? state.ciSamplingSize : undefined;
            resourceInputs["databases"] = state ? state.databases : undefined;
            resourceInputs["enforceIssueTitle"] = state ? state.enforceIssueTitle : undefined;
            resourceInputs["executionRetryPolicy"] = state ? state.executionRetryPolicy : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["parallelTasksPerRollout"] = state ? state.parallelTasksPerRollout : undefined;
            resourceInputs["postgresDatabaseTenantMode"] = state ? state.postgresDatabaseTenantMode : undefined;
            resourceInputs["resourceId"] = state ? state.resourceId : undefined;
            resourceInputs["skipBackupErrors"] = state ? state.skipBackupErrors : undefined;
            resourceInputs["title"] = state ? state.title : undefined;
            resourceInputs["webhooks"] = state ? state.webhooks : undefined;
        } else {
            const args = argsOrState as ProjectArgs | undefined;
            if ((!args || args.resourceId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'resourceId'");
            }
            if ((!args || args.title === undefined) && !opts.urn) {
                throw new Error("Missing required property 'title'");
            }
            resourceInputs["allowModifyStatement"] = args ? args.allowModifyStatement : undefined;
            resourceInputs["allowSelfApproval"] = args ? args.allowSelfApproval : undefined;
            resourceInputs["autoEnableBackup"] = args ? args.autoEnableBackup : undefined;
            resourceInputs["autoResolveIssue"] = args ? args.autoResolveIssue : undefined;
            resourceInputs["ciSamplingSize"] = args ? args.ciSamplingSize : undefined;
            resourceInputs["databases"] = args ? args.databases : undefined;
            resourceInputs["enforceIssueTitle"] = args ? args.enforceIssueTitle : undefined;
            resourceInputs["executionRetryPolicy"] = args ? args.executionRetryPolicy : undefined;
            resourceInputs["parallelTasksPerRollout"] = args ? args.parallelTasksPerRollout : undefined;
            resourceInputs["postgresDatabaseTenantMode"] = args ? args.postgresDatabaseTenantMode : undefined;
            resourceInputs["resourceId"] = args ? args.resourceId : undefined;
            resourceInputs["skipBackupErrors"] = args ? args.skipBackupErrors : undefined;
            resourceInputs["title"] = args ? args.title : undefined;
            resourceInputs["webhooks"] = args ? args.webhooks : undefined;
            resourceInputs["name"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Project.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Project resources.
 */
export interface ProjectState {
    /**
     * Allow modifying statement after issue is created.
     */
    allowModifyStatement?: pulumi.Input<boolean>;
    /**
     * Whether to allow the issue creator to self-approve the issue.
     */
    allowSelfApproval?: pulumi.Input<boolean>;
    /**
     * Whether to automatically enable backup.
     */
    autoEnableBackup?: pulumi.Input<boolean>;
    /**
     * Enable auto resolve issue.
     */
    autoResolveIssue?: pulumi.Input<boolean>;
    /**
     * The maximum databases of rows to sample during CI data validation. Without specification, sampling is disabled, resulting in a full validation.
     */
    ciSamplingSize?: pulumi.Input<number>;
    /**
     * The databases full name in the resource.
     */
    databases?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Enforce issue title created by user instead of generated by Bytebase.
     */
    enforceIssueTitle?: pulumi.Input<boolean>;
    /**
     * The maximum number of retries for the lock timeout issue.
     */
    executionRetryPolicy?: pulumi.Input<number>;
    /**
     * The project full name in projects/{resource id} format.
     */
    name?: pulumi.Input<string>;
    /**
     * The maximum number of parallel tasks to run during the rollout.
     */
    parallelTasksPerRollout?: pulumi.Input<number>;
    /**
     * Whether to enable the database tenant mode for PostgreSQL. If enabled, the issue will be created with the pre-appended "set role \n\n" statement.
     */
    postgresDatabaseTenantMode?: pulumi.Input<boolean>;
    /**
     * The project unique resource id. Cannot change this after created.
     */
    resourceId?: pulumi.Input<string>;
    /**
     * Whether to skip backup errors and continue the data migration.
     */
    skipBackupErrors?: pulumi.Input<boolean>;
    /**
     * The project title.
     */
    title?: pulumi.Input<string>;
    /**
     * The webhooks in the project.
     */
    webhooks?: pulumi.Input<pulumi.Input<inputs.ProjectWebhook>[]>;
}

/**
 * The set of arguments for constructing a Project resource.
 */
export interface ProjectArgs {
    /**
     * Allow modifying statement after issue is created.
     */
    allowModifyStatement?: pulumi.Input<boolean>;
    /**
     * Whether to allow the issue creator to self-approve the issue.
     */
    allowSelfApproval?: pulumi.Input<boolean>;
    /**
     * Whether to automatically enable backup.
     */
    autoEnableBackup?: pulumi.Input<boolean>;
    /**
     * Enable auto resolve issue.
     */
    autoResolveIssue?: pulumi.Input<boolean>;
    /**
     * The maximum databases of rows to sample during CI data validation. Without specification, sampling is disabled, resulting in a full validation.
     */
    ciSamplingSize?: pulumi.Input<number>;
    /**
     * The databases full name in the resource.
     */
    databases?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Enforce issue title created by user instead of generated by Bytebase.
     */
    enforceIssueTitle?: pulumi.Input<boolean>;
    /**
     * The maximum number of retries for the lock timeout issue.
     */
    executionRetryPolicy?: pulumi.Input<number>;
    /**
     * The maximum number of parallel tasks to run during the rollout.
     */
    parallelTasksPerRollout?: pulumi.Input<number>;
    /**
     * Whether to enable the database tenant mode for PostgreSQL. If enabled, the issue will be created with the pre-appended "set role \n\n" statement.
     */
    postgresDatabaseTenantMode?: pulumi.Input<boolean>;
    /**
     * The project unique resource id. Cannot change this after created.
     */
    resourceId: pulumi.Input<string>;
    /**
     * Whether to skip backup errors and continue the data migration.
     */
    skipBackupErrors?: pulumi.Input<boolean>;
    /**
     * The project title.
     */
    title: pulumi.Input<string>;
    /**
     * The webhooks in the project.
     */
    webhooks?: pulumi.Input<pulumi.Input<inputs.ProjectWebhook>[]>;
}
