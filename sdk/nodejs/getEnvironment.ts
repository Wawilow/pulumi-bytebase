// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * The environment data source.
 */
export function getEnvironment(args: GetEnvironmentArgs, opts?: pulumi.InvokeOptions): Promise<GetEnvironmentResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("bytebase:index/getEnvironment:getEnvironment", {
        "color": args.color,
        "protected": args.protected,
        "resourceId": args.resourceId,
    }, opts);
}

/**
 * A collection of arguments for invoking getEnvironment.
 */
export interface GetEnvironmentArgs {
    /**
     * The environment color.
     */
    color?: string;
    /**
     * The environment is protected or not.
     */
    protected?: boolean;
    /**
     * The environment unique resource id.
     */
    resourceId: string;
}

/**
 * A collection of values returned by getEnvironment.
 */
export interface GetEnvironmentResult {
    /**
     * The environment color.
     */
    readonly color?: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * The environment full name in environments/{resource id} format.
     */
    readonly name: string;
    /**
     * The environment sorting order.
     */
    readonly order: number;
    /**
     * The environment is protected or not.
     */
    readonly protected?: boolean;
    /**
     * The environment unique resource id.
     */
    readonly resourceId: string;
    /**
     * The environment unique name.
     */
    readonly title: string;
}
/**
 * The environment data source.
 */
export function getEnvironmentOutput(args: GetEnvironmentOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetEnvironmentResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("bytebase:index/getEnvironment:getEnvironment", {
        "color": args.color,
        "protected": args.protected,
        "resourceId": args.resourceId,
    }, opts);
}

/**
 * A collection of arguments for invoking getEnvironment.
 */
export interface GetEnvironmentOutputArgs {
    /**
     * The environment color.
     */
    color?: pulumi.Input<string>;
    /**
     * The environment is protected or not.
     */
    protected?: pulumi.Input<boolean>;
    /**
     * The environment unique resource id.
     */
    resourceId: pulumi.Input<string>;
}
