// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * The risk data source.
 */
export function getRisk(args: GetRiskArgs, opts?: pulumi.InvokeOptions): Promise<GetRiskResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("bytebase:index/getRisk:getRisk", {
        "name": args.name,
    }, opts);
}

/**
 * A collection of arguments for invoking getRisk.
 */
export interface GetRiskArgs {
    /**
     * The risk full name in risks/{uid} format.
     */
    name: string;
}

/**
 * A collection of values returned by getRisk.
 */
export interface GetRiskResult {
    /**
     * The risk active.
     */
    readonly active: boolean;
    /**
     * The risk condition.
     */
    readonly condition: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * The risk level.
     */
    readonly level: number;
    /**
     * The risk full name in risks/{uid} format.
     */
    readonly name: string;
    /**
     * The risk source.
     */
    readonly source: string;
    /**
     * The risk title.
     */
    readonly title: string;
}
/**
 * The risk data source.
 */
export function getRiskOutput(args: GetRiskOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetRiskResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("bytebase:index/getRisk:getRisk", {
        "name": args.name,
    }, opts);
}

/**
 * A collection of arguments for invoking getRisk.
 */
export interface GetRiskOutputArgs {
    /**
     * The risk full name in risks/{uid} format.
     */
    name: pulumi.Input<string>;
}
