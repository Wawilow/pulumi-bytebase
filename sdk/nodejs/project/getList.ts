// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * The project data source list.
 */
export function getList(args?: GetListArgs, opts?: pulumi.InvokeOptions): Promise<GetListResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("bytebase:Project/getList:getList", {
        "excludeDefault": args.excludeDefault,
        "query": args.query,
        "state": args.state,
    }, opts);
}

/**
 * A collection of arguments for invoking getList.
 */
export interface GetListArgs {
    /**
     * If not include the default project in the response.
     */
    excludeDefault?: boolean;
    /**
     * Filter projects by name or resource id with wildcard.
     */
    query?: string;
    /**
     * Filter projects by state. Default ACTIVE.
     */
    state?: string;
}

/**
 * A collection of values returned by getList.
 */
export interface GetListResult {
    /**
     * If not include the default project in the response.
     */
    readonly excludeDefault?: boolean;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly projects: outputs.Project.GetListProject[];
    /**
     * Filter projects by name or resource id with wildcard.
     */
    readonly query?: string;
    /**
     * Filter projects by state. Default ACTIVE.
     */
    readonly state?: string;
}
/**
 * The project data source list.
 */
export function getListOutput(args?: GetListOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetListResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("bytebase:Project/getList:getList", {
        "excludeDefault": args.excludeDefault,
        "query": args.query,
        "state": args.state,
    }, opts);
}

/**
 * A collection of arguments for invoking getList.
 */
export interface GetListOutputArgs {
    /**
     * If not include the default project in the response.
     */
    excludeDefault?: pulumi.Input<boolean>;
    /**
     * Filter projects by name or resource id with wildcard.
     */
    query?: pulumi.Input<string>;
    /**
     * Filter projects by state. Default ACTIVE.
     */
    state?: pulumi.Input<string>;
}
