// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * The review config data source.
 */
export function getConfig(opts?: pulumi.InvokeOptions): Promise<GetConfigResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("bytebase:Review/getConfig:getConfig", {
    }, opts);
}

/**
 * A collection of values returned by getConfig.
 */
export interface GetConfigResult {
    /**
     * Enable the SQL review config
     */
    readonly enabled: boolean;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * The unique resource id for the review config.
     */
    readonly resourceId: string;
    /**
     * Resources using the config. We support attach the review config for environments or projects with format {resurce}/{resource id}. For example, environments/test, projects/sample.
     */
    readonly resources: string[];
    /**
     * The SQL review rules.
     */
    readonly rules: outputs.Review.GetConfigRule[];
    /**
     * The title for the review config.
     */
    readonly title: string;
}
/**
 * The review config data source.
 */
export function getConfigOutput(opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetConfigResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("bytebase:Review/getConfig:getConfig", {
    }, opts);
}
