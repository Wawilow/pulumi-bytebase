// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * The user data source list.
 */
export function getList(args?: GetListArgs, opts?: pulumi.InvokeOptions): Promise<GetListResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("bytebase:User/getList:getList", {
        "email": args.email,
        "name": args.name,
        "project": args.project,
        "state": args.state,
        "userTypes": args.userTypes,
    }, opts);
}

/**
 * A collection of arguments for invoking getList.
 */
export interface GetListArgs {
    /**
     * Filter users by email with wildcard
     */
    email?: string;
    /**
     * Filter users by name with wildcard
     */
    name?: string;
    /**
     * The project full name. Filter users by project.
     */
    project?: string;
    /**
     * Filter users by state. Default ACTIVE.
     */
    state?: string;
    /**
     * Filter users by types.
     */
    userTypes?: string[];
}

/**
 * A collection of values returned by getList.
 */
export interface GetListResult {
    /**
     * Filter users by email with wildcard
     */
    readonly email?: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * Filter users by name with wildcard
     */
    readonly name?: string;
    /**
     * The project full name. Filter users by project.
     */
    readonly project?: string;
    /**
     * Filter users by state. Default ACTIVE.
     */
    readonly state?: string;
    /**
     * Filter users by types.
     */
    readonly userTypes?: string[];
    readonly users: outputs.User.GetListUser[];
}
/**
 * The user data source list.
 */
export function getListOutput(args?: GetListOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetListResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("bytebase:User/getList:getList", {
        "email": args.email,
        "name": args.name,
        "project": args.project,
        "state": args.state,
        "userTypes": args.userTypes,
    }, opts);
}

/**
 * A collection of arguments for invoking getList.
 */
export interface GetListOutputArgs {
    /**
     * Filter users by email with wildcard
     */
    email?: pulumi.Input<string>;
    /**
     * Filter users by name with wildcard
     */
    name?: pulumi.Input<string>;
    /**
     * The project full name. Filter users by project.
     */
    project?: pulumi.Input<string>;
    /**
     * Filter users by state. Default ACTIVE.
     */
    state?: pulumi.Input<string>;
    /**
     * Filter users by types.
     */
    userTypes?: pulumi.Input<pulumi.Input<string>[]>;
}
