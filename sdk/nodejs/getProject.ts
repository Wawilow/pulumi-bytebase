// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * The project data source.
 */
export function getProject(args: GetProjectArgs, opts?: pulumi.InvokeOptions): Promise<GetProjectResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("bytebase:index/getProject:getProject", {
        "resourceId": args.resourceId,
    }, opts);
}

/**
 * A collection of arguments for invoking getProject.
 */
export interface GetProjectArgs {
    /**
     * The project unique resource id.
     */
    resourceId: string;
}

/**
 * A collection of values returned by getProject.
 */
export interface GetProjectResult {
    /**
     * Allow modifying statement after issue is created.
     */
    readonly allowModifyStatement: boolean;
    /**
     * Whether to allow the issue creator to self-approve the issue.
     */
    readonly allowSelfApproval: boolean;
    /**
     * Whether to automatically enable backup.
     */
    readonly autoEnableBackup: boolean;
    /**
     * Enable auto resolve issue.
     */
    readonly autoResolveIssue: boolean;
    /**
     * The databases full name in the resource.
     */
    readonly databases: string[];
    /**
     * Enforce issue title created by user instead of generated by Bytebase.
     */
    readonly enforceIssueTitle: boolean;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * The project full name in projects/{resource id} format.
     */
    readonly name: string;
    /**
     * Whether to enable the database tenant mode for PostgreSQL. If enabled, the issue will be created with the pre-appended "set role \n\n" statement.
     */
    readonly postgresDatabaseTenantMode: boolean;
    /**
     * The project unique resource id.
     */
    readonly resourceId: string;
    /**
     * Whether to skip backup errors and continue the data migration.
     */
    readonly skipBackupErrors: boolean;
    /**
     * The project title.
     */
    readonly title: string;
    /**
     * The webhooks in the project.
     */
    readonly webhooks: outputs.GetProjectWebhook[];
}
/**
 * The project data source.
 */
export function getProjectOutput(args: GetProjectOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetProjectResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("bytebase:index/getProject:getProject", {
        "resourceId": args.resourceId,
    }, opts);
}

/**
 * A collection of arguments for invoking getProject.
 */
export interface GetProjectOutputArgs {
    /**
     * The project unique resource id.
     */
    resourceId: pulumi.Input<string>;
}
