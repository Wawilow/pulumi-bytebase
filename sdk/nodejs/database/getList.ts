// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * The database data source list.
 */
export function getList(args: GetListArgs, opts?: pulumi.InvokeOptions): Promise<GetListResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("bytebase:Database/getList:getList", {
        "engines": args.engines,
        "environment": args.environment,
        "excludeUnassigned": args.excludeUnassigned,
        "instance": args.instance,
        "labels": args.labels,
        "parent": args.parent,
        "project": args.project,
        "query": args.query,
    }, opts);
}

/**
 * A collection of arguments for invoking getList.
 */
export interface GetListArgs {
    /**
     * Filter databases by engines.
     */
    engines?: string[];
    /**
     * The environment full name. Filter databases by environment.
     */
    environment?: string;
    /**
     * If not include unassigned databases in the response.
     */
    excludeUnassigned?: boolean;
    /**
     * The instance full name. Filter databases by instance.
     */
    instance?: string;
    /**
     * Filter databases by labels
     */
    labels?: {[key: string]: string};
    parent: string;
    /**
     * The project full name. Filter databases by project.
     */
    project?: string;
    /**
     * Filter databases by name with wildcard
     */
    query?: string;
}

/**
 * A collection of values returned by getList.
 */
export interface GetListResult {
    readonly databases: outputs.Database.GetListDatabase[];
    /**
     * Filter databases by engines.
     */
    readonly engines?: string[];
    /**
     * The environment full name. Filter databases by environment.
     */
    readonly environment?: string;
    /**
     * If not include unassigned databases in the response.
     */
    readonly excludeUnassigned?: boolean;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * The instance full name. Filter databases by instance.
     */
    readonly instance?: string;
    /**
     * Filter databases by labels
     */
    readonly labels?: {[key: string]: string};
    readonly parent: string;
    /**
     * The project full name. Filter databases by project.
     */
    readonly project?: string;
    /**
     * Filter databases by name with wildcard
     */
    readonly query?: string;
}
/**
 * The database data source list.
 */
export function getListOutput(args: GetListOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetListResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("bytebase:Database/getList:getList", {
        "engines": args.engines,
        "environment": args.environment,
        "excludeUnassigned": args.excludeUnassigned,
        "instance": args.instance,
        "labels": args.labels,
        "parent": args.parent,
        "project": args.project,
        "query": args.query,
    }, opts);
}

/**
 * A collection of arguments for invoking getList.
 */
export interface GetListOutputArgs {
    /**
     * Filter databases by engines.
     */
    engines?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The environment full name. Filter databases by environment.
     */
    environment?: pulumi.Input<string>;
    /**
     * If not include unassigned databases in the response.
     */
    excludeUnassigned?: pulumi.Input<boolean>;
    /**
     * The instance full name. Filter databases by instance.
     */
    instance?: pulumi.Input<string>;
    /**
     * Filter databases by labels
     */
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    parent: pulumi.Input<string>;
    /**
     * The project full name. Filter databases by project.
     */
    project?: pulumi.Input<string>;
    /**
     * Filter databases by name with wildcard
     */
    query?: pulumi.Input<string>;
}
