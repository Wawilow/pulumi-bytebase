# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities

__all__ = [
    'GetListUserResult',
]

@pulumi.output_type
class GetListUserResult(dict):
    def __init__(__self__, *,
                 email: _builtins.str,
                 last_change_password_time: _builtins.str,
                 last_login_time: _builtins.str,
                 mfa_enabled: _builtins.bool,
                 name: _builtins.str,
                 phone: _builtins.str,
                 source: _builtins.str,
                 state: _builtins.str,
                 title: _builtins.str,
                 type: _builtins.str):
        """
        :param _builtins.str email: The user email.
        :param _builtins.str last_change_password_time: The user last change password time.
        :param _builtins.str last_login_time: The user last login time.
        :param _builtins.bool mfa_enabled: The mfa_enabled flag means if the user has enabled MFA.
        :param _builtins.str name: The user name in users/{user id or email} format.
        :param _builtins.str phone: The user phone.
        :param _builtins.str source: Source means where the user comes from. For now we support Entra ID SCIM sync, so the source could be Entra ID.
        :param _builtins.str state: The user is deleted or not.
        :param _builtins.str title: The user title.
        :param _builtins.str type: The user type.
        """
        pulumi.set(__self__, "email", email)
        pulumi.set(__self__, "last_change_password_time", last_change_password_time)
        pulumi.set(__self__, "last_login_time", last_login_time)
        pulumi.set(__self__, "mfa_enabled", mfa_enabled)
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "phone", phone)
        pulumi.set(__self__, "source", source)
        pulumi.set(__self__, "state", state)
        pulumi.set(__self__, "title", title)
        pulumi.set(__self__, "type", type)

    @_builtins.property
    @pulumi.getter
    def email(self) -> _builtins.str:
        """
        The user email.
        """
        return pulumi.get(self, "email")

    @_builtins.property
    @pulumi.getter(name="lastChangePasswordTime")
    def last_change_password_time(self) -> _builtins.str:
        """
        The user last change password time.
        """
        return pulumi.get(self, "last_change_password_time")

    @_builtins.property
    @pulumi.getter(name="lastLoginTime")
    def last_login_time(self) -> _builtins.str:
        """
        The user last login time.
        """
        return pulumi.get(self, "last_login_time")

    @_builtins.property
    @pulumi.getter(name="mfaEnabled")
    def mfa_enabled(self) -> _builtins.bool:
        """
        The mfa_enabled flag means if the user has enabled MFA.
        """
        return pulumi.get(self, "mfa_enabled")

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        The user name in users/{user id or email} format.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def phone(self) -> _builtins.str:
        """
        The user phone.
        """
        return pulumi.get(self, "phone")

    @_builtins.property
    @pulumi.getter
    def source(self) -> _builtins.str:
        """
        Source means where the user comes from. For now we support Entra ID SCIM sync, so the source could be Entra ID.
        """
        return pulumi.get(self, "source")

    @_builtins.property
    @pulumi.getter
    def state(self) -> _builtins.str:
        """
        The user is deleted or not.
        """
        return pulumi.get(self, "state")

    @_builtins.property
    @pulumi.getter
    def title(self) -> _builtins.str:
        """
        The user title.
        """
        return pulumi.get(self, "title")

    @_builtins.property
    @pulumi.getter
    def type(self) -> _builtins.str:
        """
        The user type.
        """
        return pulumi.get(self, "type")


